{"ast":null,"code":"import{Web3Provider}from'@ethersproject/providers';import{createWeb3ReactRoot,Web3ReactProvider}from'@web3-react/core';import React from'react';import{isMobile}from'react-device-detect';import ReactDOM from'react-dom';import ReactGA from'react-ga';import{Provider}from'react-redux';import{NetworkContextName}from'./constants';import'inter-ui';import'./i18n';import App from'./pages/App';import store from'./state';import ApplicationUpdater from'./state/application/updater';import TransactionUpdater from'./state/transactions/updater';import ListsUpdater from'./state/lists/updater';import UserUpdater from'./state/user/updater';import MulticallUpdater from'./state/multicall/updater';import ThemeProvider,{FixedGlobalStyle,ThemedGlobalStyle}from'./theme';var Web3ProviderNetwork=createWeb3ReactRoot(NetworkContextName);if('ethereum'in window){;window.ethereum.autoRefreshOnNetworkChange=false;}function getLibrary(provider){var library=new Web3Provider(provider);library.pollingInterval=15000;return library;}var GOOGLE_ANALYTICS_ID=process.env.REACT_APP_GOOGLE_ANALYTICS_ID;if(typeof GOOGLE_ANALYTICS_ID==='string'){ReactGA.initialize(GOOGLE_ANALYTICS_ID);ReactGA.set({customBrowserType:!isMobile?'desktop':'web3'in window||'ethereum'in window?'mobileWeb3':'mobileRegular'});}else{ReactGA.initialize('test',{testMode:true,debug:true});}window.addEventListener('error',function(error){ReactGA.exception({description:\"\".concat(error.message,\" @ \").concat(error.filename,\":\").concat(error.lineno,\":\").concat(error.colno),fatal:true});});function Updaters(){return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(ListsUpdater,null),/*#__PURE__*/React.createElement(UserUpdater,null),/*#__PURE__*/React.createElement(ApplicationUpdater,null),/*#__PURE__*/React.createElement(TransactionUpdater,null),/*#__PURE__*/React.createElement(MulticallUpdater,null));}ReactDOM.render(/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(FixedGlobalStyle,null),/*#__PURE__*/React.createElement(Web3ReactProvider,{getLibrary:getLibrary},/*#__PURE__*/React.createElement(Web3ProviderNetwork,{getLibrary:getLibrary},/*#__PURE__*/React.createElement(Provider,{store:store},/*#__PURE__*/React.createElement(Updaters,null),/*#__PURE__*/React.createElement(ThemeProvider,null,/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(ThemedGlobalStyle,null),/*#__PURE__*/React.createElement(App,null))))))),document.getElementById('root'));","map":{"version":3,"sources":["/Users/lap14205/Documents/home/blockchain_learning/mdex-bscswap/src/index.tsx"],"names":["Web3Provider","createWeb3ReactRoot","Web3ReactProvider","React","isMobile","ReactDOM","ReactGA","Provider","NetworkContextName","App","store","ApplicationUpdater","TransactionUpdater","ListsUpdater","UserUpdater","MulticallUpdater","ThemeProvider","FixedGlobalStyle","ThemedGlobalStyle","Web3ProviderNetwork","window","ethereum","autoRefreshOnNetworkChange","getLibrary","provider","library","pollingInterval","GOOGLE_ANALYTICS_ID","process","env","REACT_APP_GOOGLE_ANALYTICS_ID","initialize","set","customBrowserType","testMode","debug","addEventListener","error","exception","description","message","filename","lineno","colno","fatal","Updaters","render","document","getElementById"],"mappings":"AAAA,OAASA,YAAT,KAA6B,0BAA7B,CACA,OAASC,mBAAT,CAA8BC,iBAA9B,KAAuD,kBAAvD,CACA,MAAOC,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,QAAT,KAAyB,qBAAzB,CACA,MAAOC,CAAAA,QAAP,KAAqB,WAArB,CACA,MAAOC,CAAAA,OAAP,KAAoB,UAApB,CACA,OAASC,QAAT,KAAyB,aAAzB,CACA,OAASC,kBAAT,KAAmC,aAAnC,CACA,MAAO,UAAP,CACA,MAAO,QAAP,CACA,MAAOC,CAAAA,GAAP,KAAgB,aAAhB,CACA,MAAOC,CAAAA,KAAP,KAAkB,SAAlB,CACA,MAAOC,CAAAA,kBAAP,KAA+B,6BAA/B,CACA,MAAOC,CAAAA,kBAAP,KAA+B,8BAA/B,CACA,MAAOC,CAAAA,YAAP,KAAyB,uBAAzB,CACA,MAAOC,CAAAA,WAAP,KAAwB,sBAAxB,CACA,MAAOC,CAAAA,gBAAP,KAA6B,2BAA7B,CACA,MAAOC,CAAAA,aAAP,EAAwBC,gBAAxB,CAA0CC,iBAA1C,KAAmE,SAAnE,CAEA,GAAMC,CAAAA,mBAAmB,CAAGlB,mBAAmB,CAACO,kBAAD,CAA/C,CAEA,GAAI,YAAcY,CAAAA,MAAlB,CAA0B,CACxB,CAAEA,MAAM,CAACC,QAAR,CAAyBC,0BAAzB,CAAsD,KAAtD,CACF,CAED,QAASC,CAAAA,UAAT,CAAoBC,QAApB,CAAiD,CAC/C,GAAMC,CAAAA,OAAO,CAAG,GAAIzB,CAAAA,YAAJ,CAAiBwB,QAAjB,CAAhB,CACAC,OAAO,CAACC,eAAR,CAA0B,KAA1B,CACA,MAAOD,CAAAA,OAAP,CACD,CAED,GAAME,CAAAA,mBAAuC,CAAGC,OAAO,CAACC,GAAR,CAAYC,6BAA5D,CACA,GAAI,MAAOH,CAAAA,mBAAP,GAA+B,QAAnC,CAA6C,CAC3CrB,OAAO,CAACyB,UAAR,CAAmBJ,mBAAnB,EACArB,OAAO,CAAC0B,GAAR,CAAY,CACVC,iBAAiB,CAAE,CAAC7B,QAAD,CAAY,SAAZ,CAAwB,QAAUgB,CAAAA,MAAV,EAAoB,YAAcA,CAAAA,MAAlC,CAA2C,YAA3C,CAA0D,eAD3F,CAAZ,EAGD,CALD,IAKO,CACLd,OAAO,CAACyB,UAAR,CAAmB,MAAnB,CAA2B,CAAEG,QAAQ,CAAE,IAAZ,CAAkBC,KAAK,CAAE,IAAzB,CAA3B,EACD,CAEDf,MAAM,CAACgB,gBAAP,CAAwB,OAAxB,CAAiC,SAAAC,KAAK,CAAI,CACxC/B,OAAO,CAACgC,SAAR,CAAkB,CAChBC,WAAW,WAAKF,KAAK,CAACG,OAAX,eAAwBH,KAAK,CAACI,QAA9B,aAA0CJ,KAAK,CAACK,MAAhD,aAA0DL,KAAK,CAACM,KAAhE,CADK,CAEhBC,KAAK,CAAE,IAFS,CAAlB,EAID,CALD,EAOA,QAASC,CAAAA,QAAT,EAAoB,CAClB,mBACE,qDACE,oBAAC,YAAD,MADF,cAEE,oBAAC,WAAD,MAFF,cAGE,oBAAC,kBAAD,MAHF,cAIE,oBAAC,kBAAD,MAJF,cAKE,oBAAC,gBAAD,MALF,CADF,CASD,CAEDxC,QAAQ,CAACyC,MAAT,cACE,qDACE,oBAAC,gBAAD,MADF,cAEE,oBAAC,iBAAD,EAAmB,UAAU,CAAEvB,UAA/B,eACE,oBAAC,mBAAD,EAAqB,UAAU,CAAEA,UAAjC,eACE,oBAAC,QAAD,EAAU,KAAK,CAAEb,KAAjB,eACE,oBAAC,QAAD,MADF,cAEE,oBAAC,aAAD,mBACE,qDACE,oBAAC,iBAAD,MADF,cAEE,oBAAC,GAAD,MAFF,CADF,CAFF,CADF,CADF,CAFF,CADF,CAiBEqC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAjBF","sourcesContent":["import { Web3Provider } from '@ethersproject/providers'\nimport { createWeb3ReactRoot, Web3ReactProvider } from '@web3-react/core'\nimport React from 'react'\nimport { isMobile } from 'react-device-detect'\nimport ReactDOM from 'react-dom'\nimport ReactGA from 'react-ga'\nimport { Provider } from 'react-redux'\nimport { NetworkContextName } from './constants'\nimport 'inter-ui'\nimport './i18n'\nimport App from './pages/App'\nimport store from './state'\nimport ApplicationUpdater from './state/application/updater'\nimport TransactionUpdater from './state/transactions/updater'\nimport ListsUpdater from './state/lists/updater'\nimport UserUpdater from './state/user/updater'\nimport MulticallUpdater from './state/multicall/updater'\nimport ThemeProvider, { FixedGlobalStyle, ThemedGlobalStyle } from './theme'\n\nconst Web3ProviderNetwork = createWeb3ReactRoot(NetworkContextName)\n\nif ('ethereum' in window) {\n  ;(window.ethereum as any).autoRefreshOnNetworkChange = false\n}\n\nfunction getLibrary(provider: any): Web3Provider {\n  const library = new Web3Provider(provider)\n  library.pollingInterval = 15000\n  return library\n}\n\nconst GOOGLE_ANALYTICS_ID: string | undefined = process.env.REACT_APP_GOOGLE_ANALYTICS_ID\nif (typeof GOOGLE_ANALYTICS_ID === 'string') {\n  ReactGA.initialize(GOOGLE_ANALYTICS_ID)\n  ReactGA.set({\n    customBrowserType: !isMobile ? 'desktop' : 'web3' in window || 'ethereum' in window ? 'mobileWeb3' : 'mobileRegular'\n  })\n} else {\n  ReactGA.initialize('test', { testMode: true, debug: true })\n}\n\nwindow.addEventListener('error', error => {\n  ReactGA.exception({\n    description: `${error.message} @ ${error.filename}:${error.lineno}:${error.colno}`,\n    fatal: true\n  })\n})\n\nfunction Updaters() {\n  return (\n    <>\n      <ListsUpdater />\n      <UserUpdater />\n      <ApplicationUpdater />\n      <TransactionUpdater />\n      <MulticallUpdater />\n    </>\n  )\n}\n\nReactDOM.render(\n  <>\n    <FixedGlobalStyle />\n    <Web3ReactProvider getLibrary={getLibrary}>\n      <Web3ProviderNetwork getLibrary={getLibrary}>\n        <Provider store={store}>\n          <Updaters />\n          <ThemeProvider>\n            <>\n              <ThemedGlobalStyle />\n              <App />\n            </>\n          </ThemeProvider>\n        </Provider>\n      </Web3ProviderNetwork>\n    </Web3ReactProvider>\n  </>,\n  document.getElementById('root')\n)\n"]},"metadata":{},"sourceType":"module"}