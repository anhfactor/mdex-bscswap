{"ast":null,"code":"var _jsxFileName = \"/Users/lap14205/Documents/home/blockchain_learning/mdex-bscswap/src/components/SearchModal/CurrencyList.tsx\";\nimport { Currency, currencyEquals, ETHER, JSBI, Token } from '@bscswap/sdk';\nimport React, { memo, useContext, useMemo } from 'react';\nimport { FixedSizeList } from 'react-window';\nimport { Text } from 'rebass';\nimport { ThemeContext } from 'styled-components';\nimport { useActiveWeb3React } from '../../hooks';\nimport { useAllTokens } from '../../hooks/Tokens';\nimport { useDefaultTokenList } from '../../state/lists/hooks';\nimport { useAddUserToken, useRemoveUserAddedToken } from '../../state/user/hooks';\nimport { useETHBalances } from '../../state/wallet/hooks';\nimport { LinkStyledButton, TYPE } from '../../theme';\nimport { ButtonSecondary } from '../Button';\nimport Column, { AutoColumn } from '../Column';\nimport { RowFixed } from '../Row';\nimport CurrencyLogo from '../CurrencyLogo';\nimport { FadedSpan, MenuItem } from './styleds';\nimport Loader from '../Loader';\nimport { isDefaultToken } from '../../utils';\n\nfunction currencyKey(currency) {\n  return currency instanceof Token ? currency.address : currency === ETHER ? 'ETHER' : '';\n}\n\nexport default function CurrencyList({\n  currencies,\n  allBalances,\n  selectedCurrency,\n  onCurrencySelect,\n  otherCurrency,\n  showSendWithSwap\n}) {\n  const {\n    account,\n    chainId\n  } = useActiveWeb3React();\n  const theme = useContext(ThemeContext);\n  const allTokens = useAllTokens();\n  const defaultTokens = useDefaultTokenList();\n  const addToken = useAddUserToken();\n  const removeToken = useRemoveUserAddedToken();\n  const ETHBalance = useETHBalances([account])[account];\n  const CurrencyRow = useMemo(() => {\n    return memo(function CurrencyRow({\n      index,\n      style\n    }) {\n      const currency = index === 0 ? Currency.ETHER : currencies[index - 1];\n      const key = currencyKey(currency);\n      const isDefault = isDefaultToken(defaultTokens, currency);\n      const customAdded = Boolean(!isDefault && currency instanceof Token && allTokens[currency.address]);\n      const balance = currency === ETHER ? ETHBalance : allBalances[key];\n      const zeroBalance = balance && JSBI.equal(JSBI.BigInt(0), balance.raw);\n      const isSelected = Boolean(selectedCurrency && currencyEquals(currency, selectedCurrency));\n      const otherSelected = Boolean(otherCurrency && currencyEquals(otherCurrency, currency));\n      return /*#__PURE__*/React.createElement(MenuItem, {\n        style: style,\n        className: `token-item-${key}`,\n        onClick: () => isSelected ? null : onCurrencySelect(currency),\n        disabled: isSelected,\n        selected: otherSelected,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(RowFixed, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(CurrencyLogo, {\n        currency: currency,\n        size: '24px',\n        style: {\n          marginRight: '14px'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 13\n        }\n      }), /*#__PURE__*/React.createElement(Column, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Text, {\n        fontWeight: 500,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 15\n        }\n      }, currency.symbol), /*#__PURE__*/React.createElement(FadedSpan, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 15\n        }\n      }, customAdded ? /*#__PURE__*/React.createElement(TYPE.main, {\n        fontWeight: 500,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 19\n        }\n      }, \"Added by user\", /*#__PURE__*/React.createElement(LinkStyledButton, {\n        onClick: event => {\n          event.stopPropagation();\n          if (currency instanceof Token) removeToken(chainId, currency.address);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 21\n        }\n      }, \"(Remove)\")) : null, !isDefault && !customAdded ? /*#__PURE__*/React.createElement(TYPE.main, {\n        fontWeight: 500,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 19\n        }\n      }, \"Found by address\", /*#__PURE__*/React.createElement(LinkStyledButton, {\n        onClick: event => {\n          event.stopPropagation();\n          if (currency instanceof Token) addToken(currency);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 21\n        }\n      }, \"(Add)\")) : null))), /*#__PURE__*/React.createElement(AutoColumn, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }\n      }, balance ? /*#__PURE__*/React.createElement(Text, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 15\n        }\n      }, zeroBalance && showSendWithSwap ? /*#__PURE__*/React.createElement(ButtonSecondary, {\n        padding: '4px 8px',\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(Text, {\n        textAlign: \"center\",\n        fontWeight: 500,\n        fontSize: 14,\n        color: theme.primary1,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 21\n        }\n      }, \"Send With Swap\")) : balance ? balance.toSignificant(6) : '-') : account ? /*#__PURE__*/React.createElement(Loader, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 15\n        }\n      }) : '-'));\n    });\n  }, [ETHBalance, account, addToken, allBalances, allTokens, chainId, currencies, defaultTokens, onCurrencySelect, otherCurrency, removeToken, selectedCurrency, showSendWithSwap, theme.primary1]);\n  return /*#__PURE__*/React.createElement(FixedSizeList, {\n    width: \"100%\",\n    height: 500,\n    itemCount: currencies.length + 1,\n    itemSize: 56,\n    style: {\n      flex: '1'\n    },\n    itemKey: index => currencyKey(currencies[index]),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 5\n    }\n  }, CurrencyRow);\n}","map":{"version":3,"sources":["/Users/lap14205/Documents/home/blockchain_learning/mdex-bscswap/src/components/SearchModal/CurrencyList.tsx"],"names":["Currency","currencyEquals","ETHER","JSBI","Token","React","memo","useContext","useMemo","FixedSizeList","Text","ThemeContext","useActiveWeb3React","useAllTokens","useDefaultTokenList","useAddUserToken","useRemoveUserAddedToken","useETHBalances","LinkStyledButton","TYPE","ButtonSecondary","Column","AutoColumn","RowFixed","CurrencyLogo","FadedSpan","MenuItem","Loader","isDefaultToken","currencyKey","currency","address","CurrencyList","currencies","allBalances","selectedCurrency","onCurrencySelect","otherCurrency","showSendWithSwap","account","chainId","theme","allTokens","defaultTokens","addToken","removeToken","ETHBalance","CurrencyRow","index","style","key","isDefault","customAdded","Boolean","balance","zeroBalance","equal","BigInt","raw","isSelected","otherSelected","marginRight","symbol","event","stopPropagation","primary1","toSignificant","length","flex"],"mappings":"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","sourcesContent":["import { Currency, CurrencyAmount, currencyEquals, ETHER, JSBI, Token } from '@bscswap/sdk'\nimport React, { CSSProperties, memo, useContext, useMemo } from 'react'\nimport { FixedSizeList } from 'react-window'\nimport { Text } from 'rebass'\nimport { ThemeContext } from 'styled-components'\nimport { useActiveWeb3React } from '../../hooks'\nimport { useAllTokens } from '../../hooks/Tokens'\nimport { useDefaultTokenList } from '../../state/lists/hooks'\nimport { useAddUserToken, useRemoveUserAddedToken } from '../../state/user/hooks'\nimport { useETHBalances } from '../../state/wallet/hooks'\nimport { LinkStyledButton, TYPE } from '../../theme'\nimport { ButtonSecondary } from '../Button'\nimport Column, { AutoColumn } from '../Column'\nimport { RowFixed } from '../Row'\nimport CurrencyLogo from '../CurrencyLogo'\nimport { FadedSpan, MenuItem } from './styleds'\nimport Loader from '../Loader'\nimport { isDefaultToken } from '../../utils'\n\nfunction currencyKey(currency: Currency): string {\n  return currency instanceof Token ? currency.address : currency === ETHER ? 'ETHER' : ''\n}\n\nexport default function CurrencyList({\n  currencies,\n  allBalances,\n  selectedCurrency,\n  onCurrencySelect,\n  otherCurrency,\n  showSendWithSwap\n}: {\n  currencies: Currency[]\n  selectedCurrency: Currency\n  allBalances: { [tokenAddress: string]: CurrencyAmount }\n  onCurrencySelect: (currency: Currency) => void\n  otherCurrency: Currency\n  showSendWithSwap?: boolean\n}) {\n  const { account, chainId } = useActiveWeb3React()\n  const theme = useContext(ThemeContext)\n  const allTokens = useAllTokens()\n  const defaultTokens = useDefaultTokenList()\n  const addToken = useAddUserToken()\n  const removeToken = useRemoveUserAddedToken()\n  const ETHBalance = useETHBalances([account])[account]\n\n  const CurrencyRow = useMemo(() => {\n    return memo(function CurrencyRow({ index, style }: { index: number; style: CSSProperties }) {\n      const currency = index === 0 ? Currency.ETHER : currencies[index - 1]\n      const key = currencyKey(currency)\n      const isDefault = isDefaultToken(defaultTokens, currency)\n      const customAdded = Boolean(!isDefault && currency instanceof Token && allTokens[currency.address])\n      const balance = currency === ETHER ? ETHBalance : allBalances[key]\n\n      const zeroBalance = balance && JSBI.equal(JSBI.BigInt(0), balance.raw)\n\n      const isSelected = Boolean(selectedCurrency && currencyEquals(currency, selectedCurrency))\n      const otherSelected = Boolean(otherCurrency && currencyEquals(otherCurrency, currency))\n\n      return (\n        <MenuItem\n          style={style}\n          className={`token-item-${key}`}\n          onClick={() => (isSelected ? null : onCurrencySelect(currency))}\n          disabled={isSelected}\n          selected={otherSelected}\n        >\n          <RowFixed>\n            <CurrencyLogo currency={currency} size={'24px'} style={{ marginRight: '14px' }} />\n            <Column>\n              <Text fontWeight={500}>{currency.symbol}</Text>\n              <FadedSpan>\n                {customAdded ? (\n                  <TYPE.main fontWeight={500}>\n                    Added by user\n                    <LinkStyledButton\n                      onClick={event => {\n                        event.stopPropagation()\n                        if (currency instanceof Token) removeToken(chainId, currency.address)\n                      }}\n                    >\n                      (Remove)\n                    </LinkStyledButton>\n                  </TYPE.main>\n                ) : null}\n                {!isDefault && !customAdded ? (\n                  <TYPE.main fontWeight={500}>\n                    Found by address\n                    <LinkStyledButton\n                      onClick={event => {\n                        event.stopPropagation()\n                        if (currency instanceof Token) addToken(currency)\n                      }}\n                    >\n                      (Add)\n                    </LinkStyledButton>\n                  </TYPE.main>\n                ) : null}\n              </FadedSpan>\n            </Column>\n          </RowFixed>\n          <AutoColumn>\n            {balance ? (\n              <Text>\n                {zeroBalance && showSendWithSwap ? (\n                  <ButtonSecondary padding={'4px 8px'}>\n                    <Text textAlign=\"center\" fontWeight={500} fontSize={14} color={theme.primary1}>\n                      Send With Swap\n                    </Text>\n                  </ButtonSecondary>\n                ) : balance ? (\n                  balance.toSignificant(6)\n                ) : (\n                  '-'\n                )}\n              </Text>\n            ) : account ? (\n              <Loader />\n            ) : (\n              '-'\n            )}\n          </AutoColumn>\n        </MenuItem>\n      )\n    })\n  }, [\n    ETHBalance,\n    account,\n    addToken,\n    allBalances,\n    allTokens,\n    chainId,\n    currencies,\n    defaultTokens,\n    onCurrencySelect,\n    otherCurrency,\n    removeToken,\n    selectedCurrency,\n    showSendWithSwap,\n    theme.primary1\n  ])\n\n  return (\n    <FixedSizeList\n      width=\"100%\"\n      height={500}\n      itemCount={currencies.length + 1}\n      itemSize={56}\n      style={{ flex: '1' }}\n      itemKey={index => currencyKey(currencies[index])}\n    >\n      {CurrencyRow}\n    </FixedSizeList>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}