{"ast":null,"code":"import _toConsumableArray from\"/Users/lap14205/Documents/home/blockchain_learning/bscswap-interface/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _objectSpread from\"/Users/lap14205/Documents/home/blockchain_learning/bscswap-interface/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _defineProperty from\"/Users/lap14205/Documents/home/blockchain_learning/bscswap-interface/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";var _WETH_ONLY,_objectSpread2,_objectSpread3,_objectSpread4;import{ChainId,JSBI,Percent,Token,WETH}from'@bscswap/sdk';import{injected,binanceinjected}from'../connectors';export var ROUTER_ADDRESS='0xd954551853F55deb4Ae31407c423e67B1621424A';// a list of tokens by chain\nexport var DAI=new Token(ChainId.MAINNET,'0x6B175474E89094C44Da98b954EedeAC495271d0F',18,'DAI','Dai Stablecoin');export var USDC=new Token(ChainId.MAINNET,'0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48',6,'USDC','USD//C');export var USDT=new Token(ChainId.MAINNET,'0xdAC17F958D2ee523a2206206994597C13D831ec7',6,'USDT','Tether USD');export var COMP=new Token(ChainId.MAINNET,'0xc00e94Cb662C3520282E6f5717214004A7f26888',18,'COMP','Compound');export var MKR=new Token(ChainId.MAINNET,'0x9f8F72aA9304c8B593d555F12eF6589cC3A579A2',18,'MKR','Maker');export var AMPL=new Token(ChainId.MAINNET,'0xD46bA6D942050d489DBd938a2C909A5d5039A161',9,'AMPL','Ampleforth');export var BAI=new Token(ChainId.BSC_MAINNET,'0xaA8012a0Ea627767545a8E435C2A2BD51f60173D',18,'BAI','BAI Stablecoin');export var B_DAI=new Token(ChainId.BSC_MAINNET,'0x1AF3F329e8BE154074D8769D1FFa4eE058B1DBc3',18,'DAI','Dai Token');export var BUSD=new Token(ChainId.BSC_MAINNET,'0xe9e7CEA3DedcA5984780Bafc599bD69ADd087D56',18,'BUSD','BUSD Token');export var B_USDT=new Token(ChainId.BSC_MAINNET,'0x55d398326f99059fF775485246999027B3197955',18,'USDT','Tether USD');export var T_DAI=new Token(ChainId.BSC_TESTNET,'0xEC5dCb5Dbf4B114C9d0F65BcCAb49EC54F6A0867',18,'DAI','Dai Token');export var T_BUSD=new Token(ChainId.BSC_TESTNET,'0xeD24FC36d5Ee211Ea25A80239Fb8C4Cfd80f12Ee',6,'BUSD','BUSD Token');export var T_USDT=new Token(ChainId.BSC_TESTNET,'0x337610d27c682E347C9cD60BD4b3b107C9d34dDd',6,'USDT','Tether USD');var WETH_ONLY=(_WETH_ONLY={},_defineProperty(_WETH_ONLY,ChainId.MAINNET,[WETH[ChainId.MAINNET]]),_defineProperty(_WETH_ONLY,ChainId.ROPSTEN,[WETH[ChainId.ROPSTEN]]),_defineProperty(_WETH_ONLY,ChainId.RINKEBY,[WETH[ChainId.RINKEBY]]),_defineProperty(_WETH_ONLY,ChainId.GÖRLI,[WETH[ChainId.GÖRLI]]),_defineProperty(_WETH_ONLY,ChainId.KOVAN,[WETH[ChainId.KOVAN]]),_defineProperty(_WETH_ONLY,ChainId.BSC_MAINNET,[WETH[ChainId.BSC_MAINNET]]),_defineProperty(_WETH_ONLY,ChainId.BSC_TESTNET,[WETH[ChainId.BSC_TESTNET]]),_WETH_ONLY);// used to construct intermediary pairs for trading\nexport var BASES_TO_CHECK_TRADES_AGAINST=_objectSpread(_objectSpread({},WETH_ONLY),{},(_objectSpread2={},_defineProperty(_objectSpread2,ChainId.MAINNET,[].concat(_toConsumableArray(WETH_ONLY[ChainId.MAINNET]),[DAI,USDC,USDT,COMP,MKR])),_defineProperty(_objectSpread2,ChainId.BSC_MAINNET,[].concat(_toConsumableArray(WETH_ONLY[ChainId.BSC_MAINNET]),[BAI,B_USDT,BUSD,B_DAI])),_objectSpread2));/**\n * Some tokens can only be swapped via certain pairs, so we override the list of bases that are considered for these\n * tokens.\n */export var CUSTOM_BASES=_defineProperty({},ChainId.MAINNET,_defineProperty({},AMPL.address,[DAI,WETH[ChainId.MAINNET]]));// used for display in the default list when adding liquidity\nexport var SUGGESTED_BASES=_objectSpread(_objectSpread({},WETH_ONLY),{},(_objectSpread3={},_defineProperty(_objectSpread3,ChainId.MAINNET,[].concat(_toConsumableArray(WETH_ONLY[ChainId.MAINNET]),[DAI,USDC,USDT])),_defineProperty(_objectSpread3,ChainId.BSC_MAINNET,[].concat(_toConsumableArray(WETH_ONLY[ChainId.BSC_MAINNET]),[BAI,B_USDT,BUSD,B_DAI])),_defineProperty(_objectSpread3,ChainId.BSC_TESTNET,[].concat(_toConsumableArray(WETH_ONLY[ChainId.BSC_TESTNET]),[T_USDT,T_BUSD,T_DAI])),_objectSpread3));// used to construct the list of all pairs we consider by default in the frontend\nexport var BASES_TO_TRACK_LIQUIDITY_FOR=_objectSpread(_objectSpread({},WETH_ONLY),{},(_objectSpread4={},_defineProperty(_objectSpread4,ChainId.MAINNET,[].concat(_toConsumableArray(WETH_ONLY[ChainId.MAINNET]),[DAI,USDC,USDT])),_defineProperty(_objectSpread4,ChainId.BSC_MAINNET,[].concat(_toConsumableArray(WETH_ONLY[ChainId.BSC_MAINNET]),[BAI,B_USDT,BUSD,B_DAI])),_defineProperty(_objectSpread4,ChainId.BSC_TESTNET,[].concat(_toConsumableArray(WETH_ONLY[ChainId.BSC_TESTNET]),[T_USDT,T_BUSD,T_DAI])),_objectSpread4));export var PINNED_PAIRS=_defineProperty({},ChainId.MAINNET,[[new Token(ChainId.MAINNET,'0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643',8,'cDAI','Compound Dai'),new Token(ChainId.MAINNET,'0x39AA39c021dfbaE8faC545936693aC917d5E7563',8,'cUSDC','Compound USD Coin')],[USDC,USDT],[DAI,USDT]]);export var SUPPORTED_WALLETS={INJECTED:{connector:injected,name:'Injected',iconName:'arrow-right.svg',description:'Injected web3 provider.',href:null,color:'#010101',primary:true},BINANCE:{connector:binanceinjected,name:'Binance Chain Wallet',iconName:'bnb.svg',description:'A Crypto Wallet for Binance Smart Chain',href:null,color:'#F9A825'},METAMASK:{connector:injected,name:'MetaMask',iconName:'metamask.png',description:'Easy-to-use browser extension.',href:null,color:'#E8831D'},TRUSTWALLET:{connector:injected,name:'TrustWallet',iconName:'trustwallet.svg',description:'The most trusted & secure crypto wallet',href:null,color:'#3375BB'},MATHWALLET:{connector:injected,name:'MathWallet',iconName:'mathwallet.svg',description:'Your Gateway to the World of Blockchain',href:null,color:'#000000'}};export var NetworkContextName='NETWORK';// default allowed slippage, in bips\nexport var INITIAL_ALLOWED_SLIPPAGE=50;// 20 minutes, denominated in seconds\nexport var DEFAULT_DEADLINE_FROM_NOW=60*20;// one basis point\nexport var ONE_BIPS=new Percent(JSBI.BigInt(1),JSBI.BigInt(10000));export var BIPS_BASE=JSBI.BigInt(10000);// used for warning states\nexport var ALLOWED_PRICE_IMPACT_LOW=new Percent(JSBI.BigInt(100),BIPS_BASE);// 1%\nexport var ALLOWED_PRICE_IMPACT_MEDIUM=new Percent(JSBI.BigInt(300),BIPS_BASE);// 3%\nexport var ALLOWED_PRICE_IMPACT_HIGH=new Percent(JSBI.BigInt(500),BIPS_BASE);// 5%\n// if the price slippage exceeds this number, force the user to type 'confirm' to execute\nexport var PRICE_IMPACT_WITHOUT_FEE_CONFIRM_MIN=new Percent(JSBI.BigInt(1000),BIPS_BASE);// 10%\n// for non expert mode disable swaps above this\nexport var BLOCKED_PRICE_IMPACT_NON_EXPERT=new Percent(JSBI.BigInt(1500),BIPS_BASE);// 15%\n// used to ensure the user doesn't send so much ETH so they end up with <.01\nexport var MIN_ETH=JSBI.exponentiate(JSBI.BigInt(10),JSBI.BigInt(16));// .01 ETH\nexport var BETTER_TRADE_LINK_THRESHOLD=new Percent(JSBI.BigInt(75),JSBI.BigInt(10000));// the Uniswap Default token list lives here\nexport var DEFAULT_TOKEN_LIST_URL='https://tokens.bscswap.com/tokens.json';","map":{"version":3,"sources":["/Users/lap14205/Documents/home/blockchain_learning/bscswap-interface/src/constants/index.ts"],"names":["ChainId","JSBI","Percent","Token","WETH","injected","binanceinjected","ROUTER_ADDRESS","DAI","MAINNET","USDC","USDT","COMP","MKR","AMPL","BAI","BSC_MAINNET","B_DAI","BUSD","B_USDT","T_DAI","BSC_TESTNET","T_BUSD","T_USDT","WETH_ONLY","ROPSTEN","RINKEBY","GÖRLI","KOVAN","BASES_TO_CHECK_TRADES_AGAINST","CUSTOM_BASES","address","SUGGESTED_BASES","BASES_TO_TRACK_LIQUIDITY_FOR","PINNED_PAIRS","SUPPORTED_WALLETS","INJECTED","connector","name","iconName","description","href","color","primary","BINANCE","METAMASK","TRUSTWALLET","MATHWALLET","NetworkContextName","INITIAL_ALLOWED_SLIPPAGE","DEFAULT_DEADLINE_FROM_NOW","ONE_BIPS","BigInt","BIPS_BASE","ALLOWED_PRICE_IMPACT_LOW","ALLOWED_PRICE_IMPACT_MEDIUM","ALLOWED_PRICE_IMPACT_HIGH","PRICE_IMPACT_WITHOUT_FEE_CONFIRM_MIN","BLOCKED_PRICE_IMPACT_NON_EXPERT","MIN_ETH","exponentiate","BETTER_TRADE_LINK_THRESHOLD","DEFAULT_TOKEN_LIST_URL"],"mappings":"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","sourcesContent":["import { AbstractConnector } from '@web3-react/abstract-connector'\nimport { ChainId, JSBI, Percent, Token, WETH } from '@bscswap/sdk'\n\nimport { injected, binanceinjected, walletconnect, walletlink } from '../connectors'\n\nexport const ROUTER_ADDRESS = '0xd954551853F55deb4Ae31407c423e67B1621424A'\n\n// a list of tokens by chain\ntype ChainTokenList = {\n  readonly [chainId in ChainId]: Token[]\n}\n\nexport const DAI = new Token(ChainId.MAINNET, '0x6B175474E89094C44Da98b954EedeAC495271d0F', 18, 'DAI', 'Dai Stablecoin')\nexport const USDC = new Token(ChainId.MAINNET, '0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48', 6, 'USDC', 'USD//C')\nexport const USDT = new Token(ChainId.MAINNET, '0xdAC17F958D2ee523a2206206994597C13D831ec7', 6, 'USDT', 'Tether USD')\nexport const COMP = new Token(ChainId.MAINNET, '0xc00e94Cb662C3520282E6f5717214004A7f26888', 18, 'COMP', 'Compound')\nexport const MKR = new Token(ChainId.MAINNET, '0x9f8F72aA9304c8B593d555F12eF6589cC3A579A2', 18, 'MKR', 'Maker')\nexport const AMPL = new Token(ChainId.MAINNET, '0xD46bA6D942050d489DBd938a2C909A5d5039A161', 9, 'AMPL', 'Ampleforth')\n\nexport const BAI = new Token(ChainId.BSC_MAINNET, '0xaA8012a0Ea627767545a8E435C2A2BD51f60173D', 18, 'BAI', 'BAI Stablecoin')\nexport const B_DAI = new Token(ChainId.BSC_MAINNET, '0x1AF3F329e8BE154074D8769D1FFa4eE058B1DBc3', 18, 'DAI', 'Dai Token')\nexport const BUSD = new Token(ChainId.BSC_MAINNET, '0xe9e7CEA3DedcA5984780Bafc599bD69ADd087D56', 18, 'BUSD', 'BUSD Token')\nexport const B_USDT = new Token(ChainId.BSC_MAINNET, '0x55d398326f99059fF775485246999027B3197955', 18, 'USDT', 'Tether USD')\n\nexport const T_DAI = new Token(ChainId.BSC_TESTNET, '0xEC5dCb5Dbf4B114C9d0F65BcCAb49EC54F6A0867', 18, 'DAI', 'Dai Token')\nexport const T_BUSD = new Token(ChainId.BSC_TESTNET, '0xeD24FC36d5Ee211Ea25A80239Fb8C4Cfd80f12Ee', 6, 'BUSD', 'BUSD Token')\nexport const T_USDT = new Token(ChainId.BSC_TESTNET, '0x337610d27c682E347C9cD60BD4b3b107C9d34dDd', 6, 'USDT', 'Tether USD')\n\nconst WETH_ONLY: ChainTokenList = {\n  [ChainId.MAINNET]: [WETH[ChainId.MAINNET]],\n  [ChainId.ROPSTEN]: [WETH[ChainId.ROPSTEN]],\n  [ChainId.RINKEBY]: [WETH[ChainId.RINKEBY]],\n  [ChainId.GÖRLI]: [WETH[ChainId.GÖRLI]],\n  [ChainId.KOVAN]: [WETH[ChainId.KOVAN]],\n  [ChainId.BSC_MAINNET]: [WETH[ChainId.BSC_MAINNET]],\n  [ChainId.BSC_TESTNET]: [WETH[ChainId.BSC_TESTNET]]\n}\n\n// used to construct intermediary pairs for trading\nexport const BASES_TO_CHECK_TRADES_AGAINST: ChainTokenList = {\n  ...WETH_ONLY,\n  [ChainId.MAINNET]: [...WETH_ONLY[ChainId.MAINNET], DAI, USDC, USDT, COMP, MKR],\n  [ChainId.BSC_MAINNET]: [...WETH_ONLY[ChainId.BSC_MAINNET], BAI, B_USDT, BUSD, B_DAI]\n}\n\n/**\n * Some tokens can only be swapped via certain pairs, so we override the list of bases that are considered for these\n * tokens.\n */\nexport const CUSTOM_BASES: { [chainId in ChainId]?: { [tokenAddress: string]: Token[] } } = {\n  [ChainId.MAINNET]: {\n    [AMPL.address]: [DAI, WETH[ChainId.MAINNET]]\n  }\n}\n\n// used for display in the default list when adding liquidity\nexport const SUGGESTED_BASES: ChainTokenList = {\n  ...WETH_ONLY,\n  [ChainId.MAINNET]: [...WETH_ONLY[ChainId.MAINNET], DAI, USDC, USDT],\n  [ChainId.BSC_MAINNET]: [...WETH_ONLY[ChainId.BSC_MAINNET], BAI, B_USDT, BUSD, B_DAI],\n  [ChainId.BSC_TESTNET]: [...WETH_ONLY[ChainId.BSC_TESTNET], T_USDT, T_BUSD, T_DAI]\n}\n\n// used to construct the list of all pairs we consider by default in the frontend\nexport const BASES_TO_TRACK_LIQUIDITY_FOR: ChainTokenList = {\n  ...WETH_ONLY,\n  [ChainId.MAINNET]: [...WETH_ONLY[ChainId.MAINNET], DAI, USDC, USDT],\n  [ChainId.BSC_MAINNET]: [...WETH_ONLY[ChainId.BSC_MAINNET], BAI, B_USDT, BUSD, B_DAI],\n  [ChainId.BSC_TESTNET]: [...WETH_ONLY[ChainId.BSC_TESTNET], T_USDT, T_BUSD, T_DAI]\n}\n\nexport const PINNED_PAIRS: { readonly [chainId in ChainId]?: [Token, Token][] } = {\n  [ChainId.MAINNET]: [\n    [\n      new Token(ChainId.MAINNET, '0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643', 8, 'cDAI', 'Compound Dai'),\n      new Token(ChainId.MAINNET, '0x39AA39c021dfbaE8faC545936693aC917d5E7563', 8, 'cUSDC', 'Compound USD Coin')\n    ],\n    [USDC, USDT],\n    [DAI, USDT]\n  ]\n}\n\nexport interface WalletInfo {\n  connector?: AbstractConnector\n  name: string\n  iconName: string\n  description: string\n  href: string | null\n  color: string\n  primary?: true\n  mobile?: true\n  mobileOnly?: true\n}\n\nexport const SUPPORTED_WALLETS: { [key: string]: WalletInfo } = {\n  INJECTED: {\n    connector: injected,\n    name: 'Injected',\n    iconName: 'arrow-right.svg',\n    description: 'Injected web3 provider.',\n    href: null,\n    color: '#010101',\n    primary: true\n  },\n  BINANCE: {\n    connector: binanceinjected,\n    name: 'Binance Chain Wallet',\n    iconName: 'bnb.svg',\n    description: 'A Crypto Wallet for Binance Smart Chain',\n    href: null,\n    color: '#F9A825'\n  },\n  METAMASK: {\n    connector: injected,\n    name: 'MetaMask',\n    iconName: 'metamask.png',\n    description: 'Easy-to-use browser extension.',\n    href: null,\n    color: '#E8831D'\n  },\n  TRUSTWALLET: {\n    connector: injected,\n    name: 'TrustWallet',\n    iconName: 'trustwallet.svg',\n    description: 'The most trusted & secure crypto wallet',\n    href: null,\n    color: '#3375BB'\n  },\n  MATHWALLET: {\n    connector: injected,\n    name: 'MathWallet',\n    iconName: 'mathwallet.svg',\n    description: 'Your Gateway to the World of Blockchain',\n    href: null,\n    color: '#000000'\n  }\n}\n\nexport const NetworkContextName = 'NETWORK'\n\n// default allowed slippage, in bips\nexport const INITIAL_ALLOWED_SLIPPAGE = 50\n// 20 minutes, denominated in seconds\nexport const DEFAULT_DEADLINE_FROM_NOW = 60 * 20\n\n// one basis point\nexport const ONE_BIPS = new Percent(JSBI.BigInt(1), JSBI.BigInt(10000))\nexport const BIPS_BASE = JSBI.BigInt(10000)\n// used for warning states\nexport const ALLOWED_PRICE_IMPACT_LOW: Percent = new Percent(JSBI.BigInt(100), BIPS_BASE) // 1%\nexport const ALLOWED_PRICE_IMPACT_MEDIUM: Percent = new Percent(JSBI.BigInt(300), BIPS_BASE) // 3%\nexport const ALLOWED_PRICE_IMPACT_HIGH: Percent = new Percent(JSBI.BigInt(500), BIPS_BASE) // 5%\n// if the price slippage exceeds this number, force the user to type 'confirm' to execute\nexport const PRICE_IMPACT_WITHOUT_FEE_CONFIRM_MIN: Percent = new Percent(JSBI.BigInt(1000), BIPS_BASE) // 10%\n// for non expert mode disable swaps above this\nexport const BLOCKED_PRICE_IMPACT_NON_EXPERT: Percent = new Percent(JSBI.BigInt(1500), BIPS_BASE) // 15%\n\n// used to ensure the user doesn't send so much ETH so they end up with <.01\nexport const MIN_ETH: JSBI = JSBI.exponentiate(JSBI.BigInt(10), JSBI.BigInt(16)) // .01 ETH\nexport const BETTER_TRADE_LINK_THRESHOLD = new Percent(JSBI.BigInt(75), JSBI.BigInt(10000))\n\n// the Uniswap Default token list lives here\nexport const DEFAULT_TOKEN_LIST_URL = 'https://tokens.bscswap.com/tokens.json'\n"]},"metadata":{},"sourceType":"module"}