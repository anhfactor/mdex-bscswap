{"ast":null,"code":"import _defineProperty from\"/Users/lap14205/Documents/home/blockchain_learning/mdex-bscswap/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _slicedToArray from\"/Users/lap14205/Documents/home/blockchain_learning/mdex-bscswap/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{JSBI}from'@bscswap/sdk';import React,{useCallback,useContext,useEffect,useState}from'react';import{ArrowDown}from'react-feather';import ReactGA from'react-ga';import{Text}from'rebass';import{useTranslation}from'react-i18next';import{ThemeContext}from'styled-components';import AddressInputPanel from'../../components/AddressInputPanel';import{ButtonError,ButtonLight,ButtonPrimary}from'../../components/Button';import Card,{GreyCard}from'../../components/Card';import{AutoColumn}from'../../components/Column';import ConfirmSwapModal from'../../components/swap/ConfirmSwapModal';import CurrencyInputPanel from'../../components/CurrencyInputPanel';import{SwapPoolTabs}from'../../components/NavigationTabs';import{AutoRow,RowBetween}from'../../components/Row';import AdvancedSwapDetailsDropdown from'../../components/swap/AdvancedSwapDetailsDropdown';import BetterTradeLink from'../../components/swap/BetterTradeLink';import confirmPriceImpactWithoutFee from'../../components/swap/confirmPriceImpactWithoutFee';import{ArrowWrapper,BottomGrouping,Dots,SwapCallbackError,Wrapper}from'../../components/swap/styleds';import TradePrice from'../../components/swap/TradePrice';import{TokenWarningCards}from'../../components/TokenWarningCard';import{BETTER_TRADE_LINK_THRESHOLD,INITIAL_ALLOWED_SLIPPAGE}from'../../constants';import{getTradeVersion,isTradeBetter}from'../../data/V1';import{useActiveWeb3React}from'../../hooks';import{ApprovalState,useApproveCallbackFromTrade}from'../../hooks/useApproveCallback';import useENSAddress from'../../hooks/useENSAddress';import{useSwapCallback}from'../../hooks/useSwapCallback';import useToggledVersion,{Version}from'../../hooks/useToggledVersion';import useWrapCallback,{WrapType}from'../../hooks/useWrapCallback';import{useToggleSettingsMenu,useWalletModalToggle}from'../../state/application/hooks';import{Field}from'../../state/swap/actions';import{useDefaultsFromURLSearch,useDerivedSwapInfo,useSwapActionHandlers,useSwapState}from'../../state/swap/hooks';import{useExpertModeManager,useTokenWarningDismissal,useUserDeadline,useUserSlippageTolerance}from'../../state/user/hooks';import{LinkStyledButton,TYPE}from'../../theme';import{maxAmountSpend}from'../../utils/maxAmountSpend';import{computeTradePriceBreakdown,warningSeverity}from'../../utils/prices';import AppBody from'../AppBody';import{ClickableText}from'../Pool/styleds';export default function Swap(){var _Version$v1$Version$v,_ref,_ref2,_parsedAmounts$indepe,_parsedAmounts$indepe2,_parsedAmounts$depend,_parsedAmounts$depend2,_formattedAmounts,_parsedAmounts$indepe3,_parsedAmounts$Field$,_currencies$Field$INP;useDefaultsFromURLSearch();var _useTranslation=useTranslation(),t=_useTranslation.t;var _useActiveWeb3React=useActiveWeb3React(),account=_useActiveWeb3React.account,chainId=_useActiveWeb3React.chainId;var theme=useContext(ThemeContext);// toggle wallet when disconnected\nvar toggleWalletModal=useWalletModalToggle();// for expert mode\nvar toggleSettings=useToggleSettingsMenu();var _useExpertModeManager=useExpertModeManager(),_useExpertModeManager2=_slicedToArray(_useExpertModeManager,1),isExpertMode=_useExpertModeManager2[0];// get custom setting values for user\nvar _useUserDeadline=useUserDeadline(),_useUserDeadline2=_slicedToArray(_useUserDeadline,1),deadline=_useUserDeadline2[0];var _useUserSlippageToler=useUserSlippageTolerance(),_useUserSlippageToler2=_slicedToArray(_useUserSlippageToler,1),allowedSlippage=_useUserSlippageToler2[0];// swap state\nvar _useSwapState=useSwapState(),independentField=_useSwapState.independentField,typedValue=_useSwapState.typedValue,recipient=_useSwapState.recipient;var _useDerivedSwapInfo=useDerivedSwapInfo(),v1Trade=_useDerivedSwapInfo.v1Trade,v2Trade=_useDerivedSwapInfo.v2Trade,currencyBalances=_useDerivedSwapInfo.currencyBalances,parsedAmount=_useDerivedSwapInfo.parsedAmount,currencies=_useDerivedSwapInfo.currencies,swapInputError=_useDerivedSwapInfo.inputError;var _useWrapCallback=useWrapCallback(currencies[Field.INPUT],currencies[Field.OUTPUT],typedValue),wrapType=_useWrapCallback.wrapType,onWrap=_useWrapCallback.execute,wrapInputError=_useWrapCallback.inputError;var showWrap=wrapType!==WrapType.NOT_APPLICABLE;var _useENSAddress=useENSAddress(recipient),recipientAddress=_useENSAddress.address;var toggledVersion=useToggledVersion();var trade=showWrap?undefined:(_Version$v1$Version$v={},_defineProperty(_Version$v1$Version$v,Version.v1,v1Trade),_defineProperty(_Version$v1$Version$v,Version.v2,v2Trade),_Version$v1$Version$v)[toggledVersion];var betterTradeLinkVersion=toggledVersion===Version.v2&&isTradeBetter(v2Trade,v1Trade,BETTER_TRADE_LINK_THRESHOLD)?Version.v1:toggledVersion===Version.v1&&isTradeBetter(v1Trade,v2Trade)?Version.v2:undefined;var parsedAmounts=showWrap?(_ref={},_defineProperty(_ref,Field.INPUT,parsedAmount),_defineProperty(_ref,Field.OUTPUT,parsedAmount),_ref):(_ref2={},_defineProperty(_ref2,Field.INPUT,independentField===Field.INPUT?parsedAmount:trade===null||trade===void 0?void 0:trade.inputAmount),_defineProperty(_ref2,Field.OUTPUT,independentField===Field.OUTPUT?parsedAmount:trade===null||trade===void 0?void 0:trade.outputAmount),_ref2);var _useSwapActionHandler=useSwapActionHandlers(),onSwitchTokens=_useSwapActionHandler.onSwitchTokens,onCurrencySelection=_useSwapActionHandler.onCurrencySelection,onUserInput=_useSwapActionHandler.onUserInput,onChangeRecipient=_useSwapActionHandler.onChangeRecipient;var isValid=!swapInputError;var dependentField=independentField===Field.INPUT?Field.OUTPUT:Field.INPUT;var handleTypeInput=useCallback(function(value){onUserInput(Field.INPUT,value);},[onUserInput]);var handleTypeOutput=useCallback(function(value){onUserInput(Field.OUTPUT,value);},[onUserInput]);// modal and loading\nvar _useState=useState({showConfirm:false,tradeToConfirm:undefined,attemptingTxn:false,swapErrorMessage:undefined,txHash:undefined}),_useState2=_slicedToArray(_useState,2),_useState2$=_useState2[0],showConfirm=_useState2$.showConfirm,tradeToConfirm=_useState2$.tradeToConfirm,swapErrorMessage=_useState2$.swapErrorMessage,attemptingTxn=_useState2$.attemptingTxn,txHash=_useState2$.txHash,setSwapState=_useState2[1];var formattedAmounts=(_formattedAmounts={},_defineProperty(_formattedAmounts,independentField,typedValue),_defineProperty(_formattedAmounts,dependentField,showWrap?(_parsedAmounts$indepe=(_parsedAmounts$indepe2=parsedAmounts[independentField])===null||_parsedAmounts$indepe2===void 0?void 0:_parsedAmounts$indepe2.toExact())!==null&&_parsedAmounts$indepe!==void 0?_parsedAmounts$indepe:'':(_parsedAmounts$depend=(_parsedAmounts$depend2=parsedAmounts[dependentField])===null||_parsedAmounts$depend2===void 0?void 0:_parsedAmounts$depend2.toSignificant(6))!==null&&_parsedAmounts$depend!==void 0?_parsedAmounts$depend:''),_formattedAmounts);var route=trade===null||trade===void 0?void 0:trade.route;var userHasSpecifiedInputOutput=Boolean(currencies[Field.INPUT]&&currencies[Field.OUTPUT]&&((_parsedAmounts$indepe3=parsedAmounts[independentField])===null||_parsedAmounts$indepe3===void 0?void 0:_parsedAmounts$indepe3.greaterThan(JSBI.BigInt(0))));var noRoute=!route;// check whether the user has approved the router on the input token\nvar _useApproveCallbackFr=useApproveCallbackFromTrade(trade,allowedSlippage),_useApproveCallbackFr2=_slicedToArray(_useApproveCallbackFr,2),approval=_useApproveCallbackFr2[0],approveCallback=_useApproveCallbackFr2[1];// check if user has gone through approval process, used to show two step buttons, reset on token change\nvar _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),approvalSubmitted=_useState4[0],setApprovalSubmitted=_useState4[1];// mark when a user has submitted an approval, reset onTokenSelection for input field\nuseEffect(function(){if(approval===ApprovalState.PENDING){setApprovalSubmitted(true);}},[approval,approvalSubmitted]);var maxAmountInput=maxAmountSpend(currencyBalances[Field.INPUT]);var atMaxAmountInput=Boolean(maxAmountInput&&((_parsedAmounts$Field$=parsedAmounts[Field.INPUT])===null||_parsedAmounts$Field$===void 0?void 0:_parsedAmounts$Field$.equalTo(maxAmountInput)));// the callback to execute the swap\nvar _useSwapCallback=useSwapCallback(trade,allowedSlippage,deadline,recipient),swapCallback=_useSwapCallback.callback,swapCallbackError=_useSwapCallback.error;var _computeTradePriceBre=computeTradePriceBreakdown(trade),priceImpactWithoutFee=_computeTradePriceBre.priceImpactWithoutFee;var handleSwap=useCallback(function(){if(priceImpactWithoutFee&&!confirmPriceImpactWithoutFee(priceImpactWithoutFee)){return;}if(!swapCallback){return;}setSwapState({attemptingTxn:true,tradeToConfirm:tradeToConfirm,showConfirm:showConfirm,swapErrorMessage:undefined,txHash:undefined});swapCallback().then(function(hash){var _trade$inputAmount,_trade$inputAmount$cu,_trade$outputAmount,_trade$outputAmount$c;setSwapState({attemptingTxn:false,tradeToConfirm:tradeToConfirm,showConfirm:showConfirm,swapErrorMessage:undefined,txHash:hash});ReactGA.event({category:'Swap',action:recipient===null?'Swap w/o Send':(recipientAddress!==null&&recipientAddress!==void 0?recipientAddress:recipient)===account?'Swap w/o Send + recipient':'Swap w/ Send',label:[trade===null||trade===void 0?void 0:(_trade$inputAmount=trade.inputAmount)===null||_trade$inputAmount===void 0?void 0:(_trade$inputAmount$cu=_trade$inputAmount.currency)===null||_trade$inputAmount$cu===void 0?void 0:_trade$inputAmount$cu.symbol,trade===null||trade===void 0?void 0:(_trade$outputAmount=trade.outputAmount)===null||_trade$outputAmount===void 0?void 0:(_trade$outputAmount$c=_trade$outputAmount.currency)===null||_trade$outputAmount$c===void 0?void 0:_trade$outputAmount$c.symbol,getTradeVersion(trade)].join('/')});}).catch(function(error){setSwapState({attemptingTxn:false,tradeToConfirm:tradeToConfirm,showConfirm:showConfirm,swapErrorMessage:error.message,txHash:undefined});});},[tradeToConfirm,account,priceImpactWithoutFee,recipient,recipientAddress,showConfirm,swapCallback,trade]);// errors\nvar _useState5=useState(false),_useState6=_slicedToArray(_useState5,2),showInverted=_useState6[0],setShowInverted=_useState6[1];// warnings on slippage\nvar priceImpactSeverity=warningSeverity(priceImpactWithoutFee);// show approve flow when: no error on inputs, not approved or pending, or approved in current session\n// never show if price impact is above threshold in non expert mode\nvar showApproveFlow=!swapInputError&&(approval===ApprovalState.NOT_APPROVED||approval===ApprovalState.PENDING||approvalSubmitted&&approval===ApprovalState.APPROVED)&&!(priceImpactSeverity>3&&!isExpertMode);var _useTokenWarningDismi=useTokenWarningDismissal(chainId,currencies[Field.INPUT]),_useTokenWarningDismi2=_slicedToArray(_useTokenWarningDismi,1),dismissedToken0=_useTokenWarningDismi2[0];var _useTokenWarningDismi3=useTokenWarningDismissal(chainId,currencies[Field.OUTPUT]),_useTokenWarningDismi4=_slicedToArray(_useTokenWarningDismi3,1),dismissedToken1=_useTokenWarningDismi4[0];var showWarning=!dismissedToken0&&!!currencies[Field.INPUT]||!dismissedToken1&&!!currencies[Field.OUTPUT];var handleConfirmDismiss=useCallback(function(){setSwapState({showConfirm:false,tradeToConfirm:tradeToConfirm,attemptingTxn:attemptingTxn,swapErrorMessage:swapErrorMessage,txHash:txHash});// if there was a tx hash, we want to clear the input\nif(txHash){onUserInput(Field.INPUT,'');}},[attemptingTxn,onUserInput,swapErrorMessage,tradeToConfirm,txHash]);var handleAcceptChanges=useCallback(function(){setSwapState({tradeToConfirm:trade,swapErrorMessage:swapErrorMessage,txHash:txHash,attemptingTxn:attemptingTxn,showConfirm:showConfirm});},[attemptingTxn,showConfirm,swapErrorMessage,trade,txHash]);return/*#__PURE__*/React.createElement(React.Fragment,null,showWarning&&/*#__PURE__*/React.createElement(TokenWarningCards,{currencies:currencies}),/*#__PURE__*/React.createElement(AppBody,{disabled:showWarning},/*#__PURE__*/React.createElement(SwapPoolTabs,{active:'swap'}),/*#__PURE__*/React.createElement(Wrapper,{id:\"swap-page\"},/*#__PURE__*/React.createElement(ConfirmSwapModal,{isOpen:showConfirm,trade:trade,originalTrade:tradeToConfirm,onAcceptChanges:handleAcceptChanges,attemptingTxn:attemptingTxn,txHash:txHash,recipient:recipient,allowedSlippage:allowedSlippage,onConfirm:handleSwap,swapErrorMessage:swapErrorMessage,onDismiss:handleConfirmDismiss}),/*#__PURE__*/React.createElement(AutoColumn,{gap:'md'},/*#__PURE__*/React.createElement(CurrencyInputPanel,{label:independentField===Field.OUTPUT&&!showWrap?t('fromestimated'):t('fromCapitalized'),value:formattedAmounts[Field.INPUT],showMaxButton:!atMaxAmountInput,currency:currencies[Field.INPUT],onUserInput:handleTypeInput,onMax:function onMax(){maxAmountInput&&onUserInput(Field.INPUT,maxAmountInput.toExact());},onCurrencySelect:function onCurrencySelect(currency){setApprovalSubmitted(false);// reset 2 step UI for approvals\nonCurrencySelection(Field.INPUT,currency);},otherCurrency:currencies[Field.OUTPUT],id:\"swap-currency-input\"}),/*#__PURE__*/React.createElement(AutoColumn,{justify:\"space-between\"},/*#__PURE__*/React.createElement(AutoRow,{justify:\"space-between\",style:{padding:'0 1rem'}},/*#__PURE__*/React.createElement(ArrowWrapper,{clickable:true},/*#__PURE__*/React.createElement(ArrowDown,{size:\"16\",onClick:function onClick(){setApprovalSubmitted(false);// reset 2 step UI for approvals\nonSwitchTokens();},color:currencies[Field.INPUT]&&currencies[Field.OUTPUT]?theme.primary1:theme.text2})),recipient===null&&!showWrap&&isExpertMode?/*#__PURE__*/React.createElement(LinkStyledButton,{id:\"add-recipient-button\",onClick:function onClick(){return onChangeRecipient('');}},\"+ Add a send (optional)\"):null)),/*#__PURE__*/React.createElement(CurrencyInputPanel,{value:formattedAmounts[Field.OUTPUT],onUserInput:handleTypeOutput,label:independentField===Field.INPUT&&!showWrap?t('toestimated'):t('toCapitalized'),showMaxButton:false,currency:currencies[Field.OUTPUT],onCurrencySelect:function onCurrencySelect(address){return onCurrencySelection(Field.OUTPUT,address);},otherCurrency:currencies[Field.INPUT],id:\"swap-currency-output\"}),recipient!==null&&!showWrap?/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(AutoRow,{justify:\"space-between\",style:{padding:'0 1rem'}},/*#__PURE__*/React.createElement(ArrowWrapper,{clickable:false},/*#__PURE__*/React.createElement(ArrowDown,{size:\"16\",color:theme.text2})),/*#__PURE__*/React.createElement(LinkStyledButton,{id:\"remove-recipient-button\",onClick:function onClick(){return onChangeRecipient(null);}},\"- Remove send\")),/*#__PURE__*/React.createElement(AddressInputPanel,{id:\"recipient\",value:recipient,onChange:onChangeRecipient})):null,showWrap?null:/*#__PURE__*/React.createElement(Card,{padding:'.25rem .75rem 0 .75rem',borderRadius:'20px'},/*#__PURE__*/React.createElement(AutoColumn,{gap:\"4px\"},/*#__PURE__*/React.createElement(RowBetween,{align:\"center\"},/*#__PURE__*/React.createElement(Text,{fontWeight:500,fontSize:14,color:theme.text2},t('price')),/*#__PURE__*/React.createElement(TradePrice,{inputCurrency:currencies[Field.INPUT],outputCurrency:currencies[Field.OUTPUT],price:trade===null||trade===void 0?void 0:trade.executionPrice,showInverted:showInverted,setShowInverted:setShowInverted})),allowedSlippage!==INITIAL_ALLOWED_SLIPPAGE&&/*#__PURE__*/React.createElement(RowBetween,{align:\"center\"},/*#__PURE__*/React.createElement(ClickableText,{fontWeight:500,fontSize:14,color:theme.text2,onClick:toggleSettings},\"Slippage Tolerance\"),/*#__PURE__*/React.createElement(ClickableText,{fontWeight:500,fontSize:14,color:theme.text2,onClick:toggleSettings},allowedSlippage?allowedSlippage/100:'-',\"%\"))))),/*#__PURE__*/React.createElement(BottomGrouping,null,!account?/*#__PURE__*/React.createElement(ButtonLight,{onClick:toggleWalletModal},t('connectWallet')):showWrap?/*#__PURE__*/React.createElement(ButtonPrimary,{disabled:Boolean(wrapInputError),onClick:onWrap},wrapInputError!==null&&wrapInputError!==void 0?wrapInputError:wrapType===WrapType.WRAP?'Wrap':wrapType===WrapType.UNWRAP?'Unwrap':null):noRoute&&userHasSpecifiedInputOutput?/*#__PURE__*/React.createElement(GreyCard,{style:{textAlign:'center'}},/*#__PURE__*/React.createElement(TYPE.main,{mb:\"4px\"},t('insufficientLiquidityForThisTrade'))):showApproveFlow?/*#__PURE__*/React.createElement(RowBetween,null,/*#__PURE__*/React.createElement(ButtonPrimary,{onClick:approveCallback,disabled:approval!==ApprovalState.NOT_APPROVED||approvalSubmitted,width:\"48%\",altDisbaledStyle:approval===ApprovalState.PENDING// show solid button while waiting\n},approval===ApprovalState.PENDING?/*#__PURE__*/React.createElement(Dots,null,\"Approving\"):approvalSubmitted&&approval===ApprovalState.APPROVED?'Approved':'Approve '+((_currencies$Field$INP=currencies[Field.INPUT])===null||_currencies$Field$INP===void 0?void 0:_currencies$Field$INP.symbol)),/*#__PURE__*/React.createElement(ButtonError,{onClick:function onClick(){if(isExpertMode){handleSwap();}else{setSwapState({tradeToConfirm:trade,attemptingTxn:false,swapErrorMessage:undefined,showConfirm:true,txHash:undefined});}},width:\"48%\",id:\"swap-button\",disabled:!isValid||approval!==ApprovalState.APPROVED||priceImpactSeverity>3&&!isExpertMode,error:isValid&&priceImpactSeverity>2},/*#__PURE__*/React.createElement(Text,{fontSize:16,fontWeight:500},priceImpactSeverity>3&&!isExpertMode?\"Price Impact High\":\"Swap\".concat(priceImpactSeverity>2?' Anyway':'')))):/*#__PURE__*/React.createElement(ButtonError,{onClick:function onClick(){if(isExpertMode){handleSwap();}else{setSwapState({tradeToConfirm:trade,attemptingTxn:false,swapErrorMessage:undefined,showConfirm:true,txHash:undefined});}},id:\"swap-button\",disabled:!isValid||priceImpactSeverity>3&&!isExpertMode||!!swapCallbackError,error:isValid&&priceImpactSeverity>2&&!swapCallbackError},/*#__PURE__*/React.createElement(Text,{fontSize:20,fontWeight:500},swapInputError?swapInputError:priceImpactSeverity>3&&!isExpertMode?\"Price Impact Too High\":\"Swap\".concat(priceImpactSeverity>2?' Anyway':''))),isExpertMode&&swapErrorMessage?/*#__PURE__*/React.createElement(SwapCallbackError,{error:swapErrorMessage}):null,betterTradeLinkVersion&&/*#__PURE__*/React.createElement(BetterTradeLink,{version:betterTradeLinkVersion})))),/*#__PURE__*/React.createElement(AdvancedSwapDetailsDropdown,{trade:trade}));}","map":{"version":3,"sources":["/Users/lap14205/Documents/home/blockchain_learning/mdex-bscswap/src/pages/Swap/index.tsx"],"names":["JSBI","React","useCallback","useContext","useEffect","useState","ArrowDown","ReactGA","Text","useTranslation","ThemeContext","AddressInputPanel","ButtonError","ButtonLight","ButtonPrimary","Card","GreyCard","AutoColumn","ConfirmSwapModal","CurrencyInputPanel","SwapPoolTabs","AutoRow","RowBetween","AdvancedSwapDetailsDropdown","BetterTradeLink","confirmPriceImpactWithoutFee","ArrowWrapper","BottomGrouping","Dots","SwapCallbackError","Wrapper","TradePrice","TokenWarningCards","BETTER_TRADE_LINK_THRESHOLD","INITIAL_ALLOWED_SLIPPAGE","getTradeVersion","isTradeBetter","useActiveWeb3React","ApprovalState","useApproveCallbackFromTrade","useENSAddress","useSwapCallback","useToggledVersion","Version","useWrapCallback","WrapType","useToggleSettingsMenu","useWalletModalToggle","Field","useDefaultsFromURLSearch","useDerivedSwapInfo","useSwapActionHandlers","useSwapState","useExpertModeManager","useTokenWarningDismissal","useUserDeadline","useUserSlippageTolerance","LinkStyledButton","TYPE","maxAmountSpend","computeTradePriceBreakdown","warningSeverity","AppBody","ClickableText","Swap","t","account","chainId","theme","toggleWalletModal","toggleSettings","isExpertMode","deadline","allowedSlippage","independentField","typedValue","recipient","v1Trade","v2Trade","currencyBalances","parsedAmount","currencies","swapInputError","inputError","INPUT","OUTPUT","wrapType","onWrap","execute","wrapInputError","showWrap","NOT_APPLICABLE","recipientAddress","address","toggledVersion","trade","undefined","v1","v2","betterTradeLinkVersion","parsedAmounts","inputAmount","outputAmount","onSwitchTokens","onCurrencySelection","onUserInput","onChangeRecipient","isValid","dependentField","handleTypeInput","value","handleTypeOutput","showConfirm","tradeToConfirm","attemptingTxn","swapErrorMessage","txHash","setSwapState","formattedAmounts","toExact","toSignificant","route","userHasSpecifiedInputOutput","Boolean","greaterThan","BigInt","noRoute","approval","approveCallback","approvalSubmitted","setApprovalSubmitted","PENDING","maxAmountInput","atMaxAmountInput","equalTo","swapCallback","callback","swapCallbackError","error","priceImpactWithoutFee","handleSwap","then","hash","event","category","action","label","currency","symbol","join","catch","message","showInverted","setShowInverted","priceImpactSeverity","showApproveFlow","NOT_APPROVED","APPROVED","dismissedToken0","dismissedToken1","showWarning","handleConfirmDismiss","handleAcceptChanges","padding","primary1","text2","executionPrice","WRAP","UNWRAP","textAlign"],"mappings":"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","sourcesContent":["import { CurrencyAmount, JSBI, Trade } from '@bscswap/sdk'\nimport React, { useCallback, useContext, useEffect, useState } from 'react'\nimport { ArrowDown } from 'react-feather'\nimport ReactGA from 'react-ga'\nimport { Text } from 'rebass'\nimport { useTranslation } from 'react-i18next'\nimport { ThemeContext } from 'styled-components'\nimport AddressInputPanel from '../../components/AddressInputPanel'\nimport { ButtonError, ButtonLight, ButtonPrimary } from '../../components/Button'\nimport Card, { GreyCard } from '../../components/Card'\nimport { AutoColumn } from '../../components/Column'\nimport ConfirmSwapModal from '../../components/swap/ConfirmSwapModal'\nimport CurrencyInputPanel from '../../components/CurrencyInputPanel'\nimport { SwapPoolTabs } from '../../components/NavigationTabs'\nimport { AutoRow, RowBetween } from '../../components/Row'\nimport AdvancedSwapDetailsDropdown from '../../components/swap/AdvancedSwapDetailsDropdown'\nimport BetterTradeLink from '../../components/swap/BetterTradeLink'\nimport confirmPriceImpactWithoutFee from '../../components/swap/confirmPriceImpactWithoutFee'\nimport { ArrowWrapper, BottomGrouping, Dots, SwapCallbackError, Wrapper } from '../../components/swap/styleds'\nimport TradePrice from '../../components/swap/TradePrice'\nimport { TokenWarningCards } from '../../components/TokenWarningCard'\n\nimport { BETTER_TRADE_LINK_THRESHOLD, INITIAL_ALLOWED_SLIPPAGE } from '../../constants'\nimport { getTradeVersion, isTradeBetter } from '../../data/V1'\nimport { useActiveWeb3React } from '../../hooks'\nimport { ApprovalState, useApproveCallbackFromTrade } from '../../hooks/useApproveCallback'\nimport useENSAddress from '../../hooks/useENSAddress'\nimport { useSwapCallback } from '../../hooks/useSwapCallback'\nimport useToggledVersion, { Version } from '../../hooks/useToggledVersion'\nimport useWrapCallback, { WrapType } from '../../hooks/useWrapCallback'\nimport { useToggleSettingsMenu, useWalletModalToggle } from '../../state/application/hooks'\nimport { Field } from '../../state/swap/actions'\nimport {\n  useDefaultsFromURLSearch,\n  useDerivedSwapInfo,\n  useSwapActionHandlers,\n  useSwapState\n} from '../../state/swap/hooks'\nimport {\n  useExpertModeManager,\n  useTokenWarningDismissal,\n  useUserDeadline,\n  useUserSlippageTolerance\n} from '../../state/user/hooks'\nimport { LinkStyledButton, TYPE } from '../../theme'\nimport { maxAmountSpend } from '../../utils/maxAmountSpend'\nimport { computeTradePriceBreakdown, warningSeverity } from '../../utils/prices'\nimport AppBody from '../AppBody'\nimport { ClickableText } from '../Pool/styleds'\n\nexport default function Swap() {\n  useDefaultsFromURLSearch()\n  const { t } = useTranslation()\n\n  const { account, chainId } = useActiveWeb3React()\n  const theme = useContext(ThemeContext)\n\n  // toggle wallet when disconnected\n  const toggleWalletModal = useWalletModalToggle()\n\n  // for expert mode\n  const toggleSettings = useToggleSettingsMenu()\n  const [isExpertMode] = useExpertModeManager()\n\n  // get custom setting values for user\n  const [deadline] = useUserDeadline()\n  const [allowedSlippage] = useUserSlippageTolerance()\n\n  // swap state\n  const { independentField, typedValue, recipient } = useSwapState()\n  const {\n    v1Trade,\n    v2Trade,\n    currencyBalances,\n    parsedAmount,\n    currencies,\n    inputError: swapInputError\n  } = useDerivedSwapInfo()\n  const { wrapType, execute: onWrap, inputError: wrapInputError } = useWrapCallback(\n    currencies[Field.INPUT],\n    currencies[Field.OUTPUT],\n    typedValue\n  )\n  const showWrap: boolean = wrapType !== WrapType.NOT_APPLICABLE\n  const { address: recipientAddress } = useENSAddress(recipient)\n  const toggledVersion = useToggledVersion()\n  const trade = showWrap\n    ? undefined\n    : {\n        [Version.v1]: v1Trade,\n        [Version.v2]: v2Trade\n      }[toggledVersion]\n\n  const betterTradeLinkVersion: Version | undefined =\n    toggledVersion === Version.v2 && isTradeBetter(v2Trade, v1Trade, BETTER_TRADE_LINK_THRESHOLD)\n      ? Version.v1\n      : toggledVersion === Version.v1 && isTradeBetter(v1Trade, v2Trade)\n      ? Version.v2\n      : undefined\n\n  const parsedAmounts = showWrap\n    ? {\n        [Field.INPUT]: parsedAmount,\n        [Field.OUTPUT]: parsedAmount\n      }\n    : {\n        [Field.INPUT]: independentField === Field.INPUT ? parsedAmount : trade?.inputAmount,\n        [Field.OUTPUT]: independentField === Field.OUTPUT ? parsedAmount : trade?.outputAmount\n      }\n\n  const { onSwitchTokens, onCurrencySelection, onUserInput, onChangeRecipient } = useSwapActionHandlers()\n  const isValid = !swapInputError\n  const dependentField: Field = independentField === Field.INPUT ? Field.OUTPUT : Field.INPUT\n\n  const handleTypeInput = useCallback(\n    (value: string) => {\n      onUserInput(Field.INPUT, value)\n    },\n    [onUserInput]\n  )\n  const handleTypeOutput = useCallback(\n    (value: string) => {\n      onUserInput(Field.OUTPUT, value)\n    },\n    [onUserInput]\n  )\n\n  // modal and loading\n  const [{ showConfirm, tradeToConfirm, swapErrorMessage, attemptingTxn, txHash }, setSwapState] = useState<{\n    showConfirm: boolean\n    tradeToConfirm: Trade | undefined\n    attemptingTxn: boolean\n    swapErrorMessage: string | undefined\n    txHash: string | undefined\n  }>({\n    showConfirm: false,\n    tradeToConfirm: undefined,\n    attemptingTxn: false,\n    swapErrorMessage: undefined,\n    txHash: undefined\n  })\n\n  const formattedAmounts = {\n    [independentField]: typedValue,\n    [dependentField]: showWrap\n      ? parsedAmounts[independentField]?.toExact() ?? ''\n      : parsedAmounts[dependentField]?.toSignificant(6) ?? ''\n  }\n\n  const route = trade?.route\n  const userHasSpecifiedInputOutput = Boolean(\n    currencies[Field.INPUT] && currencies[Field.OUTPUT] && parsedAmounts[independentField]?.greaterThan(JSBI.BigInt(0))\n  )\n  const noRoute = !route\n\n  // check whether the user has approved the router on the input token\n  const [approval, approveCallback] = useApproveCallbackFromTrade(trade, allowedSlippage)\n\n  // check if user has gone through approval process, used to show two step buttons, reset on token change\n  const [approvalSubmitted, setApprovalSubmitted] = useState<boolean>(false)\n\n  // mark when a user has submitted an approval, reset onTokenSelection for input field\n  useEffect(() => {\n    if (approval === ApprovalState.PENDING) {\n      setApprovalSubmitted(true)\n    }\n  }, [approval, approvalSubmitted])\n\n  const maxAmountInput: CurrencyAmount | undefined = maxAmountSpend(currencyBalances[Field.INPUT])\n  const atMaxAmountInput = Boolean(maxAmountInput && parsedAmounts[Field.INPUT]?.equalTo(maxAmountInput))\n\n  // the callback to execute the swap\n  const { callback: swapCallback, error: swapCallbackError } = useSwapCallback(\n    trade,\n    allowedSlippage,\n    deadline,\n    recipient\n  )\n\n  const { priceImpactWithoutFee } = computeTradePriceBreakdown(trade)\n\n  const handleSwap = useCallback(() => {\n    if (priceImpactWithoutFee && !confirmPriceImpactWithoutFee(priceImpactWithoutFee)) {\n      return\n    }\n    if (!swapCallback) {\n      return\n    }\n    setSwapState({ attemptingTxn: true, tradeToConfirm, showConfirm, swapErrorMessage: undefined, txHash: undefined })\n    swapCallback()\n      .then(hash => {\n        setSwapState({ attemptingTxn: false, tradeToConfirm, showConfirm, swapErrorMessage: undefined, txHash: hash })\n\n        ReactGA.event({\n          category: 'Swap',\n          action:\n            recipient === null\n              ? 'Swap w/o Send'\n              : (recipientAddress ?? recipient) === account\n              ? 'Swap w/o Send + recipient'\n              : 'Swap w/ Send',\n          label: [\n            trade?.inputAmount?.currency?.symbol,\n            trade?.outputAmount?.currency?.symbol,\n            getTradeVersion(trade)\n          ].join('/')\n        })\n      })\n      .catch(error => {\n        setSwapState({\n          attemptingTxn: false,\n          tradeToConfirm,\n          showConfirm,\n          swapErrorMessage: error.message,\n          txHash: undefined\n        })\n      })\n  }, [tradeToConfirm, account, priceImpactWithoutFee, recipient, recipientAddress, showConfirm, swapCallback, trade])\n\n  // errors\n  const [showInverted, setShowInverted] = useState<boolean>(false)\n\n  // warnings on slippage\n  const priceImpactSeverity = warningSeverity(priceImpactWithoutFee)\n\n  // show approve flow when: no error on inputs, not approved or pending, or approved in current session\n  // never show if price impact is above threshold in non expert mode\n  const showApproveFlow =\n    !swapInputError &&\n    (approval === ApprovalState.NOT_APPROVED ||\n      approval === ApprovalState.PENDING ||\n      (approvalSubmitted && approval === ApprovalState.APPROVED)) &&\n    !(priceImpactSeverity > 3 && !isExpertMode)\n\n  const [dismissedToken0] = useTokenWarningDismissal(chainId, currencies[Field.INPUT])\n  const [dismissedToken1] = useTokenWarningDismissal(chainId, currencies[Field.OUTPUT])\n  const showWarning =\n    (!dismissedToken0 && !!currencies[Field.INPUT]) || (!dismissedToken1 && !!currencies[Field.OUTPUT])\n\n  const handleConfirmDismiss = useCallback(() => {\n    setSwapState({ showConfirm: false, tradeToConfirm, attemptingTxn, swapErrorMessage, txHash })\n    // if there was a tx hash, we want to clear the input\n    if (txHash) {\n      onUserInput(Field.INPUT, '')\n    }\n  }, [attemptingTxn, onUserInput, swapErrorMessage, tradeToConfirm, txHash])\n\n  const handleAcceptChanges = useCallback(() => {\n    setSwapState({ tradeToConfirm: trade, swapErrorMessage, txHash, attemptingTxn, showConfirm })\n  }, [attemptingTxn, showConfirm, swapErrorMessage, trade, txHash])\n\n  return (\n    <>\n      {showWarning && <TokenWarningCards currencies={currencies} />}\n      <AppBody disabled={showWarning}>\n        <SwapPoolTabs active={'swap'} />\n        <Wrapper id=\"swap-page\">\n          <ConfirmSwapModal\n            isOpen={showConfirm}\n            trade={trade}\n            originalTrade={tradeToConfirm}\n            onAcceptChanges={handleAcceptChanges}\n            attemptingTxn={attemptingTxn}\n            txHash={txHash}\n            recipient={recipient}\n            allowedSlippage={allowedSlippage}\n            onConfirm={handleSwap}\n            swapErrorMessage={swapErrorMessage}\n            onDismiss={handleConfirmDismiss}\n          />\n\n          <AutoColumn gap={'md'}>\n            <CurrencyInputPanel\n              label={independentField === Field.OUTPUT && !showWrap ? t('fromestimated') : t('fromCapitalized')}\n              value={formattedAmounts[Field.INPUT]}\n              showMaxButton={!atMaxAmountInput}\n              currency={currencies[Field.INPUT]}\n              onUserInput={handleTypeInput}\n              onMax={() => {\n                maxAmountInput && onUserInput(Field.INPUT, maxAmountInput.toExact())\n              }}\n              onCurrencySelect={currency => {\n                setApprovalSubmitted(false) // reset 2 step UI for approvals\n                onCurrencySelection(Field.INPUT, currency)\n              }}\n              otherCurrency={currencies[Field.OUTPUT]}\n              id=\"swap-currency-input\"\n            />\n\n            <AutoColumn justify=\"space-between\">\n              <AutoRow justify=\"space-between\" style={{ padding: '0 1rem' }}>\n                <ArrowWrapper clickable>\n                  <ArrowDown\n                    size=\"16\"\n                    onClick={() => {\n                      setApprovalSubmitted(false) // reset 2 step UI for approvals\n                      onSwitchTokens()\n                    }}\n                    color={currencies[Field.INPUT] && currencies[Field.OUTPUT] ? theme.primary1 : theme.text2}\n                  />\n                </ArrowWrapper>\n                {recipient === null && !showWrap && isExpertMode ? (\n                  <LinkStyledButton id=\"add-recipient-button\" onClick={() => onChangeRecipient('')}>\n                    + Add a send (optional)\n                  </LinkStyledButton>\n                ) : null}\n              </AutoRow>\n            </AutoColumn>\n            <CurrencyInputPanel\n              value={formattedAmounts[Field.OUTPUT]}\n              onUserInput={handleTypeOutput}\n              label={independentField === Field.INPUT && !showWrap ? t('toestimated') : t('toCapitalized')}\n              showMaxButton={false}\n              currency={currencies[Field.OUTPUT]}\n              onCurrencySelect={address => onCurrencySelection(Field.OUTPUT, address)}\n              otherCurrency={currencies[Field.INPUT]}\n              id=\"swap-currency-output\"\n            />\n\n            {recipient !== null && !showWrap ? (\n              <>\n                <AutoRow justify=\"space-between\" style={{ padding: '0 1rem' }}>\n                  <ArrowWrapper clickable={false}>\n                    <ArrowDown size=\"16\" color={theme.text2} />\n                  </ArrowWrapper>\n                  <LinkStyledButton id=\"remove-recipient-button\" onClick={() => onChangeRecipient(null)}>\n                    - Remove send\n                  </LinkStyledButton>\n                </AutoRow>\n                <AddressInputPanel id=\"recipient\" value={recipient} onChange={onChangeRecipient} />\n              </>\n            ) : null}\n\n            {showWrap ? null : (\n              <Card padding={'.25rem .75rem 0 .75rem'} borderRadius={'20px'}>\n                <AutoColumn gap=\"4px\">\n                  <RowBetween align=\"center\">\n                    <Text fontWeight={500} fontSize={14} color={theme.text2}>\n                      {t('price')}\n                    </Text>\n                    <TradePrice\n                      inputCurrency={currencies[Field.INPUT]}\n                      outputCurrency={currencies[Field.OUTPUT]}\n                      price={trade?.executionPrice}\n                      showInverted={showInverted}\n                      setShowInverted={setShowInverted}\n                    />\n                  </RowBetween>\n\n                  {allowedSlippage !== INITIAL_ALLOWED_SLIPPAGE && (\n                    <RowBetween align=\"center\">\n                      <ClickableText fontWeight={500} fontSize={14} color={theme.text2} onClick={toggleSettings}>\n                        Slippage Tolerance\n                      </ClickableText>\n                      <ClickableText fontWeight={500} fontSize={14} color={theme.text2} onClick={toggleSettings}>\n                        {allowedSlippage ? allowedSlippage / 100 : '-'}%\n                      </ClickableText>\n                    </RowBetween>\n                  )}\n                </AutoColumn>\n              </Card>\n            )}\n          </AutoColumn>\n          <BottomGrouping>\n            {!account ? (\n              <ButtonLight onClick={toggleWalletModal}>{t('connectWallet')}</ButtonLight>\n            ) : showWrap ? (\n              <ButtonPrimary disabled={Boolean(wrapInputError)} onClick={onWrap}>\n                {wrapInputError ??\n                  (wrapType === WrapType.WRAP ? 'Wrap' : wrapType === WrapType.UNWRAP ? 'Unwrap' : null)}\n              </ButtonPrimary>\n            ) : noRoute && userHasSpecifiedInputOutput ? (\n              <GreyCard style={{ textAlign: 'center' }}>\n                <TYPE.main mb=\"4px\">{t('insufficientLiquidityForThisTrade')}</TYPE.main>\n              </GreyCard>\n            ) : showApproveFlow ? (\n              <RowBetween>\n                <ButtonPrimary\n                  onClick={approveCallback}\n                  disabled={approval !== ApprovalState.NOT_APPROVED || approvalSubmitted}\n                  width=\"48%\"\n                  altDisbaledStyle={approval === ApprovalState.PENDING} // show solid button while waiting\n                >\n                  {approval === ApprovalState.PENDING ? (\n                    <Dots>Approving</Dots>\n                  ) : approvalSubmitted && approval === ApprovalState.APPROVED ? (\n                    'Approved'\n                  ) : (\n                    'Approve ' + currencies[Field.INPUT]?.symbol\n                  )}\n                </ButtonPrimary>\n                <ButtonError\n                  onClick={() => {\n                    if (isExpertMode) {\n                      handleSwap()\n                    } else {\n                      setSwapState({\n                        tradeToConfirm: trade,\n                        attemptingTxn: false,\n                        swapErrorMessage: undefined,\n                        showConfirm: true,\n                        txHash: undefined\n                      })\n                    }\n                  }}\n                  width=\"48%\"\n                  id=\"swap-button\"\n                  disabled={\n                    !isValid || approval !== ApprovalState.APPROVED || (priceImpactSeverity > 3 && !isExpertMode)\n                  }\n                  error={isValid && priceImpactSeverity > 2}\n                >\n                  <Text fontSize={16} fontWeight={500}>\n                    {priceImpactSeverity > 3 && !isExpertMode\n                      ? `Price Impact High`\n                      : `Swap${priceImpactSeverity > 2 ? ' Anyway' : ''}`}\n                  </Text>\n                </ButtonError>\n              </RowBetween>\n            ) : (\n              <ButtonError\n                onClick={() => {\n                  if (isExpertMode) {\n                    handleSwap()\n                  } else {\n                    setSwapState({\n                      tradeToConfirm: trade,\n                      attemptingTxn: false,\n                      swapErrorMessage: undefined,\n                      showConfirm: true,\n                      txHash: undefined\n                    })\n                  }\n                }}\n                id=\"swap-button\"\n                disabled={!isValid || (priceImpactSeverity > 3 && !isExpertMode) || !!swapCallbackError}\n                error={isValid && priceImpactSeverity > 2 && !swapCallbackError}\n              >\n                <Text fontSize={20} fontWeight={500}>\n                  {swapInputError\n                    ? swapInputError\n                    : priceImpactSeverity > 3 && !isExpertMode\n                    ? `Price Impact Too High`\n                    : `Swap${priceImpactSeverity > 2 ? ' Anyway' : ''}`}\n                </Text>\n              </ButtonError>\n            )}\n            {isExpertMode && swapErrorMessage ? <SwapCallbackError error={swapErrorMessage} /> : null}\n            {betterTradeLinkVersion && <BetterTradeLink version={betterTradeLinkVersion} />}\n          </BottomGrouping>\n        </Wrapper>\n      </AppBody>\n      <AdvancedSwapDetailsDropdown trade={trade} />\n    </>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}