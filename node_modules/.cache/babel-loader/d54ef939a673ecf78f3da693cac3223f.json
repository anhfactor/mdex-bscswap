{"ast":null,"code":"var _jsxFileName = \"/Users/lap14205/Documents/home/blockchain_learning/mdex-bscswap/src/components/Popups/PopupItem.tsx\";\nimport React, { useCallback, useContext, useState } from 'react';\nimport { X } from 'react-feather';\nimport styled, { ThemeContext } from 'styled-components';\nimport useInterval from '../../hooks/useInterval';\nimport { useRemovePopup } from '../../state/application/hooks';\nimport ListUpdatePopup from './ListUpdatePopup';\nimport TransactionPopup from './TransactionPopup';\nexport const StyledClose = styled(X)`\n  position: absolute;\n  right: 10px;\n  top: 10px;\n\n  :hover {\n    cursor: pointer;\n  }\n`;\nexport const Popup = styled.div`\n  display: inline-block;\n  width: 100%;\n  padding: 1em;\n  background-color: ${({\n  theme\n}) => theme.bg1};\n  position: relative;\n  border-radius: 10px;\n  padding: 20px;\n  padding-right: 35px;\n  z-index: 2;\n  overflow: hidden;\n\n  ${({\n  theme\n}) => theme.mediaWidth.upToSmall`\n    min-width: 290px;\n  `}\n`;\nconst DELAY = 100;\nconst Fader = styled.div`\n  position: absolute;\n  bottom: 0px;\n  left: 0px;\n  width: ${({\n  count\n}) => `calc(100% - (100% / ${150 / count}))`};\n  height: 2px;\n  background-color: ${({\n  theme\n}) => theme.bg3};\n  transition: width 100ms linear;\n`;\nexport default function PopupItem({\n  content,\n  popKey\n}) {\n  const [count, setCount] = useState(1);\n  const [isRunning, setIsRunning] = useState(true);\n  const removePopup = useRemovePopup();\n  const removeThisPopup = useCallback(() => removePopup(popKey), [popKey, removePopup]);\n  useInterval(() => {\n    count > 150 ? removeThisPopup() : setCount(count + 1);\n  }, isRunning ? DELAY : null);\n  const theme = useContext(ThemeContext);\n  const handleMouseEnter = useCallback(() => setIsRunning(false), []);\n  const handleMouseLeave = useCallback(() => setIsRunning(true), []);\n  let popupContent;\n\n  if ('txn' in content) {\n    const {\n      txn: {\n        hash,\n        success,\n        summary\n      }\n    } = content;\n    popupContent = /*#__PURE__*/React.createElement(TransactionPopup, {\n      hash: hash,\n      success: success,\n      summary: summary,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 20\n      }\n    });\n  } else if ('listUpdate' in content) {\n    const {\n      listUpdate: {\n        listUrl,\n        oldList,\n        newList,\n        auto\n      }\n    } = content;\n    popupContent = /*#__PURE__*/React.createElement(ListUpdatePopup, {\n      popKey: popKey,\n      listUrl: listUrl,\n      oldList: oldList,\n      newList: newList,\n      auto: auto,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 20\n      }\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(Popup, {\n    onMouseEnter: handleMouseEnter,\n    onMouseLeave: handleMouseLeave,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(StyledClose, {\n    color: theme.text2,\n    onClick: () => removePopup(popKey),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }\n  }), popupContent, /*#__PURE__*/React.createElement(Fader, {\n    count: count,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }\n  }));\n}","map":{"version":3,"sources":["/Users/lap14205/Documents/home/blockchain_learning/mdex-bscswap/src/components/Popups/PopupItem.tsx"],"names":["React","useCallback","useContext","useState","X","styled","ThemeContext","useInterval","useRemovePopup","ListUpdatePopup","TransactionPopup","StyledClose","Popup","div","theme","bg1","mediaWidth","upToSmall","DELAY","Fader","count","bg3","PopupItem","content","popKey","setCount","isRunning","setIsRunning","removePopup","removeThisPopup","handleMouseEnter","handleMouseLeave","popupContent","txn","hash","success","summary","listUpdate","listUrl","oldList","newList","auto","text2"],"mappings":"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","sourcesContent":["import React, { useCallback, useContext, useState } from 'react'\nimport { X } from 'react-feather'\nimport styled, { ThemeContext } from 'styled-components'\nimport useInterval from '../../hooks/useInterval'\nimport { PopupContent } from '../../state/application/actions'\nimport { useRemovePopup } from '../../state/application/hooks'\nimport ListUpdatePopup from './ListUpdatePopup'\nimport TransactionPopup from './TransactionPopup'\n\nexport const StyledClose = styled(X)`\n  position: absolute;\n  right: 10px;\n  top: 10px;\n\n  :hover {\n    cursor: pointer;\n  }\n`\nexport const Popup = styled.div`\n  display: inline-block;\n  width: 100%;\n  padding: 1em;\n  background-color: ${({ theme }) => theme.bg1};\n  position: relative;\n  border-radius: 10px;\n  padding: 20px;\n  padding-right: 35px;\n  z-index: 2;\n  overflow: hidden;\n\n  ${({ theme }) => theme.mediaWidth.upToSmall`\n    min-width: 290px;\n  `}\n`\nconst DELAY = 100\nconst Fader = styled.div<{ count: number }>`\n  position: absolute;\n  bottom: 0px;\n  left: 0px;\n  width: ${({ count }) => `calc(100% - (100% / ${150 / count}))`};\n  height: 2px;\n  background-color: ${({ theme }) => theme.bg3};\n  transition: width 100ms linear;\n`\n\nexport default function PopupItem({ content, popKey }: { content: PopupContent; popKey: string }) {\n  const [count, setCount] = useState(1)\n\n  const [isRunning, setIsRunning] = useState(true)\n  const removePopup = useRemovePopup()\n\n  const removeThisPopup = useCallback(() => removePopup(popKey), [popKey, removePopup])\n\n  useInterval(\n    () => {\n      count > 150 ? removeThisPopup() : setCount(count + 1)\n    },\n    isRunning ? DELAY : null\n  )\n\n  const theme = useContext(ThemeContext)\n\n  const handleMouseEnter = useCallback(() => setIsRunning(false), [])\n  const handleMouseLeave = useCallback(() => setIsRunning(true), [])\n\n  let popupContent\n  if ('txn' in content) {\n    const {\n      txn: { hash, success, summary }\n    } = content\n    popupContent = <TransactionPopup hash={hash} success={success} summary={summary} />\n  } else if ('listUpdate' in content) {\n    const {\n      listUpdate: { listUrl, oldList, newList, auto }\n    } = content\n    popupContent = <ListUpdatePopup popKey={popKey} listUrl={listUrl} oldList={oldList} newList={newList} auto={auto} />\n  }\n\n  return (\n    <Popup onMouseEnter={handleMouseEnter} onMouseLeave={handleMouseLeave}>\n      <StyledClose color={theme.text2} onClick={() => removePopup(popKey)} />\n      {popupContent}\n      <Fader count={count} />\n    </Popup>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}