{"ast":null,"code":"import { useEffect, useState } from 'react';\nimport { isAddress } from '../utils';\nimport { useActiveWeb3React } from './index';\n/**\n * Does a reverse lookup for an address to find its ENS name.\n * Note this is not the same as looking up an ENS name to find an address.\n */\n\nexport default function useENSName(address) {\n  const {\n    library\n  } = useActiveWeb3React();\n  const [ENSName, setENSName] = useState({\n    loading: false,\n    ENSName: null\n  });\n  useEffect(() => {\n    const validated = isAddress(address);\n\n    if (!library || !validated) {\n      setENSName({\n        loading: false,\n        ENSName: null\n      });\n      return;\n    } else {\n      let stale = false;\n      setENSName({\n        loading: true,\n        ENSName: null\n      });\n      library.lookupAddress(validated).then(name => {\n        if (!stale) {\n          if (name) {\n            setENSName({\n              loading: false,\n              ENSName: name\n            });\n          } else {\n            setENSName({\n              loading: false,\n              ENSName: null\n            });\n          }\n        }\n      }).catch(() => {\n        if (!stale) {\n          setENSName({\n            loading: false,\n            ENSName: null\n          });\n        }\n      });\n      return () => {\n        stale = true;\n      };\n    }\n  }, [library, address]);\n  return ENSName;\n}","map":{"version":3,"sources":["/Users/lap14205/Documents/home/blockchain_learning/mdex-bscswap/src/hooks/useENSName.ts"],"names":["useEffect","useState","isAddress","useActiveWeb3React","useENSName","address","library","ENSName","setENSName","loading","validated","stale","lookupAddress","then","name","catch"],"mappings":"AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,SAAT,QAA0B,UAA1B;AACA,SAASC,kBAAT,QAAmC,SAAnC;AAEA;;;;;AAIA,eAAe,SAASC,UAAT,CAAoBC,OAApB,EAAoF;AACjG,QAAM;AAAEC,IAAAA;AAAF,MAAcH,kBAAkB,EAAtC;AAEA,QAAM,CAACI,OAAD,EAAUC,UAAV,IAAwBP,QAAQ,CAA+C;AACnFQ,IAAAA,OAAO,EAAE,KAD0E;AAEnFF,IAAAA,OAAO,EAAE;AAF0E,GAA/C,CAAtC;AAKAP,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMU,SAAS,GAAGR,SAAS,CAACG,OAAD,CAA3B;;AACA,QAAI,CAACC,OAAD,IAAY,CAACI,SAAjB,EAA4B;AAC1BF,MAAAA,UAAU,CAAC;AAAEC,QAAAA,OAAO,EAAE,KAAX;AAAkBF,QAAAA,OAAO,EAAE;AAA3B,OAAD,CAAV;AACA;AACD,KAHD,MAGO;AACL,UAAII,KAAK,GAAG,KAAZ;AACAH,MAAAA,UAAU,CAAC;AAAEC,QAAAA,OAAO,EAAE,IAAX;AAAiBF,QAAAA,OAAO,EAAE;AAA1B,OAAD,CAAV;AACAD,MAAAA,OAAO,CACJM,aADH,CACiBF,SADjB,EAEGG,IAFH,CAEQC,IAAI,IAAI;AACZ,YAAI,CAACH,KAAL,EAAY;AACV,cAAIG,IAAJ,EAAU;AACRN,YAAAA,UAAU,CAAC;AAAEC,cAAAA,OAAO,EAAE,KAAX;AAAkBF,cAAAA,OAAO,EAAEO;AAA3B,aAAD,CAAV;AACD,WAFD,MAEO;AACLN,YAAAA,UAAU,CAAC;AAAEC,cAAAA,OAAO,EAAE,KAAX;AAAkBF,cAAAA,OAAO,EAAE;AAA3B,aAAD,CAAV;AACD;AACF;AACF,OAVH,EAWGQ,KAXH,CAWS,MAAM;AACX,YAAI,CAACJ,KAAL,EAAY;AACVH,UAAAA,UAAU,CAAC;AAAEC,YAAAA,OAAO,EAAE,KAAX;AAAkBF,YAAAA,OAAO,EAAE;AAA3B,WAAD,CAAV;AACD;AACF,OAfH;AAiBA,aAAO,MAAM;AACXI,QAAAA,KAAK,GAAG,IAAR;AACD,OAFD;AAGD;AACF,GA7BQ,EA6BN,CAACL,OAAD,EAAUD,OAAV,CA7BM,CAAT;AA+BA,SAAOE,OAAP;AACD","sourcesContent":["import { useEffect, useState } from 'react'\nimport { isAddress } from '../utils'\nimport { useActiveWeb3React } from './index'\n\n/**\n * Does a reverse lookup for an address to find its ENS name.\n * Note this is not the same as looking up an ENS name to find an address.\n */\nexport default function useENSName(address?: string): { ENSName: string | null; loading: boolean } {\n  const { library } = useActiveWeb3React()\n\n  const [ENSName, setENSName] = useState<{ ENSName: string | null; loading: boolean }>({\n    loading: false,\n    ENSName: null\n  })\n\n  useEffect(() => {\n    const validated = isAddress(address)\n    if (!library || !validated) {\n      setENSName({ loading: false, ENSName: null })\n      return\n    } else {\n      let stale = false\n      setENSName({ loading: true, ENSName: null })\n      library\n        .lookupAddress(validated)\n        .then(name => {\n          if (!stale) {\n            if (name) {\n              setENSName({ loading: false, ENSName: name })\n            } else {\n              setENSName({ loading: false, ENSName: null })\n            }\n          }\n        })\n        .catch(() => {\n          if (!stale) {\n            setENSName({ loading: false, ENSName: null })\n          }\n        })\n\n      return () => {\n        stale = true\n      }\n    }\n  }, [library, address])\n\n  return ENSName\n}\n"]},"metadata":{},"sourceType":"module"}