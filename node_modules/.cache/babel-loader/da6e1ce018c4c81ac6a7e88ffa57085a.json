{"ast":null,"code":"import _slicedToArray from\"/Users/lap14205/Documents/home/blockchain_learning/bscswap-interface/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import _objectWithoutProperties from\"/Users/lap14205/Documents/home/blockchain_learning/bscswap-interface/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";import _taggedTemplateLiteral from\"/Users/lap14205/Documents/home/blockchain_learning/bscswap-interface/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";function _templateObject3(){var data=_taggedTemplateLiteral([\"\\n  width: \",\";\\n  height: \",\";\\n  box-shadow: 0px 6px 10px rgba(0, 0, 0, 0.075);\\n  border-radius: 24px;\\n\"]);_templateObject3=function _templateObject3(){return data;};return data;}function _templateObject2(){var data=_taggedTemplateLiteral([\"\\n  display: flex;\\n  align-items: center;\\n  justify-content: center;\\n  font-size: \",\";\\n  width: \",\";\\n  height: \",\";\\n  margin-bottom: -4px;\\n\"]);_templateObject2=function _templateObject2(){return data;};return data;}function _templateObject(){var data=_taggedTemplateLiteral([\"\\n  width: \",\";\\n  height: \",\";\\n  background-color: white;\\n  border-radius: 1rem;\\n  box-shadow: 0px 6px 10px rgba(0, 0, 0, 0.075);\\n\"]);_templateObject=function _templateObject(){return data;};return data;}import{ETHER,Token}from'@bscswap/sdk';import React,{useState}from'react';import styled from'styled-components';import EthereumLogo from\"../../assets/images/bnb.svg\";import{WrappedTokenInfo}from'../../state/lists/hooks';import uriToHttp from'../../utils/uriToHttp';var getTokenLogoURL=function getTokenLogoURL(address){return\"https://tokens.bscswap.com/images/\".concat(address,\".png\");};var BAD_URIS={};var Image=styled.img(_templateObject(),function(_ref){var size=_ref.size;return size;},function(_ref2){var size=_ref2.size;return size;});var Emoji=styled.span(_templateObject2(),function(_ref3){var size=_ref3.size;return size;},function(_ref4){var size=_ref4.size;return size;},function(_ref5){var size=_ref5.size;return size;});var StyledEthereumLogo=styled.img(_templateObject3(),function(_ref6){var size=_ref6.size;return size;},function(_ref7){var size=_ref7.size;return size;});export default function CurrencyLogo(_ref8){var currency=_ref8.currency,_ref8$size=_ref8.size,size=_ref8$size===void 0?'24px':_ref8$size,rest=_objectWithoutProperties(_ref8,[\"currency\",\"size\"]);var _useState=useState(0),_useState2=_slicedToArray(_useState,2),refresh=_useState2[1];if(currency===ETHER){return/*#__PURE__*/React.createElement(StyledEthereumLogo,Object.assign({src:EthereumLogo,size:size},rest));}if(currency instanceof Token){var uri;if(currency instanceof WrappedTokenInfo){if(currency.logoURI&&!BAD_URIS[currency.logoURI]){uri=uriToHttp(currency.logoURI).filter(function(s){return!BAD_URIS[s];})[0];}}if(!uri){var defaultUri=getTokenLogoURL(currency.address);if(!BAD_URIS[defaultUri]){uri=defaultUri;}}if(uri){return/*#__PURE__*/React.createElement(Image,Object.assign({},rest,{alt:\"\".concat(currency.name,\" Logo\"),src:uri,size:size,onError:function onError(){if(currency instanceof Token){BAD_URIS[uri]=true;}refresh(function(i){return i+1;});}}));}}return/*#__PURE__*/React.createElement(Emoji,Object.assign({},rest,{size:size}),/*#__PURE__*/React.createElement(\"span\",{role:\"img\",\"aria-label\":\"Thinking\"},\"\\uD83E\\uDD14\"));}","map":{"version":3,"sources":["/Users/lap14205/Documents/home/blockchain_learning/bscswap-interface/src/components/CurrencyLogo/index.tsx"],"names":["ETHER","Token","React","useState","styled","WrappedTokenInfo","uriToHttp","getTokenLogoURL","address","BAD_URIS","Image","img","size","Emoji","span","StyledEthereumLogo","CurrencyLogo","currency","rest","refresh","EthereumLogo","uri","logoURI","filter","s","defaultUri","name","i"],"mappings":"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","sourcesContent":["import { Currency, ETHER, Token } from '@bscswap/sdk'\nimport React, { useState } from 'react'\nimport styled from 'styled-components'\n\nimport EthereumLogo from '../../assets/images/bnb.svg'\nimport { WrappedTokenInfo } from '../../state/lists/hooks'\nimport uriToHttp from '../../utils/uriToHttp'\n\nconst getTokenLogoURL = address =>\n  `https://tokens.bscswap.com/images/${address}.png`\nconst BAD_URIS: { [tokenAddress: string]: true } = {}\n\nconst Image = styled.img<{ size: string }>`\n  width: ${({ size }) => size};\n  height: ${({ size }) => size};\n  background-color: white;\n  border-radius: 1rem;\n  box-shadow: 0px 6px 10px rgba(0, 0, 0, 0.075);\n`\n\nconst Emoji = styled.span<{ size?: string }>`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-size: ${({ size }) => size};\n  width: ${({ size }) => size};\n  height: ${({ size }) => size};\n  margin-bottom: -4px;\n`\n\nconst StyledEthereumLogo = styled.img<{ size: string }>`\n  width: ${({ size }) => size};\n  height: ${({ size }) => size};\n  box-shadow: 0px 6px 10px rgba(0, 0, 0, 0.075);\n  border-radius: 24px;\n`\n\nexport default function CurrencyLogo({\n  currency,\n  size = '24px',\n  ...rest\n}: {\n  currency?: Currency\n  size?: string\n  style?: React.CSSProperties\n}) {\n  const [, refresh] = useState<number>(0)\n\n  if (currency === ETHER) {\n    return <StyledEthereumLogo src={EthereumLogo} size={size} {...rest} />\n  }\n\n  if (currency instanceof Token) {\n    let uri: string | undefined\n\n    if (currency instanceof WrappedTokenInfo) {\n      if (currency.logoURI && !BAD_URIS[currency.logoURI]) {\n        uri = uriToHttp(currency.logoURI).filter(s => !BAD_URIS[s])[0]\n      }\n    }\n\n    if (!uri) {\n      const defaultUri = getTokenLogoURL(currency.address)\n      if (!BAD_URIS[defaultUri]) {\n        uri = defaultUri\n      }\n    }\n\n    if (uri) {\n      return (\n        <Image\n          {...rest}\n          alt={`${currency.name} Logo`}\n          src={uri}\n          size={size}\n          onError={() => {\n            if (currency instanceof Token) {\n              BAD_URIS[uri] = true\n            }\n            refresh(i => i + 1)\n          }}\n        />\n      )\n    }\n  }\n\n  return (\n    <Emoji {...rest} size={size}>\n      <span role=\"img\" aria-label=\"Thinking\">\n        ðŸ¤”\n      </span>\n    </Emoji>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}