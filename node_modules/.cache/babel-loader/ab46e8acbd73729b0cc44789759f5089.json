{"ast":null,"code":"import { createReducer, nanoid } from '@reduxjs/toolkit';\nimport { addPopup, removePopup, toggleWalletModal, toggleSettingsMenu, updateBlockNumber } from './actions';\nconst initialState = {\n  blockNumber: {},\n  popupList: [],\n  walletModalOpen: false,\n  settingsMenuOpen: false\n};\nexport default createReducer(initialState, builder => builder.addCase(updateBlockNumber, (state, action) => {\n  const {\n    chainId,\n    blockNumber\n  } = action.payload;\n\n  if (typeof state.blockNumber[chainId] !== 'number') {\n    state.blockNumber[chainId] = blockNumber;\n  } else {\n    state.blockNumber[chainId] = Math.max(blockNumber, state.blockNumber[chainId]);\n  }\n}).addCase(toggleWalletModal, state => {\n  state.walletModalOpen = !state.walletModalOpen;\n}).addCase(toggleSettingsMenu, state => {\n  state.settingsMenuOpen = !state.settingsMenuOpen;\n}).addCase(addPopup, (state, {\n  payload: {\n    content,\n    key\n  }\n}) => {\n  state.popupList = (key ? state.popupList.filter(popup => popup.key !== key) : state.popupList).concat([{\n    key: key || nanoid(),\n    show: true,\n    content\n  }]);\n}).addCase(removePopup, (state, {\n  payload: {\n    key\n  }\n}) => {\n  state.popupList.forEach(p => {\n    if (p.key === key) {\n      p.show = false;\n    }\n  });\n}));","map":{"version":3,"sources":["/Users/lap14205/Documents/home/blockchain_learning/mdex-bscswap/src/state/application/reducer.ts"],"names":["createReducer","nanoid","addPopup","removePopup","toggleWalletModal","toggleSettingsMenu","updateBlockNumber","initialState","blockNumber","popupList","walletModalOpen","settingsMenuOpen","builder","addCase","state","action","chainId","payload","Math","max","content","key","filter","popup","concat","show","forEach","p"],"mappings":"AAAA,SAASA,aAAT,EAAwBC,MAAxB,QAAsC,kBAAtC;AACA,SACEC,QADF,EAGEC,WAHF,EAIEC,iBAJF,EAKEC,kBALF,EAMEC,iBANF,QAOO,WAPP;AAkBA,MAAMC,YAA8B,GAAG;AACrCC,EAAAA,WAAW,EAAE,EADwB;AAErCC,EAAAA,SAAS,EAAE,EAF0B;AAGrCC,EAAAA,eAAe,EAAE,KAHoB;AAIrCC,EAAAA,gBAAgB,EAAE;AAJmB,CAAvC;AAOA,eAAeX,aAAa,CAACO,YAAD,EAAeK,OAAO,IAChDA,OAAO,CACJC,OADH,CACWP,iBADX,EAC8B,CAACQ,KAAD,EAAQC,MAAR,KAAmB;AAC7C,QAAM;AAAEC,IAAAA,OAAF;AAAWR,IAAAA;AAAX,MAA2BO,MAAM,CAACE,OAAxC;;AACA,MAAI,OAAOH,KAAK,CAACN,WAAN,CAAkBQ,OAAlB,CAAP,KAAsC,QAA1C,EAAoD;AAClDF,IAAAA,KAAK,CAACN,WAAN,CAAkBQ,OAAlB,IAA6BR,WAA7B;AACD,GAFD,MAEO;AACLM,IAAAA,KAAK,CAACN,WAAN,CAAkBQ,OAAlB,IAA6BE,IAAI,CAACC,GAAL,CAASX,WAAT,EAAsBM,KAAK,CAACN,WAAN,CAAkBQ,OAAlB,CAAtB,CAA7B;AACD;AACF,CARH,EASGH,OATH,CASWT,iBATX,EAS8BU,KAAK,IAAI;AACnCA,EAAAA,KAAK,CAACJ,eAAN,GAAwB,CAACI,KAAK,CAACJ,eAA/B;AACD,CAXH,EAYGG,OAZH,CAYWR,kBAZX,EAY+BS,KAAK,IAAI;AACpCA,EAAAA,KAAK,CAACH,gBAAN,GAAyB,CAACG,KAAK,CAACH,gBAAhC;AACD,CAdH,EAeGE,OAfH,CAeWX,QAfX,EAeqB,CAACY,KAAD,EAAQ;AAAEG,EAAAA,OAAO,EAAE;AAAEG,IAAAA,OAAF;AAAWC,IAAAA;AAAX;AAAX,CAAR,KAA0C;AAC3DP,EAAAA,KAAK,CAACL,SAAN,GAAkB,CAACY,GAAG,GAAGP,KAAK,CAACL,SAAN,CAAgBa,MAAhB,CAAuBC,KAAK,IAAIA,KAAK,CAACF,GAAN,KAAcA,GAA9C,CAAH,GAAwDP,KAAK,CAACL,SAAlE,EAA6Ee,MAA7E,CAAoF,CACpG;AACEH,IAAAA,GAAG,EAAEA,GAAG,IAAIpB,MAAM,EADpB;AAEEwB,IAAAA,IAAI,EAAE,IAFR;AAGEL,IAAAA;AAHF,GADoG,CAApF,CAAlB;AAOD,CAvBH,EAwBGP,OAxBH,CAwBWV,WAxBX,EAwBwB,CAACW,KAAD,EAAQ;AAAEG,EAAAA,OAAO,EAAE;AAAEI,IAAAA;AAAF;AAAX,CAAR,KAAiC;AACrDP,EAAAA,KAAK,CAACL,SAAN,CAAgBiB,OAAhB,CAAwBC,CAAC,IAAI;AAC3B,QAAIA,CAAC,CAACN,GAAF,KAAUA,GAAd,EAAmB;AACjBM,MAAAA,CAAC,CAACF,IAAF,GAAS,KAAT;AACD;AACF,GAJD;AAKD,CA9BH,CAD0B,CAA5B","sourcesContent":["import { createReducer, nanoid } from '@reduxjs/toolkit'\nimport {\n  addPopup,\n  PopupContent,\n  removePopup,\n  toggleWalletModal,\n  toggleSettingsMenu,\n  updateBlockNumber\n} from './actions'\n\ntype PopupList = Array<{ key: string; show: boolean; content: PopupContent }>\n\nexport interface ApplicationState {\n  blockNumber: { [chainId: number]: number }\n  popupList: PopupList\n  walletModalOpen: boolean\n  settingsMenuOpen: boolean\n}\n\nconst initialState: ApplicationState = {\n  blockNumber: {},\n  popupList: [],\n  walletModalOpen: false,\n  settingsMenuOpen: false\n}\n\nexport default createReducer(initialState, builder =>\n  builder\n    .addCase(updateBlockNumber, (state, action) => {\n      const { chainId, blockNumber } = action.payload\n      if (typeof state.blockNumber[chainId] !== 'number') {\n        state.blockNumber[chainId] = blockNumber\n      } else {\n        state.blockNumber[chainId] = Math.max(blockNumber, state.blockNumber[chainId])\n      }\n    })\n    .addCase(toggleWalletModal, state => {\n      state.walletModalOpen = !state.walletModalOpen\n    })\n    .addCase(toggleSettingsMenu, state => {\n      state.settingsMenuOpen = !state.settingsMenuOpen\n    })\n    .addCase(addPopup, (state, { payload: { content, key } }) => {\n      state.popupList = (key ? state.popupList.filter(popup => popup.key !== key) : state.popupList).concat([\n        {\n          key: key || nanoid(),\n          show: true,\n          content\n        }\n      ])\n    })\n    .addCase(removePopup, (state, { payload: { key } }) => {\n      state.popupList.forEach(p => {\n        if (p.key === key) {\n          p.show = false\n        }\n      })\n    })\n)\n"]},"metadata":{},"sourceType":"module"}