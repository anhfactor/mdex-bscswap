{"ast":null,"code":"var _jsxFileName = \"/Users/lap14205/Documents/home/blockchain_learning/mdex-bscswap/src/theme/components.tsx\";\nimport React, { useCallback } from 'react';\nimport ReactGA from 'react-ga';\nimport { Link } from 'react-router-dom';\nimport styled, { keyframes } from 'styled-components';\nimport { darken } from 'polished';\nimport { ArrowLeft, X } from 'react-feather';\nexport const Button = styled.button.attrs(({\n  warning,\n  theme\n}) => ({\n  backgroundColor: warning ? theme.red1 : theme.primary1\n}))`\n  padding: 1rem 2rem 1rem 2rem;\n  border-radius: 3rem;\n  cursor: pointer;\n  user-select: none;\n  font-size: 1rem;\n  border: none;\n  outline: none;\n  background-color: ${({\n  backgroundColor\n}) => backgroundColor};\n  color: ${({\n  theme\n}) => theme.white};\n  width: 100%;\n\n  :hover,\n  :focus {\n    background-color: ${({\n  backgroundColor\n}) => darken(0.05, backgroundColor)};\n  }\n\n  :active {\n    background-color: ${({\n  backgroundColor\n}) => darken(0.1, backgroundColor)};\n  }\n\n  :disabled {\n    background-color: ${({\n  theme\n}) => theme.bg1};\n    color: ${({\n  theme\n}) => theme.text4};\n    cursor: auto;\n  }\n`;\nexport const CloseIcon = styled(X)`\n  cursor: pointer;\n`; // A button that triggers some onClick result, but looks like a link.\n\nexport const LinkStyledButton = styled.button`\n  border: none;\n  text-decoration: none;\n  background: none;\n\n  cursor: pointer;\n  color: ${({\n  theme\n}) => theme.primary1};\n  font-weight: 500;\n\n  :hover {\n    text-decoration: underline;\n  }\n\n  :focus {\n    outline: none;\n    text-decoration: underline;\n  }\n\n  :active {\n    text-decoration: none;\n  }\n`; // An internal link from the react-router-dom library that is correctly styled\n\nexport const StyledInternalLink = styled(Link)`\n  text-decoration: none;\n  cursor: pointer;\n  color: ${({\n  theme\n}) => theme.primary1};\n  font-weight: 500;\n\n  :hover {\n    text-decoration: underline;\n  }\n\n  :focus {\n    outline: none;\n    text-decoration: underline;\n  }\n\n  :active {\n    text-decoration: none;\n  }\n`;\nconst StyledLink = styled.a`\n  text-decoration: none;\n  cursor: pointer;\n  color: ${({\n  theme\n}) => theme.primary1};\n  font-weight: 500;\n\n  :hover {\n    text-decoration: underline;\n  }\n\n  :focus {\n    outline: none;\n    text-decoration: underline;\n  }\n\n  :active {\n    text-decoration: none;\n  }\n`;\n/**\n * Outbound link that handles firing google analytics events\n */\n\nexport function ExternalLink({\n  target = '_blank',\n  href,\n  rel = 'noopener noreferrer',\n  ...rest\n}) {\n  const handleClick = useCallback(event => {\n    // don't prevent default, don't redirect if it's a new tab\n    if (target === '_blank' || event.ctrlKey || event.metaKey) {\n      ReactGA.outboundLink({\n        label: href\n      }, () => {\n        console.debug('Fired outbound link event', href);\n      });\n    } else {\n      event.preventDefault(); // send a ReactGA event and then trigger a location change\n\n      ReactGA.outboundLink({\n        label: href\n      }, () => {\n        window.location.href = href;\n      });\n    }\n  }, [href, target]);\n  return /*#__PURE__*/React.createElement(StyledLink, Object.assign({\n    target: target,\n    rel: rel,\n    href: href,\n    onClick: handleClick\n  }, rest, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 10\n    }\n  }));\n}\nconst rotate = keyframes`\n  from {\n    transform: rotate(0deg);\n  }\n  to {\n    transform: rotate(360deg);\n  }\n`;\nexport const Spinner = styled.img`\n  animation: 2s ${rotate} linear infinite;\n  width: 16px;\n  height: 16px;\n`;\nconst BackArrowLink = styled(StyledInternalLink)`\n  color: ${({\n  theme\n}) => theme.text1};\n`;\nexport function BackArrow({\n  to\n}) {\n  return /*#__PURE__*/React.createElement(BackArrowLink, {\n    to: to,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(ArrowLeft, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 7\n    }\n  }));\n}","map":{"version":3,"sources":["/Users/lap14205/Documents/home/blockchain_learning/mdex-bscswap/src/theme/components.tsx"],"names":["React","useCallback","ReactGA","Link","styled","keyframes","darken","ArrowLeft","X","Button","button","attrs","warning","theme","backgroundColor","red1","primary1","white","bg1","text4","CloseIcon","LinkStyledButton","StyledInternalLink","StyledLink","a","ExternalLink","target","href","rel","rest","handleClick","event","ctrlKey","metaKey","outboundLink","label","console","debug","preventDefault","window","location","rotate","Spinner","img","BackArrowLink","text1","BackArrow","to"],"mappings":"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","sourcesContent":["import React, { HTMLProps, useCallback } from 'react'\nimport ReactGA from 'react-ga'\nimport { Link } from 'react-router-dom'\nimport styled, { keyframes } from 'styled-components'\nimport { darken } from 'polished'\nimport { ArrowLeft, X } from 'react-feather'\n\nexport const Button = styled.button.attrs<{ warning: boolean }, { backgroundColor: string }>(({ warning, theme }) => ({\n  backgroundColor: warning ? theme.red1 : theme.primary1\n}))`\n  padding: 1rem 2rem 1rem 2rem;\n  border-radius: 3rem;\n  cursor: pointer;\n  user-select: none;\n  font-size: 1rem;\n  border: none;\n  outline: none;\n  background-color: ${({ backgroundColor }) => backgroundColor};\n  color: ${({ theme }) => theme.white};\n  width: 100%;\n\n  :hover,\n  :focus {\n    background-color: ${({ backgroundColor }) => darken(0.05, backgroundColor)};\n  }\n\n  :active {\n    background-color: ${({ backgroundColor }) => darken(0.1, backgroundColor)};\n  }\n\n  :disabled {\n    background-color: ${({ theme }) => theme.bg1};\n    color: ${({ theme }) => theme.text4};\n    cursor: auto;\n  }\n`\n\nexport const CloseIcon = styled(X)<{ onClick: () => void }>`\n  cursor: pointer;\n`\n\n// A button that triggers some onClick result, but looks like a link.\nexport const LinkStyledButton = styled.button`\n  border: none;\n  text-decoration: none;\n  background: none;\n\n  cursor: pointer;\n  color: ${({ theme }) => theme.primary1};\n  font-weight: 500;\n\n  :hover {\n    text-decoration: underline;\n  }\n\n  :focus {\n    outline: none;\n    text-decoration: underline;\n  }\n\n  :active {\n    text-decoration: none;\n  }\n`\n\n// An internal link from the react-router-dom library that is correctly styled\nexport const StyledInternalLink = styled(Link)`\n  text-decoration: none;\n  cursor: pointer;\n  color: ${({ theme }) => theme.primary1};\n  font-weight: 500;\n\n  :hover {\n    text-decoration: underline;\n  }\n\n  :focus {\n    outline: none;\n    text-decoration: underline;\n  }\n\n  :active {\n    text-decoration: none;\n  }\n`\n\nconst StyledLink = styled.a`\n  text-decoration: none;\n  cursor: pointer;\n  color: ${({ theme }) => theme.primary1};\n  font-weight: 500;\n\n  :hover {\n    text-decoration: underline;\n  }\n\n  :focus {\n    outline: none;\n    text-decoration: underline;\n  }\n\n  :active {\n    text-decoration: none;\n  }\n`\n\n/**\n * Outbound link that handles firing google analytics events\n */\nexport function ExternalLink({\n  target = '_blank',\n  href,\n  rel = 'noopener noreferrer',\n  ...rest\n}: Omit<HTMLProps<HTMLAnchorElement>, 'as' | 'ref' | 'onClick'> & { href: string }) {\n  const handleClick = useCallback(\n    (event: React.MouseEvent<HTMLAnchorElement>) => {\n      // don't prevent default, don't redirect if it's a new tab\n      if (target === '_blank' || event.ctrlKey || event.metaKey) {\n        ReactGA.outboundLink({ label: href }, () => {\n          console.debug('Fired outbound link event', href)\n        })\n      } else {\n        event.preventDefault()\n        // send a ReactGA event and then trigger a location change\n        ReactGA.outboundLink({ label: href }, () => {\n          window.location.href = href\n        })\n      }\n    },\n    [href, target]\n  )\n  return <StyledLink target={target} rel={rel} href={href} onClick={handleClick} {...rest} />\n}\n\nconst rotate = keyframes`\n  from {\n    transform: rotate(0deg);\n  }\n  to {\n    transform: rotate(360deg);\n  }\n`\n\nexport const Spinner = styled.img`\n  animation: 2s ${rotate} linear infinite;\n  width: 16px;\n  height: 16px;\n`\n\nconst BackArrowLink = styled(StyledInternalLink)`\n  color: ${({ theme }) => theme.text1};\n`\nexport function BackArrow({ to }: { to: string }) {\n  return (\n    <BackArrowLink to={to}>\n      <ArrowLeft />\n    </BackArrowLink>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}