{"ast":null,"code":"import _slicedToArray from\"/Users/lap14205/Documents/home/blockchain_learning/bscswap-interface/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{useWeb3React as useWeb3ReactCore}from'@web3-react/core';import{useEffect,useState}from'react';import{isMobile}from'react-device-detect';import{injected,binanceinjected}from'../connectors';import{NetworkContextName}from'../constants';export function useActiveWeb3React(){var context=useWeb3ReactCore();var contextNetwork=useWeb3ReactCore(NetworkContextName);return context.active?context:contextNetwork;}export function useEagerConnect(){var _useWeb3ReactCore=useWeb3ReactCore(),activate=_useWeb3ReactCore.activate,active=_useWeb3ReactCore.active;// specifically using useWeb3ReactCore because of what this hook does\nvar _useState=useState(false),_useState2=_slicedToArray(_useState,2),tried=_useState2[0],setTried=_useState2[1];useEffect(function(){injected.isAuthorized().then(function(isAuthorized){if(isAuthorized){activate(injected,undefined,true).catch(function(){setTried(true);});}else{if(isMobile&&window.ethereum){activate(injected,undefined,true).catch(function(){setTried(true);});}else{setTried(true);}}});},[activate]);// intentionally only running on mount (make sure it's only mounted once :))\nuseEffect(function(){binanceinjected.isAuthorized().then(function(isAuthorized){if(isAuthorized){activate(binanceinjected,undefined,true).catch(function(){setTried(true);});}else{if(isMobile&&window.BinanceChain){activate(binanceinjected,undefined,true).catch(function(){setTried(true);});}else{setTried(true);}}});},[activate]);// intentionally only running on mount (make sure it's only mounted once :))\n// if the connection worked, wait until we get confirmation of that to flip the flag\nuseEffect(function(){if(active){setTried(true);}},[active]);return tried;}/**\n * Use for network and injected - logs user in\n * and out after checking what network theyre on\n */export function useInactiveListener(){var suppress=arguments.length>0&&arguments[0]!==undefined?arguments[0]:false;var _useWeb3ReactCore2=useWeb3ReactCore(),active=_useWeb3ReactCore2.active,error=_useWeb3ReactCore2.error,activate=_useWeb3ReactCore2.activate;// specifically using useWeb3React because of what this hook does\nuseEffect(function(){var _window=window,ethereum=_window.ethereum;if(ethereum&&ethereum.on&&!active&&!error&&!suppress){var handleChainChanged=function handleChainChanged(){// eat errors\nactivate(injected,undefined,true).catch(function(error){console.error('Failed to activate after chain changed',error);});};var handleAccountsChanged=function handleAccountsChanged(accounts){if(accounts.length>0){// eat errors\nactivate(injected,undefined,true).catch(function(error){console.error('Failed to activate after accounts changed',error);});}};ethereum.on('chainChanged',handleChainChanged);ethereum.on('accountsChanged',handleAccountsChanged);return function(){if(ethereum.removeListener){ethereum.removeListener('chainChanged',handleChainChanged);ethereum.removeListener('accountsChanged',handleAccountsChanged);}};}return;},[active,error,suppress,activate]);}","map":{"version":3,"sources":["/Users/lap14205/Documents/home/blockchain_learning/bscswap-interface/src/hooks/index.ts"],"names":["useWeb3React","useWeb3ReactCore","useEffect","useState","isMobile","injected","binanceinjected","NetworkContextName","useActiveWeb3React","context","contextNetwork","active","useEagerConnect","activate","tried","setTried","isAuthorized","then","undefined","catch","window","ethereum","BinanceChain","useInactiveListener","suppress","error","on","handleChainChanged","console","handleAccountsChanged","accounts","length","removeListener"],"mappings":"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","sourcesContent":["import { Web3Provider } from '@ethersproject/providers'\nimport { ChainId } from '@bscswap/sdk'\nimport { useWeb3React as useWeb3ReactCore } from '@web3-react/core'\nimport { Web3ReactContextInterface } from '@web3-react/core/dist/types'\nimport { useEffect, useState } from 'react'\nimport { isMobile } from 'react-device-detect'\nimport { injected, binanceinjected } from '../connectors'\nimport { NetworkContextName } from '../constants'\n\nexport function useActiveWeb3React(): Web3ReactContextInterface<Web3Provider> & { chainId?: ChainId } {\n  const context = useWeb3ReactCore<Web3Provider>()\n  const contextNetwork = useWeb3ReactCore<Web3Provider>(NetworkContextName)\n  return context.active ? context : contextNetwork\n}\n\nexport function useEagerConnect() {\n  const { activate, active } = useWeb3ReactCore() // specifically using useWeb3ReactCore because of what this hook does\n  const [tried, setTried] = useState(false)\n\n  useEffect(() => {\n    injected.isAuthorized().then(isAuthorized => {\n      if (isAuthorized) {\n        activate(injected, undefined, true).catch(() => {\n          setTried(true)\n        })\n      } else {\n        if (isMobile && window.ethereum) {\n          activate(injected, undefined, true).catch(() => {\n            setTried(true)\n          })\n        } else {\n          setTried(true)\n        }\n      }\n    })\n  }, [activate]) // intentionally only running on mount (make sure it's only mounted once :))\n\n  useEffect(() => {\n    binanceinjected.isAuthorized().then(isAuthorized => {\n      if (isAuthorized) {\n        activate(binanceinjected, undefined, true).catch(() => {\n          setTried(true)\n        })\n      } else {\n        if (isMobile && window.BinanceChain) {\n          activate(binanceinjected, undefined, true).catch(() => {\n            setTried(true)\n          })\n        } else {\n          setTried(true)\n        }\n      }\n    })\n  }, [activate]) // intentionally only running on mount (make sure it's only mounted once :))\n\n  // if the connection worked, wait until we get confirmation of that to flip the flag\n  useEffect(() => {\n    if (active) {\n      setTried(true)\n    }\n  }, [active])\n\n  return tried\n}\n\n/**\n * Use for network and injected - logs user in\n * and out after checking what network theyre on\n */\nexport function useInactiveListener(suppress = false) {\n  const { active, error, activate } = useWeb3ReactCore() // specifically using useWeb3React because of what this hook does\n\n  useEffect(() => {\n    const { ethereum } = window\n\n    if (ethereum && ethereum.on && !active && !error && !suppress) {\n      const handleChainChanged = () => {\n        // eat errors\n        activate(injected, undefined, true).catch(error => {\n          console.error('Failed to activate after chain changed', error)\n        })\n      }\n\n      const handleAccountsChanged = (accounts: string[]) => {\n        if (accounts.length > 0) {\n          // eat errors\n          activate(injected, undefined, true).catch(error => {\n            console.error('Failed to activate after accounts changed', error)\n          })\n        }\n      }\n\n      ethereum.on('chainChanged', handleChainChanged)\n      ethereum.on('accountsChanged', handleAccountsChanged)\n\n      return () => {\n        if (ethereum.removeListener) {\n          ethereum.removeListener('chainChanged', handleChainChanged)\n          ethereum.removeListener('accountsChanged', handleAccountsChanged)\n        }\n      }\n    }\n    return\n  }, [active, error, suppress, activate])\n}\n"]},"metadata":{},"sourceType":"module"}