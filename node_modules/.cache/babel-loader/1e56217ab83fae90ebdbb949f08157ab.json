{"ast":null,"code":"import { CurrencyAmount, ETHER, JSBI } from '@bscswap/sdk';\nimport { MIN_ETH } from '../constants';\n/**\n * Given some token amount, return the max that can be spent of it\n * @param currencyAmount to return max of\n */\n\nexport function maxAmountSpend(currencyAmount) {\n  if (!currencyAmount) return;\n\n  if (currencyAmount.currency === ETHER) {\n    if (JSBI.greaterThan(currencyAmount.raw, MIN_ETH)) {\n      return CurrencyAmount.ether(JSBI.subtract(currencyAmount.raw, MIN_ETH));\n    } else {\n      return CurrencyAmount.ether(JSBI.BigInt(0));\n    }\n  }\n\n  return currencyAmount;\n}","map":{"version":3,"sources":["/Users/lap14205/Documents/home/blockchain_learning/mdex-bscswap/src/utils/maxAmountSpend.ts"],"names":["CurrencyAmount","ETHER","JSBI","MIN_ETH","maxAmountSpend","currencyAmount","currency","greaterThan","raw","ether","subtract","BigInt"],"mappings":"AAAA,SAASA,cAAT,EAAyBC,KAAzB,EAAgCC,IAAhC,QAA4C,cAA5C;AACA,SAASC,OAAT,QAAwB,cAAxB;AAEA;;;;;AAIA,OAAO,SAASC,cAAT,CAAwBC,cAAxB,EAAqF;AAC1F,MAAI,CAACA,cAAL,EAAqB;;AACrB,MAAIA,cAAc,CAACC,QAAf,KAA4BL,KAAhC,EAAuC;AACrC,QAAIC,IAAI,CAACK,WAAL,CAAiBF,cAAc,CAACG,GAAhC,EAAqCL,OAArC,CAAJ,EAAmD;AACjD,aAAOH,cAAc,CAACS,KAAf,CAAqBP,IAAI,CAACQ,QAAL,CAAcL,cAAc,CAACG,GAA7B,EAAkCL,OAAlC,CAArB,CAAP;AACD,KAFD,MAEO;AACL,aAAOH,cAAc,CAACS,KAAf,CAAqBP,IAAI,CAACS,MAAL,CAAY,CAAZ,CAArB,CAAP;AACD;AACF;;AACD,SAAON,cAAP;AACD","sourcesContent":["import { CurrencyAmount, ETHER, JSBI } from '@bscswap/sdk'\nimport { MIN_ETH } from '../constants'\n\n/**\n * Given some token amount, return the max that can be spent of it\n * @param currencyAmount to return max of\n */\nexport function maxAmountSpend(currencyAmount?: CurrencyAmount): CurrencyAmount | undefined {\n  if (!currencyAmount) return\n  if (currencyAmount.currency === ETHER) {\n    if (JSBI.greaterThan(currencyAmount.raw, MIN_ETH)) {\n      return CurrencyAmount.ether(JSBI.subtract(currencyAmount.raw, MIN_ETH))\n    } else {\n      return CurrencyAmount.ether(JSBI.BigInt(0))\n    }\n  }\n  return currencyAmount\n}\n"]},"metadata":{},"sourceType":"module"}