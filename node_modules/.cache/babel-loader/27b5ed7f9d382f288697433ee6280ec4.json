{"ast":null,"code":"var _jsxFileName = \"/Users/lap14205/Documents/home/blockchain_learning/mdex-bscswap/src/components/SearchModal/CurrencySearchModal.tsx\";\nimport React, { useCallback, useContext, useEffect, useMemo, useRef, useState } from 'react';\nimport { isMobile } from 'react-device-detect';\nimport { useTranslation } from 'react-i18next';\nimport { Text } from 'rebass';\nimport { ThemeContext } from 'styled-components';\nimport Card from '../../components/Card';\nimport { useActiveWeb3React } from '../../hooks';\nimport { useAllTokens, useToken } from '../../hooks/Tokens';\nimport useInterval from '../../hooks/useInterval';\nimport { useAllTokenBalances, useTokenBalance } from '../../state/wallet/hooks';\nimport { CloseIcon, LinkStyledButton } from '../../theme';\nimport { isAddress } from '../../utils';\nimport Column from '../Column';\nimport Modal from '../Modal';\nimport QuestionHelper from '../QuestionHelper';\nimport { AutoRow, RowBetween } from '../Row';\nimport Tooltip from '../Tooltip';\nimport CommonBases from './CommonBases';\nimport { filterTokens } from './filtering';\nimport { useTokenComparator } from './sorting';\nimport { PaddedColumn, SearchInput } from './styleds';\nimport CurrencyList from './CurrencyList';\nimport SortButton from './SortButton';\nexport default function CurrencySearchModal({\n  isOpen,\n  onDismiss,\n  onCurrencySelect,\n  hiddenCurrency,\n  showSendWithSwap,\n  otherSelectedCurrency,\n  showCommonBases = false\n}) {\n  const {\n    t\n  } = useTranslation();\n  const {\n    account,\n    chainId\n  } = useActiveWeb3React();\n  const theme = useContext(ThemeContext);\n  const [searchQuery, setSearchQuery] = useState('');\n  const [tooltipOpen, setTooltipOpen] = useState(false);\n  const [invertSearchOrder, setInvertSearchOrder] = useState(false);\n  const allTokens = useAllTokens(); // if the current input is an address, and we don't have the token in context, try to fetch it and import\n\n  const searchToken = useToken(searchQuery);\n  const searchTokenBalance = useTokenBalance(account, searchToken);\n  const allTokenBalances_ = useAllTokenBalances();\n  const allTokenBalances = searchToken ? {\n    [searchToken.address]: searchTokenBalance\n  } : allTokenBalances_ !== null && allTokenBalances_ !== void 0 ? allTokenBalances_ : {};\n  const tokenComparator = useTokenComparator(invertSearchOrder);\n  const filteredTokens = useMemo(() => {\n    if (searchToken) return [searchToken];\n    return filterTokens(Object.values(allTokens), searchQuery);\n  }, [searchToken, allTokens, searchQuery]);\n  const filteredSortedTokens = useMemo(() => {\n    if (searchToken) return [searchToken];\n    const sorted = filteredTokens.sort(tokenComparator);\n    const symbolMatch = searchQuery.toLowerCase().split(/\\s+/).filter(s => s.length > 0);\n    if (symbolMatch.length > 1) return sorted;\n    return [...(searchToken ? [searchToken] : []), // sort any exact symbol matches first\n    ...sorted.filter(token => token.symbol.toLowerCase() === symbolMatch[0]), ...sorted.filter(token => token.symbol.toLowerCase() !== symbolMatch[0])];\n  }, [filteredTokens, searchQuery, searchToken, tokenComparator]);\n  const handleCurrencySelect = useCallback(currency => {\n    onCurrencySelect(currency);\n    onDismiss();\n  }, [onDismiss, onCurrencySelect]); // clear the input on open\n\n  useEffect(() => {\n    if (isOpen) setSearchQuery('');\n  }, [isOpen, setSearchQuery]); // manage focus on modal show\n\n  const inputRef = useRef();\n  const handleInput = useCallback(event => {\n    const input = event.target.value;\n    const checksummedInput = isAddress(input);\n    setSearchQuery(checksummedInput || input);\n    setTooltipOpen(false);\n  }, []);\n  const openTooltip = useCallback(() => {\n    setTooltipOpen(true);\n  }, [setTooltipOpen]);\n  const closeTooltip = useCallback(() => setTooltipOpen(false), [setTooltipOpen]);\n  useInterval(() => {\n    setTooltipOpen(false);\n  }, tooltipOpen ? 4000 : null, false);\n  const handleEnter = useCallback(e => {\n    if (e.key === 'Enter' && filteredSortedTokens.length > 0) {\n      if (filteredSortedTokens[0].symbol.toLowerCase() === searchQuery.trim().toLowerCase() || filteredSortedTokens.length === 1) {\n        handleCurrencySelect(filteredSortedTokens[0]);\n      }\n    }\n  }, [filteredSortedTokens, handleCurrencySelect, searchQuery]);\n  return /*#__PURE__*/React.createElement(Modal, {\n    isOpen: isOpen,\n    onDismiss: onDismiss,\n    maxHeight: 70,\n    initialFocusRef: isMobile ? undefined : inputRef,\n    minHeight: 70,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Column, {\n    style: {\n      width: '100%'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(PaddedColumn, {\n    gap: \"14px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(RowBetween, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Text, {\n    fontWeight: 500,\n    fontSize: 16,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 13\n    }\n  }, t('selectToken'), /*#__PURE__*/React.createElement(QuestionHelper, {\n    disabled: tooltipOpen,\n    text: t('findAToken'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(CloseIcon, {\n    onClick: onDismiss,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Tooltip, {\n    text: t('importAnyToken'),\n    show: tooltipOpen,\n    placement: \"bottom\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(SearchInput, {\n    type: \"text\",\n    id: \"token-search-input\",\n    placeholder: t('tokenSearchPlaceholder'),\n    value: searchQuery,\n    ref: inputRef,\n    onChange: handleInput,\n    onFocus: closeTooltip,\n    onBlur: closeTooltip,\n    onKeyDown: handleEnter,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 13\n    }\n  })), showCommonBases && /*#__PURE__*/React.createElement(CommonBases, {\n    chainId: chainId,\n    onSelect: handleCurrencySelect,\n    selectedCurrency: hiddenCurrency,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(RowBetween, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Text, {\n    fontSize: 14,\n    fontWeight: 500,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 13\n    }\n  }, t('tokenName')), /*#__PURE__*/React.createElement(SortButton, {\n    ascending: invertSearchOrder,\n    toggleSortOrder: () => setInvertSearchOrder(iso => !iso),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 13\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      width: '100%',\n      height: '1px',\n      backgroundColor: theme.bg2\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(CurrencyList, {\n    currencies: filteredSortedTokens,\n    allBalances: allTokenBalances,\n    onCurrencySelect: handleCurrencySelect,\n    otherCurrency: otherSelectedCurrency,\n    selectedCurrency: hiddenCurrency,\n    showSendWithSwap: showSendWithSwap,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      width: '100%',\n      height: '1px',\n      backgroundColor: theme.bg2\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(AutoRow, {\n    justify: 'center',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(LinkStyledButton, {\n    style: {\n      fontWeight: 500,\n      color: theme.text2,\n      fontSize: 16\n    },\n    onClick: openTooltip,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 15\n    }\n  }, t('havingTrouble')))))));\n}","map":{"version":3,"sources":["/Users/lap14205/Documents/home/blockchain_learning/mdex-bscswap/src/components/SearchModal/CurrencySearchModal.tsx"],"names":["React","useCallback","useContext","useEffect","useMemo","useRef","useState","isMobile","useTranslation","Text","ThemeContext","Card","useActiveWeb3React","useAllTokens","useToken","useInterval","useAllTokenBalances","useTokenBalance","CloseIcon","LinkStyledButton","isAddress","Column","Modal","QuestionHelper","AutoRow","RowBetween","Tooltip","CommonBases","filterTokens","useTokenComparator","PaddedColumn","SearchInput","CurrencyList","SortButton","CurrencySearchModal","isOpen","onDismiss","onCurrencySelect","hiddenCurrency","showSendWithSwap","otherSelectedCurrency","showCommonBases","t","account","chainId","theme","searchQuery","setSearchQuery","tooltipOpen","setTooltipOpen","invertSearchOrder","setInvertSearchOrder","allTokens","searchToken","searchTokenBalance","allTokenBalances_","allTokenBalances","address","tokenComparator","filteredTokens","Object","values","filteredSortedTokens","sorted","sort","symbolMatch","toLowerCase","split","filter","s","length","token","symbol","handleCurrencySelect","currency","inputRef","handleInput","event","input","target","value","checksummedInput","openTooltip","closeTooltip","handleEnter","e","key","trim","undefined","width","iso","height","backgroundColor","bg2","fontWeight","color","text2","fontSize"],"mappings":"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","sourcesContent":["import { Currency, Token } from '@bscswap/sdk'\nimport React, { KeyboardEvent, useCallback, useContext, useEffect, useMemo, useRef, useState } from 'react'\nimport { isMobile } from 'react-device-detect'\nimport { useTranslation } from 'react-i18next'\nimport { Text } from 'rebass'\nimport { ThemeContext } from 'styled-components'\nimport Card from '../../components/Card'\nimport { useActiveWeb3React } from '../../hooks'\nimport { useAllTokens, useToken } from '../../hooks/Tokens'\nimport useInterval from '../../hooks/useInterval'\nimport { useAllTokenBalances, useTokenBalance } from '../../state/wallet/hooks'\nimport { CloseIcon, LinkStyledButton } from '../../theme'\nimport { isAddress } from '../../utils'\nimport Column from '../Column'\nimport Modal from '../Modal'\nimport QuestionHelper from '../QuestionHelper'\nimport { AutoRow, RowBetween } from '../Row'\nimport Tooltip from '../Tooltip'\nimport CommonBases from './CommonBases'\nimport { filterTokens } from './filtering'\nimport { useTokenComparator } from './sorting'\nimport { PaddedColumn, SearchInput } from './styleds'\nimport CurrencyList from './CurrencyList'\nimport SortButton from './SortButton'\n\ninterface CurrencySearchModalProps {\n  isOpen?: boolean\n  onDismiss?: () => void\n  hiddenCurrency?: Currency\n  showSendWithSwap?: boolean\n  onCurrencySelect?: (currency: Currency) => void\n  otherSelectedCurrency?: Currency\n  showCommonBases?: boolean\n}\n\nexport default function CurrencySearchModal({\n  isOpen,\n  onDismiss,\n  onCurrencySelect,\n  hiddenCurrency,\n  showSendWithSwap,\n  otherSelectedCurrency,\n  showCommonBases = false\n}: CurrencySearchModalProps) {\n  const { t } = useTranslation()\n  const { account, chainId } = useActiveWeb3React()\n  const theme = useContext(ThemeContext)\n\n  const [searchQuery, setSearchQuery] = useState<string>('')\n  const [tooltipOpen, setTooltipOpen] = useState<boolean>(false)\n  const [invertSearchOrder, setInvertSearchOrder] = useState<boolean>(false)\n  const allTokens = useAllTokens()\n\n  // if the current input is an address, and we don't have the token in context, try to fetch it and import\n  const searchToken = useToken(searchQuery)\n  const searchTokenBalance = useTokenBalance(account, searchToken)\n  const allTokenBalances_ = useAllTokenBalances()\n  const allTokenBalances = searchToken\n    ? {\n        [searchToken.address]: searchTokenBalance\n      }\n    : allTokenBalances_ ?? {}\n\n  const tokenComparator = useTokenComparator(invertSearchOrder)\n\n  const filteredTokens: Token[] = useMemo(() => {\n    if (searchToken) return [searchToken]\n    return filterTokens(Object.values(allTokens), searchQuery)\n  }, [searchToken, allTokens, searchQuery])\n\n  const filteredSortedTokens: Token[] = useMemo(() => {\n    if (searchToken) return [searchToken]\n    const sorted = filteredTokens.sort(tokenComparator)\n    const symbolMatch = searchQuery\n      .toLowerCase()\n      .split(/\\s+/)\n      .filter(s => s.length > 0)\n    if (symbolMatch.length > 1) return sorted\n\n    return [\n      ...(searchToken ? [searchToken] : []),\n      // sort any exact symbol matches first\n      ...sorted.filter(token => token.symbol.toLowerCase() === symbolMatch[0]),\n      ...sorted.filter(token => token.symbol.toLowerCase() !== symbolMatch[0])\n    ]\n  }, [filteredTokens, searchQuery, searchToken, tokenComparator])\n\n  const handleCurrencySelect = useCallback(\n    (currency: Currency) => {\n      onCurrencySelect(currency)\n      onDismiss()\n    },\n    [onDismiss, onCurrencySelect]\n  )\n\n  // clear the input on open\n  useEffect(() => {\n    if (isOpen) setSearchQuery('')\n  }, [isOpen, setSearchQuery])\n\n  // manage focus on modal show\n  const inputRef = useRef<HTMLInputElement>()\n  const handleInput = useCallback(event => {\n    const input = event.target.value\n    const checksummedInput = isAddress(input)\n    setSearchQuery(checksummedInput || input)\n    setTooltipOpen(false)\n  }, [])\n\n  const openTooltip = useCallback(() => {\n    setTooltipOpen(true)\n  }, [setTooltipOpen])\n  const closeTooltip = useCallback(() => setTooltipOpen(false), [setTooltipOpen])\n\n  useInterval(\n    () => {\n      setTooltipOpen(false)\n    },\n    tooltipOpen ? 4000 : null,\n    false\n  )\n\n  const handleEnter = useCallback(\n    (e: KeyboardEvent<HTMLInputElement>) => {\n      if (e.key === 'Enter' && filteredSortedTokens.length > 0) {\n        if (\n          filteredSortedTokens[0].symbol.toLowerCase() === searchQuery.trim().toLowerCase() ||\n          filteredSortedTokens.length === 1\n        ) {\n          handleCurrencySelect(filteredSortedTokens[0])\n        }\n      }\n    },\n    [filteredSortedTokens, handleCurrencySelect, searchQuery]\n  )\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      onDismiss={onDismiss}\n      maxHeight={70}\n      initialFocusRef={isMobile ? undefined : inputRef}\n      minHeight={70}\n    >\n      <Column style={{ width: '100%' }}>\n        <PaddedColumn gap=\"14px\">\n          <RowBetween>\n            <Text fontWeight={500} fontSize={16}>\n              {t('selectToken')}\n              <QuestionHelper\n                disabled={tooltipOpen}\n                text={t('findAToken')}\n              />\n            </Text>\n            <CloseIcon onClick={onDismiss} />\n          </RowBetween>\n          <Tooltip\n            text={t('importAnyToken')}\n            show={tooltipOpen}\n            placement=\"bottom\"\n          >\n            <SearchInput\n              type=\"text\"\n              id=\"token-search-input\"\n              placeholder={t('tokenSearchPlaceholder')}\n              value={searchQuery}\n              ref={inputRef}\n              onChange={handleInput}\n              onFocus={closeTooltip}\n              onBlur={closeTooltip}\n              onKeyDown={handleEnter}\n            />\n          </Tooltip>\n          {showCommonBases && (\n            <CommonBases chainId={chainId} onSelect={handleCurrencySelect} selectedCurrency={hiddenCurrency} />\n          )}\n          <RowBetween>\n            <Text fontSize={14} fontWeight={500}>\n              {t('tokenName')}\n            </Text>\n            <SortButton ascending={invertSearchOrder} toggleSortOrder={() => setInvertSearchOrder(iso => !iso)} />\n          </RowBetween>\n        </PaddedColumn>\n        <div style={{ width: '100%', height: '1px', backgroundColor: theme.bg2 }} />\n        <CurrencyList\n          currencies={filteredSortedTokens}\n          allBalances={allTokenBalances}\n          onCurrencySelect={handleCurrencySelect}\n          otherCurrency={otherSelectedCurrency}\n          selectedCurrency={hiddenCurrency}\n          showSendWithSwap={showSendWithSwap}\n        />\n        <div style={{ width: '100%', height: '1px', backgroundColor: theme.bg2 }} />\n        <Card>\n          <AutoRow justify={'center'}>\n            <div>\n              <LinkStyledButton style={{ fontWeight: 500, color: theme.text2, fontSize: 16 }} onClick={openTooltip}>\n                {t('havingTrouble')}\n              </LinkStyledButton>\n            </div>\n          </AutoRow>\n        </Card>\n      </Column>\n    </Modal>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}