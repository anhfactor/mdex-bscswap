{"ast":null,"code":"import _taggedTemplateLiteral from\"/Users/lap14205/Documents/home/blockchain_learning/mdex-bscswap/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";function _templateObject8(){var data=_taggedTemplateLiteral([\"\\n  margin-left: 0.25rem;\\n  margin-right: 0.5rem;\\n  width: 16px;\\n  height: 16px;\\n\"]);_templateObject8=function _templateObject8(){return data;};return data;}function _templateObject7(){var data=_taggedTemplateLiteral([\"\\n  flex: 1 1 auto;\\n  overflow: hidden;\\n  text-overflow: ellipsis;\\n  white-space: nowrap;\\n  margin: 0 0.5rem 0 0.25rem;\\n  font-size: 1rem;\\n  width: fit-content;\\n  font-weight: 500;\\n\"]);_templateObject7=function _templateObject7(){return data;};return data;}function _templateObject6(){var data=_taggedTemplateLiteral([\"\\n  background-color: \",\";\\n  border: 1px solid \",\";\\n  color: \",\";\\n  font-weight: 500;\\n  :hover,\\n  :focus {\\n    background-color: \",\";\\n\\n    :focus {\\n      border: 1px solid \",\";\\n    }\\n  }\\n\"]);_templateObject6=function _templateObject6(){return data;};return data;}function _templateObject5(){var data=_taggedTemplateLiteral([\"\\n      background-color: \",\";\\n      border: 1px solid \",\";\\n      color: \",\";\\n\\n      :hover,\\n      :focus {\\n        border: 1px solid \",\";\\n        color: \",\";\\n      }\\n    \"]);_templateObject5=function _templateObject5(){return data;};return data;}function _templateObject4(){var data=_taggedTemplateLiteral([\"\\n  background-color: \",\";\\n  border: none;\\n  color: \",\";\\n  font-weight: 500;\\n\\n  :hover,\\n  :focus {\\n    border: 1px solid \",\";\\n    color: \",\";\\n  }\\n\\n  \",\"\\n\"]);_templateObject4=function _templateObject4(){return data;};return data;}function _templateObject3(){var data=_taggedTemplateLiteral([\"\\n  background-color: \",\";\\n  border: 1px solid \",\";\\n  color: \",\";\\n  font-weight: 500;\\n  :hover,\\n  :focus {\\n    background-color: \",\";\\n  }\\n\"]);_templateObject3=function _templateObject3(){return data;};return data;}function _templateObject2(){var data=_taggedTemplateLiteral([\"\\n  \",\"\\n  width: 100%;\\n  align-items: center;\\n  padding: 0.5rem;\\n  border-radius: 12px;\\n  cursor: pointer;\\n  user-select: none;\\n  :focus {\\n    outline: none;\\n  }\\n\"]);_templateObject2=function _templateObject2(){return data;};return data;}function _templateObject(){var data=_taggedTemplateLiteral([\"\\n  \",\";\\n  align-items: center;\\n  justify-content: center;\\n  & > * {\\n    height: \",\";\\n    width: \",\";\\n  }\\n\"]);_templateObject=function _templateObject(){return data;};return data;}import React,{useMemo}from'react';import styled,{css}from'styled-components';import{useTranslation}from'react-i18next';import{useWeb3React,UnsupportedChainIdError}from'@web3-react/core';import{darken,lighten}from'polished';import{Activity}from'react-feather';import useENSName from'../../hooks/useENSName';import{useHasSocks}from'../../hooks/useSocksBalance';import{useWalletModalToggle}from'../../state/application/hooks';import Identicon from'../Identicon';import PortisIcon from'../../assets/images/portisIcon.png';import WalletModal from'../WalletModal';import{ButtonSecondary}from'../Button';import BinanceIcon from\"../../assets/images/bnb.svg\";import FortmaticIcon from'../../assets/images/fortmaticIcon.png';import WalletConnectIcon from\"../../assets/images/walletConnectIcon.svg\";import CoinbaseWalletIcon from\"../../assets/images/coinbaseWalletIcon.svg\";import{RowBetween}from'../Row';import{shortenAddress}from'../../utils';import{useAllTransactions}from'../../state/transactions/hooks';import{NetworkContextName}from'../../constants';import{injected,binanceinjected,walletconnect,walletlink,fortmatic,portis}from'../../connectors';import Loader from'../Loader';var IconWrapper=styled.div(_templateObject(),function(_ref){var theme=_ref.theme;return theme.flexColumnNoWrap;},function(_ref2){var size=_ref2.size;return size?size+'px':'32px';},function(_ref3){var size=_ref3.size;return size?size+'px':'32px';});var Web3StatusGeneric=styled(ButtonSecondary)(_templateObject2(),function(_ref4){var theme=_ref4.theme;return theme.flexRowNoWrap;});var Web3StatusError=styled(Web3StatusGeneric)(_templateObject3(),function(_ref5){var theme=_ref5.theme;return theme.red1;},function(_ref6){var theme=_ref6.theme;return theme.red1;},function(_ref7){var theme=_ref7.theme;return theme.white;},function(_ref8){var theme=_ref8.theme;return darken(0.1,theme.red1);});var Web3StatusConnect=styled(Web3StatusGeneric)(_templateObject4(),function(_ref9){var theme=_ref9.theme;return theme.primary4;},function(_ref10){var theme=_ref10.theme;return theme.primaryText1;},function(_ref11){var theme=_ref11.theme;return darken(0.05,theme.primary4);},function(_ref12){var theme=_ref12.theme;return theme.primaryText1;},function(_ref13){var faded=_ref13.faded;return faded&&css(_templateObject5(),function(_ref14){var theme=_ref14.theme;return theme.primary5;},function(_ref15){var theme=_ref15.theme;return theme.primary5;},function(_ref16){var theme=_ref16.theme;return theme.primaryText1;},function(_ref17){var theme=_ref17.theme;return darken(0.05,theme.primary4);},function(_ref18){var theme=_ref18.theme;return darken(0.05,theme.primaryText1);});});var Web3StatusConnected=styled(Web3StatusGeneric)(_templateObject6(),function(_ref19){var pending=_ref19.pending,theme=_ref19.theme;return pending?theme.primary1:theme.bg2;},function(_ref20){var pending=_ref20.pending,theme=_ref20.theme;return pending?theme.primary1:theme.bg3;},function(_ref21){var pending=_ref21.pending,theme=_ref21.theme;return pending?theme.white:theme.text1;},function(_ref22){var pending=_ref22.pending,theme=_ref22.theme;return pending?darken(0.05,theme.primary1):lighten(0.05,theme.bg2);},function(_ref23){var pending=_ref23.pending,theme=_ref23.theme;return pending?darken(0.1,theme.primary1):darken(0.1,theme.bg3);});var Text=styled.p(_templateObject7());var NetworkIcon=styled(Activity)(_templateObject8());// we want the latest one to come first, so return negative if a is after b\nfunction newTranscationsFirst(a,b){return b.addedTime-a.addedTime;}function recentTransactionsOnly(a){return new Date().getTime()-a.addedTime<86400000;}var SOCK=/*#__PURE__*/React.createElement(\"span\",{role:\"img\",\"aria-label\":\"has socks emoji\",style:{marginTop:-4,marginBottom:-4}},\"\\uD83E\\uDDE6\");export default function Web3Status(){var _useTranslation=useTranslation(),t=_useTranslation.t;var _useWeb3React=useWeb3React(),active=_useWeb3React.active,account=_useWeb3React.account,connector=_useWeb3React.connector,error=_useWeb3React.error;var contextNetwork=useWeb3React(NetworkContextName);var _useENSName=useENSName(account),ENSName=_useENSName.ENSName;var allTransactions=useAllTransactions();var sortedRecentTransactions=useMemo(function(){var txs=Object.values(allTransactions);return txs.filter(recentTransactionsOnly).sort(newTranscationsFirst);},[allTransactions]);var pending=sortedRecentTransactions.filter(function(tx){return!tx.receipt;}).map(function(tx){return tx.hash;});var confirmed=sortedRecentTransactions.filter(function(tx){return tx.receipt;}).map(function(tx){return tx.hash;});var hasPendingTransactions=!!pending.length;var hasSocks=useHasSocks();var toggleWalletModal=useWalletModalToggle();// handle the logo we want to show with the account\nfunction getStatusIcon(){if(connector===injected){return/*#__PURE__*/React.createElement(Identicon,null);}else if(connector===binanceinjected){return/*#__PURE__*/React.createElement(IconWrapper,{size:16},/*#__PURE__*/React.createElement(\"img\",{src:BinanceIcon,alt:''}));}else if(connector===walletconnect){return/*#__PURE__*/React.createElement(IconWrapper,{size:16},/*#__PURE__*/React.createElement(\"img\",{src:WalletConnectIcon,alt:''}));}else if(connector===walletlink){return/*#__PURE__*/React.createElement(IconWrapper,{size:16},/*#__PURE__*/React.createElement(\"img\",{src:CoinbaseWalletIcon,alt:''}));}else if(connector===fortmatic){return/*#__PURE__*/React.createElement(IconWrapper,{size:16},/*#__PURE__*/React.createElement(\"img\",{src:FortmaticIcon,alt:''}));}else if(connector===portis){return/*#__PURE__*/React.createElement(IconWrapper,{size:16},/*#__PURE__*/React.createElement(\"img\",{src:PortisIcon,alt:''}));}}function getWeb3Status(){if(account){return/*#__PURE__*/React.createElement(Web3StatusConnected,{id:\"web3-status-connected\",onClick:toggleWalletModal,pending:hasPendingTransactions},hasPendingTransactions?/*#__PURE__*/React.createElement(RowBetween,null,/*#__PURE__*/React.createElement(Text,null,pending===null||pending===void 0?void 0:pending.length,\" Pending\"),\" \",/*#__PURE__*/React.createElement(Loader,{stroke:\"white\"})):/*#__PURE__*/React.createElement(React.Fragment,null,hasSocks?SOCK:null,/*#__PURE__*/React.createElement(Text,null,ENSName||shortenAddress(account))),!hasPendingTransactions&&getStatusIcon());}else if(error){return/*#__PURE__*/React.createElement(Web3StatusError,{onClick:toggleWalletModal},/*#__PURE__*/React.createElement(NetworkIcon,null),/*#__PURE__*/React.createElement(Text,null,error instanceof UnsupportedChainIdError?'Wrong Network':'Error'));}else{return/*#__PURE__*/React.createElement(Web3StatusConnect,{id:\"connect-wallet\",onClick:toggleWalletModal,faded:!account},/*#__PURE__*/React.createElement(Text,null,t('connectToWallet')));}}if(!contextNetwork.active&&!active){return null;}return/*#__PURE__*/React.createElement(React.Fragment,null,getWeb3Status(),/*#__PURE__*/React.createElement(WalletModal,{ENSName:ENSName,pendingTransactions:pending,confirmedTransactions:confirmed}));}","map":{"version":3,"sources":["/Users/lap14205/Documents/home/blockchain_learning/mdex-bscswap/src/components/Web3Status/index.tsx"],"names":["React","useMemo","styled","css","useTranslation","useWeb3React","UnsupportedChainIdError","darken","lighten","Activity","useENSName","useHasSocks","useWalletModalToggle","Identicon","PortisIcon","WalletModal","ButtonSecondary","FortmaticIcon","RowBetween","shortenAddress","useAllTransactions","NetworkContextName","injected","binanceinjected","walletconnect","walletlink","fortmatic","portis","Loader","IconWrapper","div","theme","flexColumnNoWrap","size","Web3StatusGeneric","flexRowNoWrap","Web3StatusError","red1","white","Web3StatusConnect","primary4","primaryText1","faded","primary5","Web3StatusConnected","pending","primary1","bg2","bg3","text1","Text","p","NetworkIcon","newTranscationsFirst","a","b","addedTime","recentTransactionsOnly","Date","getTime","SOCK","marginTop","marginBottom","Web3Status","t","active","account","connector","error","contextNetwork","ENSName","allTransactions","sortedRecentTransactions","txs","Object","values","filter","sort","tx","receipt","map","hash","confirmed","hasPendingTransactions","length","hasSocks","toggleWalletModal","getStatusIcon","BinanceIcon","WalletConnectIcon","CoinbaseWalletIcon","getWeb3Status"],"mappings":"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","sourcesContent":["import React, { useMemo } from 'react'\nimport styled, { css } from 'styled-components'\nimport { useTranslation } from 'react-i18next'\nimport { useWeb3React, UnsupportedChainIdError } from '@web3-react/core'\nimport { darken, lighten } from 'polished'\nimport { Activity } from 'react-feather'\nimport useENSName from '../../hooks/useENSName'\nimport { useHasSocks } from '../../hooks/useSocksBalance'\nimport { useWalletModalToggle } from '../../state/application/hooks'\nimport { TransactionDetails } from '../../state/transactions/reducer'\n\nimport Identicon from '../Identicon'\nimport PortisIcon from '../../assets/images/portisIcon.png'\nimport WalletModal from '../WalletModal'\nimport { ButtonSecondary } from '../Button'\nimport BinanceIcon from '../../assets/images/bnb.svg'\nimport FortmaticIcon from '../../assets/images/fortmaticIcon.png'\nimport WalletConnectIcon from '../../assets/images/walletConnectIcon.svg'\nimport CoinbaseWalletIcon from '../../assets/images/coinbaseWalletIcon.svg'\n\nimport { RowBetween } from '../Row'\nimport { shortenAddress } from '../../utils'\nimport { useAllTransactions } from '../../state/transactions/hooks'\nimport { NetworkContextName } from '../../constants'\nimport { injected, binanceinjected, walletconnect, walletlink, fortmatic, portis } from '../../connectors'\nimport Loader from '../Loader'\n\nconst IconWrapper = styled.div<{ size?: number }>`\n  ${({ theme }) => theme.flexColumnNoWrap};\n  align-items: center;\n  justify-content: center;\n  & > * {\n    height: ${({ size }) => (size ? size + 'px' : '32px')};\n    width: ${({ size }) => (size ? size + 'px' : '32px')};\n  }\n`\n\nconst Web3StatusGeneric = styled(ButtonSecondary)`\n  ${({ theme }) => theme.flexRowNoWrap}\n  width: 100%;\n  align-items: center;\n  padding: 0.5rem;\n  border-radius: 12px;\n  cursor: pointer;\n  user-select: none;\n  :focus {\n    outline: none;\n  }\n`\nconst Web3StatusError = styled(Web3StatusGeneric)`\n  background-color: ${({ theme }) => theme.red1};\n  border: 1px solid ${({ theme }) => theme.red1};\n  color: ${({ theme }) => theme.white};\n  font-weight: 500;\n  :hover,\n  :focus {\n    background-color: ${({ theme }) => darken(0.1, theme.red1)};\n  }\n`\n\nconst Web3StatusConnect = styled(Web3StatusGeneric)<{ faded?: boolean }>`\n  background-color: ${({ theme }) => theme.primary4};\n  border: none;\n  color: ${({ theme }) => theme.primaryText1};\n  font-weight: 500;\n\n  :hover,\n  :focus {\n    border: 1px solid ${({ theme }) => darken(0.05, theme.primary4)};\n    color: ${({ theme }) => theme.primaryText1};\n  }\n\n  ${({ faded }) =>\n    faded &&\n    css`\n      background-color: ${({ theme }) => theme.primary5};\n      border: 1px solid ${({ theme }) => theme.primary5};\n      color: ${({ theme }) => theme.primaryText1};\n\n      :hover,\n      :focus {\n        border: 1px solid ${({ theme }) => darken(0.05, theme.primary4)};\n        color: ${({ theme }) => darken(0.05, theme.primaryText1)};\n      }\n    `}\n`\n\nconst Web3StatusConnected = styled(Web3StatusGeneric)<{ pending?: boolean }>`\n  background-color: ${({ pending, theme }) => (pending ? theme.primary1 : theme.bg2)};\n  border: 1px solid ${({ pending, theme }) => (pending ? theme.primary1 : theme.bg3)};\n  color: ${({ pending, theme }) => (pending ? theme.white : theme.text1)};\n  font-weight: 500;\n  :hover,\n  :focus {\n    background-color: ${({ pending, theme }) => (pending ? darken(0.05, theme.primary1) : lighten(0.05, theme.bg2))};\n\n    :focus {\n      border: 1px solid ${({ pending, theme }) => (pending ? darken(0.1, theme.primary1) : darken(0.1, theme.bg3))};\n    }\n  }\n`\n\nconst Text = styled.p`\n  flex: 1 1 auto;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n  margin: 0 0.5rem 0 0.25rem;\n  font-size: 1rem;\n  width: fit-content;\n  font-weight: 500;\n`\n\nconst NetworkIcon = styled(Activity)`\n  margin-left: 0.25rem;\n  margin-right: 0.5rem;\n  width: 16px;\n  height: 16px;\n`\n\n// we want the latest one to come first, so return negative if a is after b\nfunction newTranscationsFirst(a: TransactionDetails, b: TransactionDetails) {\n  return b.addedTime - a.addedTime\n}\n\nfunction recentTransactionsOnly(a: TransactionDetails) {\n  return new Date().getTime() - a.addedTime < 86_400_000\n}\n\nconst SOCK = (\n  <span role=\"img\" aria-label=\"has socks emoji\" style={{ marginTop: -4, marginBottom: -4 }}>\n    🧦\n  </span>\n)\n\nexport default function Web3Status() {\n  const { t } = useTranslation()\n  const { active, account, connector, error } = useWeb3React()\n  const contextNetwork = useWeb3React(NetworkContextName)\n\n  const { ENSName } = useENSName(account)\n\n  const allTransactions = useAllTransactions()\n\n  const sortedRecentTransactions = useMemo(() => {\n    const txs = Object.values(allTransactions)\n    return txs.filter(recentTransactionsOnly).sort(newTranscationsFirst)\n  }, [allTransactions])\n\n  const pending = sortedRecentTransactions.filter(tx => !tx.receipt).map(tx => tx.hash)\n  const confirmed = sortedRecentTransactions.filter(tx => tx.receipt).map(tx => tx.hash)\n\n  const hasPendingTransactions = !!pending.length\n  const hasSocks = useHasSocks()\n  const toggleWalletModal = useWalletModalToggle()\n\n  // handle the logo we want to show with the account\n  function getStatusIcon() {\n    if (connector === injected) {\n      return <Identicon />\n    } else if (connector === binanceinjected) {\n      return (\n        <IconWrapper size={16}>\n          <img src={BinanceIcon} alt={''} />\n        </IconWrapper>\n      )\n    } else if (connector === walletconnect) {\n      return (\n        <IconWrapper size={16}>\n          <img src={WalletConnectIcon} alt={''} />\n        </IconWrapper>\n      )\n    } else if (connector === walletlink) {\n      return (\n        <IconWrapper size={16}>\n          <img src={CoinbaseWalletIcon} alt={''} />\n        </IconWrapper>\n      )\n    } else if (connector === fortmatic) {\n      return (\n        <IconWrapper size={16}>\n          <img src={FortmaticIcon} alt={''} />\n        </IconWrapper>\n      )\n    } else if (connector === portis) {\n      return (\n        <IconWrapper size={16}>\n          <img src={PortisIcon} alt={''} />\n        </IconWrapper>\n      )\n    }\n  }\n\n  function getWeb3Status() {\n    if (account) {\n      return (\n        <Web3StatusConnected id=\"web3-status-connected\" onClick={toggleWalletModal} pending={hasPendingTransactions}>\n          {hasPendingTransactions ? (\n            <RowBetween>\n              <Text>{pending?.length} Pending</Text> <Loader stroke=\"white\" />\n            </RowBetween>\n          ) : (\n            <>\n              {hasSocks ? SOCK : null}\n              <Text>{ENSName || shortenAddress(account)}</Text>\n            </>\n          )}\n          {!hasPendingTransactions && getStatusIcon()}\n        </Web3StatusConnected>\n      )\n    } else if (error) {\n      return (\n        <Web3StatusError onClick={toggleWalletModal}>\n          <NetworkIcon />\n          <Text>{error instanceof UnsupportedChainIdError ? 'Wrong Network' : 'Error'}</Text>\n        </Web3StatusError>\n      )\n    } else {\n      return (\n        <Web3StatusConnect id=\"connect-wallet\" onClick={toggleWalletModal} faded={!account}>\n          <Text>{t('connectToWallet')}</Text>\n        </Web3StatusConnect>\n      )\n    }\n  }\n\n  if (!contextNetwork.active && !active) {\n    return null\n  }\n\n  return (\n    <>\n      {getWeb3Status()}\n      <WalletModal ENSName={ENSName} pendingTransactions={pending} confirmedTransactions={confirmed} />\n    </>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}