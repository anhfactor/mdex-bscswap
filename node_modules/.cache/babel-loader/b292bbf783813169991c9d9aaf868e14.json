{"ast":null,"code":"import{Currency,currencyEquals,ETHER,JSBI,Token}from'@bscswap/sdk';import React,{memo,useContext,useMemo}from'react';import{FixedSizeList}from'react-window';import{Text}from'rebass';import{ThemeContext}from'styled-components';import{useActiveWeb3React}from'../../hooks';import{useAllTokens}from'../../hooks/Tokens';import{useDefaultTokenList}from'../../state/lists/hooks';import{useAddUserToken,useRemoveUserAddedToken}from'../../state/user/hooks';import{useETHBalances}from'../../state/wallet/hooks';import{LinkStyledButton,TYPE}from'../../theme';import{ButtonSecondary}from'../Button';import Column,{AutoColumn}from'../Column';import{RowFixed}from'../Row';import CurrencyLogo from'../CurrencyLogo';import{FadedSpan,MenuItem}from'./styleds';import Loader from'../Loader';import{isDefaultToken}from'../../utils';function currencyKey(currency){return currency instanceof Token?currency.address:currency===ETHER?'ETHER':'';}export default function CurrencyList(_ref){var currencies=_ref.currencies,allBalances=_ref.allBalances,selectedCurrency=_ref.selectedCurrency,onCurrencySelect=_ref.onCurrencySelect,otherCurrency=_ref.otherCurrency,showSendWithSwap=_ref.showSendWithSwap;var _useActiveWeb3React=useActiveWeb3React(),account=_useActiveWeb3React.account,chainId=_useActiveWeb3React.chainId;var theme=useContext(ThemeContext);var allTokens=useAllTokens();var defaultTokens=useDefaultTokenList();var addToken=useAddUserToken();var removeToken=useRemoveUserAddedToken();var ETHBalance=useETHBalances([account])[account];var CurrencyRow=useMemo(function(){return memo(function CurrencyRow(_ref2){var index=_ref2.index,style=_ref2.style;var currency=index===0?Currency.ETHER:currencies[index-1];var key=currencyKey(currency);var isDefault=isDefaultToken(defaultTokens,currency);var customAdded=Boolean(!isDefault&&currency instanceof Token&&allTokens[currency.address]);var balance=currency===ETHER?ETHBalance:allBalances[key];var zeroBalance=balance&&JSBI.equal(JSBI.BigInt(0),balance.raw);var isSelected=Boolean(selectedCurrency&&currencyEquals(currency,selectedCurrency));var otherSelected=Boolean(otherCurrency&&currencyEquals(otherCurrency,currency));return/*#__PURE__*/React.createElement(MenuItem,{style:style,className:\"token-item-\".concat(key),onClick:function onClick(){return isSelected?null:onCurrencySelect(currency);},disabled:isSelected,selected:otherSelected},/*#__PURE__*/React.createElement(RowFixed,null,/*#__PURE__*/React.createElement(CurrencyLogo,{currency:currency,size:'24px',style:{marginRight:'14px'}}),/*#__PURE__*/React.createElement(Column,null,/*#__PURE__*/React.createElement(Text,{fontWeight:500},currency.symbol),/*#__PURE__*/React.createElement(FadedSpan,null,customAdded?/*#__PURE__*/React.createElement(TYPE.main,{fontWeight:500},\"Added by user\",/*#__PURE__*/React.createElement(LinkStyledButton,{onClick:function onClick(event){event.stopPropagation();if(currency instanceof Token)removeToken(chainId,currency.address);}},\"(Remove)\")):null,!isDefault&&!customAdded?/*#__PURE__*/React.createElement(TYPE.main,{fontWeight:500},\"Found by address\",/*#__PURE__*/React.createElement(LinkStyledButton,{onClick:function onClick(event){event.stopPropagation();if(currency instanceof Token)addToken(currency);}},\"(Add)\")):null))),/*#__PURE__*/React.createElement(AutoColumn,null,balance?/*#__PURE__*/React.createElement(Text,null,zeroBalance&&showSendWithSwap?/*#__PURE__*/React.createElement(ButtonSecondary,{padding:'4px 8px'},/*#__PURE__*/React.createElement(Text,{textAlign:\"center\",fontWeight:500,fontSize:14,color:theme.primary1},\"Send With Swap\")):balance?balance.toSignificant(6):'-'):account?/*#__PURE__*/React.createElement(Loader,null):'-'));});},[ETHBalance,account,addToken,allBalances,allTokens,chainId,currencies,defaultTokens,onCurrencySelect,otherCurrency,removeToken,selectedCurrency,showSendWithSwap,theme.primary1]);return/*#__PURE__*/React.createElement(FixedSizeList,{width:\"100%\",height:500,itemCount:currencies.length+1,itemSize:56,style:{flex:'1'},itemKey:function itemKey(index){return currencyKey(currencies[index]);}},CurrencyRow);}","map":{"version":3,"sources":["/Users/lap14205/Documents/home/blockchain_learning/bscswap-interface/src/components/SearchModal/CurrencyList.tsx"],"names":["Currency","currencyEquals","ETHER","JSBI","Token","React","memo","useContext","useMemo","FixedSizeList","Text","ThemeContext","useActiveWeb3React","useAllTokens","useDefaultTokenList","useAddUserToken","useRemoveUserAddedToken","useETHBalances","LinkStyledButton","TYPE","ButtonSecondary","Column","AutoColumn","RowFixed","CurrencyLogo","FadedSpan","MenuItem","Loader","isDefaultToken","currencyKey","currency","address","CurrencyList","currencies","allBalances","selectedCurrency","onCurrencySelect","otherCurrency","showSendWithSwap","account","chainId","theme","allTokens","defaultTokens","addToken","removeToken","ETHBalance","CurrencyRow","index","style","key","isDefault","customAdded","Boolean","balance","zeroBalance","equal","BigInt","raw","isSelected","otherSelected","marginRight","symbol","event","stopPropagation","primary1","toSignificant","length","flex"],"mappings":"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","sourcesContent":["import { Currency, CurrencyAmount, currencyEquals, ETHER, JSBI, Token } from '@bscswap/sdk'\nimport React, { CSSProperties, memo, useContext, useMemo } from 'react'\nimport { FixedSizeList } from 'react-window'\nimport { Text } from 'rebass'\nimport { ThemeContext } from 'styled-components'\nimport { useActiveWeb3React } from '../../hooks'\nimport { useAllTokens } from '../../hooks/Tokens'\nimport { useDefaultTokenList } from '../../state/lists/hooks'\nimport { useAddUserToken, useRemoveUserAddedToken } from '../../state/user/hooks'\nimport { useETHBalances } from '../../state/wallet/hooks'\nimport { LinkStyledButton, TYPE } from '../../theme'\nimport { ButtonSecondary } from '../Button'\nimport Column, { AutoColumn } from '../Column'\nimport { RowFixed } from '../Row'\nimport CurrencyLogo from '../CurrencyLogo'\nimport { FadedSpan, MenuItem } from './styleds'\nimport Loader from '../Loader'\nimport { isDefaultToken } from '../../utils'\n\nfunction currencyKey(currency: Currency): string {\n  return currency instanceof Token ? currency.address : currency === ETHER ? 'ETHER' : ''\n}\n\nexport default function CurrencyList({\n  currencies,\n  allBalances,\n  selectedCurrency,\n  onCurrencySelect,\n  otherCurrency,\n  showSendWithSwap\n}: {\n  currencies: Currency[]\n  selectedCurrency: Currency\n  allBalances: { [tokenAddress: string]: CurrencyAmount }\n  onCurrencySelect: (currency: Currency) => void\n  otherCurrency: Currency\n  showSendWithSwap?: boolean\n}) {\n  const { account, chainId } = useActiveWeb3React()\n  const theme = useContext(ThemeContext)\n  const allTokens = useAllTokens()\n  const defaultTokens = useDefaultTokenList()\n  const addToken = useAddUserToken()\n  const removeToken = useRemoveUserAddedToken()\n  const ETHBalance = useETHBalances([account])[account]\n\n  const CurrencyRow = useMemo(() => {\n    return memo(function CurrencyRow({ index, style }: { index: number; style: CSSProperties }) {\n      const currency = index === 0 ? Currency.ETHER : currencies[index - 1]\n      const key = currencyKey(currency)\n      const isDefault = isDefaultToken(defaultTokens, currency)\n      const customAdded = Boolean(!isDefault && currency instanceof Token && allTokens[currency.address])\n      const balance = currency === ETHER ? ETHBalance : allBalances[key]\n\n      const zeroBalance = balance && JSBI.equal(JSBI.BigInt(0), balance.raw)\n\n      const isSelected = Boolean(selectedCurrency && currencyEquals(currency, selectedCurrency))\n      const otherSelected = Boolean(otherCurrency && currencyEquals(otherCurrency, currency))\n\n      return (\n        <MenuItem\n          style={style}\n          className={`token-item-${key}`}\n          onClick={() => (isSelected ? null : onCurrencySelect(currency))}\n          disabled={isSelected}\n          selected={otherSelected}\n        >\n          <RowFixed>\n            <CurrencyLogo currency={currency} size={'24px'} style={{ marginRight: '14px' }} />\n            <Column>\n              <Text fontWeight={500}>{currency.symbol}</Text>\n              <FadedSpan>\n                {customAdded ? (\n                  <TYPE.main fontWeight={500}>\n                    Added by user\n                    <LinkStyledButton\n                      onClick={event => {\n                        event.stopPropagation()\n                        if (currency instanceof Token) removeToken(chainId, currency.address)\n                      }}\n                    >\n                      (Remove)\n                    </LinkStyledButton>\n                  </TYPE.main>\n                ) : null}\n                {!isDefault && !customAdded ? (\n                  <TYPE.main fontWeight={500}>\n                    Found by address\n                    <LinkStyledButton\n                      onClick={event => {\n                        event.stopPropagation()\n                        if (currency instanceof Token) addToken(currency)\n                      }}\n                    >\n                      (Add)\n                    </LinkStyledButton>\n                  </TYPE.main>\n                ) : null}\n              </FadedSpan>\n            </Column>\n          </RowFixed>\n          <AutoColumn>\n            {balance ? (\n              <Text>\n                {zeroBalance && showSendWithSwap ? (\n                  <ButtonSecondary padding={'4px 8px'}>\n                    <Text textAlign=\"center\" fontWeight={500} fontSize={14} color={theme.primary1}>\n                      Send With Swap\n                    </Text>\n                  </ButtonSecondary>\n                ) : balance ? (\n                  balance.toSignificant(6)\n                ) : (\n                  '-'\n                )}\n              </Text>\n            ) : account ? (\n              <Loader />\n            ) : (\n              '-'\n            )}\n          </AutoColumn>\n        </MenuItem>\n      )\n    })\n  }, [\n    ETHBalance,\n    account,\n    addToken,\n    allBalances,\n    allTokens,\n    chainId,\n    currencies,\n    defaultTokens,\n    onCurrencySelect,\n    otherCurrency,\n    removeToken,\n    selectedCurrency,\n    showSendWithSwap,\n    theme.primary1\n  ])\n\n  return (\n    <FixedSizeList\n      width=\"100%\"\n      height={500}\n      itemCount={currencies.length + 1}\n      itemSize={56}\n      style={{ flex: '1' }}\n      itemKey={index => currencyKey(currencies[index])}\n    >\n      {CurrencyRow}\n    </FixedSizeList>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}