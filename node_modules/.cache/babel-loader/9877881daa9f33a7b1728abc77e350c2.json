{"ast":null,"code":"var _jsxFileName = \"/Users/lap14205/Documents/home/blockchain_learning/mdex-bscswap/src/components/Popups/ListUpdatePopup.tsx\";\nimport React, { useCallback, useContext } from 'react';\nimport { AlertCircle, Info } from 'react-feather';\nimport { useDispatch } from 'react-redux';\nimport { ThemeContext } from 'styled-components';\nimport { useRemovePopup } from '../../state/application/hooks';\nimport { acceptListUpdate } from '../../state/lists/actions';\nimport { TYPE } from '../../theme';\nimport { ButtonPrimary, ButtonSecondary } from '../Button';\nimport { AutoColumn } from '../Column';\nimport { AutoRow } from '../Row';\n\nfunction versionLabel(version) {\n  return `v${version.major}.${version.minor}.${version.patch}`;\n}\n\nexport default function ListUpdatePopup({\n  popKey,\n  listUrl,\n  oldList,\n  newList,\n  auto\n}) {\n  const removePopup = useRemovePopup();\n  const removeThisPopup = useCallback(() => removePopup(popKey), [popKey, removePopup]);\n  const dispatch = useDispatch();\n  const theme = useContext(ThemeContext);\n  const updateList = useCallback(() => {\n    if (auto) return;\n    dispatch(acceptListUpdate(listUrl));\n    removeThisPopup();\n  }, [auto, dispatch, listUrl, removeThisPopup]);\n  return /*#__PURE__*/React.createElement(AutoRow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      paddingRight: 16\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }\n  }, auto ? /*#__PURE__*/React.createElement(Info, {\n    color: theme.text2,\n    size: 24,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 17\n    }\n  }) : /*#__PURE__*/React.createElement(AlertCircle, {\n    color: theme.red1,\n    size: 24,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 58\n    }\n  }), ' '), /*#__PURE__*/React.createElement(AutoColumn, {\n    style: {\n      flex: '1'\n    },\n    gap: \"8px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }\n  }, auto ? /*#__PURE__*/React.createElement(TYPE.body, {\n    fontWeight: 500,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 11\n    }\n  }, \"The token list \\\"\", oldList.name, \"\\\" has been updated to\", ' ', /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }\n  }, versionLabel(newList.version)), \".\") : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }\n  }, \"A token list update is available for the list \\\"\", oldList.name, \"\\\" (\", versionLabel(oldList.version), ' ', \"to \", versionLabel(newList.version), \").\"), /*#__PURE__*/React.createElement(AutoRow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      flexGrow: 1,\n      marginRight: 6\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(ButtonPrimary, {\n    onClick: updateList,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 17\n    }\n  }, \"Update list\")), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      flexGrow: 1\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(ButtonSecondary, {\n    onClick: removeThisPopup,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 17\n    }\n  }, \"Dismiss\"))))));\n}","map":{"version":3,"sources":["/Users/lap14205/Documents/home/blockchain_learning/mdex-bscswap/src/components/Popups/ListUpdatePopup.tsx"],"names":["React","useCallback","useContext","AlertCircle","Info","useDispatch","ThemeContext","useRemovePopup","acceptListUpdate","TYPE","ButtonPrimary","ButtonSecondary","AutoColumn","AutoRow","versionLabel","version","major","minor","patch","ListUpdatePopup","popKey","listUrl","oldList","newList","auto","removePopup","removeThisPopup","dispatch","theme","updateList","paddingRight","text2","red1","flex","name","flexGrow","marginRight"],"mappings":"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","sourcesContent":["import { TokenList, Version } from '@uniswap/token-lists'\nimport React, { useCallback, useContext } from 'react'\nimport { AlertCircle, Info } from 'react-feather'\nimport { useDispatch } from 'react-redux'\nimport { ThemeContext } from 'styled-components'\nimport { AppDispatch } from '../../state'\nimport { useRemovePopup } from '../../state/application/hooks'\nimport { acceptListUpdate } from '../../state/lists/actions'\nimport { TYPE } from '../../theme'\nimport { ButtonPrimary, ButtonSecondary } from '../Button'\nimport { AutoColumn } from '../Column'\nimport { AutoRow } from '../Row'\n\nfunction versionLabel(version: Version): string {\n  return `v${version.major}.${version.minor}.${version.patch}`\n}\n\nexport default function ListUpdatePopup({\n  popKey,\n  listUrl,\n  oldList,\n  newList,\n  auto\n}: {\n  popKey: string\n  listUrl: string\n  oldList: TokenList\n  newList: TokenList\n  auto: boolean\n}) {\n  const removePopup = useRemovePopup()\n  const removeThisPopup = useCallback(() => removePopup(popKey), [popKey, removePopup])\n  const dispatch = useDispatch<AppDispatch>()\n  const theme = useContext(ThemeContext)\n\n  const updateList = useCallback(() => {\n    if (auto) return\n    dispatch(acceptListUpdate(listUrl))\n    removeThisPopup()\n  }, [auto, dispatch, listUrl, removeThisPopup])\n\n  return (\n    <AutoRow>\n      <div style={{ paddingRight: 16 }}>\n        {auto ? <Info color={theme.text2} size={24} /> : <AlertCircle color={theme.red1} size={24} />}{' '}\n      </div>\n      <AutoColumn style={{ flex: '1' }} gap=\"8px\">\n        {auto ? (\n          <TYPE.body fontWeight={500}>\n            The token list &quot;{oldList.name}&quot; has been updated to{' '}\n            <strong>{versionLabel(newList.version)}</strong>.\n          </TYPE.body>\n        ) : (\n          <>\n            <div>\n              A token list update is available for the list &quot;{oldList.name}&quot; ({versionLabel(oldList.version)}{' '}\n              to {versionLabel(newList.version)}).\n            </div>\n            <AutoRow>\n              <div style={{ flexGrow: 1, marginRight: 6 }}>\n                <ButtonPrimary onClick={updateList}>Update list</ButtonPrimary>\n              </div>\n              <div style={{ flexGrow: 1 }}>\n                <ButtonSecondary onClick={removeThisPopup}>Dismiss</ButtonSecondary>\n              </div>\n            </AutoRow>\n          </>\n        )}\n      </AutoColumn>\n    </AutoRow>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}