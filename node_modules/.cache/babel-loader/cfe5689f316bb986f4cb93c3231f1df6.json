{"ast":null,"code":"import{INITIAL_ALLOWED_SLIPPAGE,DEFAULT_DEADLINE_FROM_NOW}from'../../constants';import{createReducer}from'@reduxjs/toolkit';import{addSerializedPair,addSerializedToken,dismissTokenWarning,removeSerializedPair,removeSerializedToken,updateMatchesDarkMode,updateUserDarkMode,updateVersion,updateUserExpertMode,updateUserSlippageTolerance,updateUserDeadline}from'./actions';var currentTimestamp=function currentTimestamp(){return new Date().getTime();};function pairKey(token0Address,token1Address){return\"\".concat(token0Address,\";\").concat(token1Address);}export var initialState={userDarkMode:null,matchesDarkMode:false,userExpertMode:false,userSlippageTolerance:INITIAL_ALLOWED_SLIPPAGE,userDeadline:DEFAULT_DEADLINE_FROM_NOW,tokens:{},pairs:{},timestamp:currentTimestamp()};export default createReducer(initialState,function(builder){return builder.addCase(updateVersion,function(state){// slippage isnt being tracked in local storage, reset to default\nif(typeof state.userSlippageTolerance!=='number'){state.userSlippageTolerance=INITIAL_ALLOWED_SLIPPAGE;}// deadline isnt being tracked in local storage, reset to default\nif(typeof state.userDeadline!=='number'){state.userDeadline=DEFAULT_DEADLINE_FROM_NOW;}state.lastUpdateVersionTimestamp=currentTimestamp();}).addCase(updateUserDarkMode,function(state,action){state.userDarkMode=action.payload.userDarkMode;state.timestamp=currentTimestamp();}).addCase(updateMatchesDarkMode,function(state,action){state.matchesDarkMode=action.payload.matchesDarkMode;state.timestamp=currentTimestamp();}).addCase(updateUserExpertMode,function(state,action){state.userExpertMode=action.payload.userExpertMode;state.timestamp=currentTimestamp();}).addCase(updateUserSlippageTolerance,function(state,action){state.userSlippageTolerance=action.payload.userSlippageTolerance;state.timestamp=currentTimestamp();}).addCase(updateUserDeadline,function(state,action){state.userDeadline=action.payload.userDeadline;state.timestamp=currentTimestamp();}).addCase(addSerializedToken,function(state,_ref){var serializedToken=_ref.payload.serializedToken;state.tokens[serializedToken.chainId]=state.tokens[serializedToken.chainId]||{};state.tokens[serializedToken.chainId][serializedToken.address]=serializedToken;state.timestamp=currentTimestamp();}).addCase(removeSerializedToken,function(state,_ref2){var _ref2$payload=_ref2.payload,address=_ref2$payload.address,chainId=_ref2$payload.chainId;state.tokens[chainId]=state.tokens[chainId]||{};delete state.tokens[chainId][address];state.timestamp=currentTimestamp();}).addCase(dismissTokenWarning,function(state,_ref3){var _state$dismissedToken,_state$dismissedToken2;var _ref3$payload=_ref3.payload,chainId=_ref3$payload.chainId,tokenAddress=_ref3$payload.tokenAddress;state.dismissedTokenWarnings=(_state$dismissedToken=state.dismissedTokenWarnings)!==null&&_state$dismissedToken!==void 0?_state$dismissedToken:{};state.dismissedTokenWarnings[chainId]=(_state$dismissedToken2=state.dismissedTokenWarnings[chainId])!==null&&_state$dismissedToken2!==void 0?_state$dismissedToken2:{};state.dismissedTokenWarnings[chainId][tokenAddress]=true;}).addCase(addSerializedPair,function(state,_ref4){var serializedPair=_ref4.payload.serializedPair;if(serializedPair.token0.chainId===serializedPair.token1.chainId&&serializedPair.token0.address!==serializedPair.token1.address){var _chainId=serializedPair.token0.chainId;state.pairs[_chainId]=state.pairs[_chainId]||{};state.pairs[_chainId][pairKey(serializedPair.token0.address,serializedPair.token1.address)]=serializedPair;}state.timestamp=currentTimestamp();}).addCase(removeSerializedPair,function(state,_ref5){var _ref5$payload=_ref5.payload,chainId=_ref5$payload.chainId,tokenAAddress=_ref5$payload.tokenAAddress,tokenBAddress=_ref5$payload.tokenBAddress;if(state.pairs[chainId]){// just delete both keys if either exists\ndelete state.pairs[chainId][pairKey(tokenAAddress,tokenBAddress)];delete state.pairs[chainId][pairKey(tokenBAddress,tokenAAddress)];}state.timestamp=currentTimestamp();});});","map":{"version":3,"sources":["/Users/lap14205/Documents/home/blockchain_learning/mdex-bscswap/src/state/user/reducer.ts"],"names":["INITIAL_ALLOWED_SLIPPAGE","DEFAULT_DEADLINE_FROM_NOW","createReducer","addSerializedPair","addSerializedToken","dismissTokenWarning","removeSerializedPair","removeSerializedToken","updateMatchesDarkMode","updateUserDarkMode","updateVersion","updateUserExpertMode","updateUserSlippageTolerance","updateUserDeadline","currentTimestamp","Date","getTime","pairKey","token0Address","token1Address","initialState","userDarkMode","matchesDarkMode","userExpertMode","userSlippageTolerance","userDeadline","tokens","pairs","timestamp","builder","addCase","state","lastUpdateVersionTimestamp","action","payload","serializedToken","chainId","address","tokenAddress","dismissedTokenWarnings","serializedPair","token0","token1","tokenAAddress","tokenBAddress"],"mappings":"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","sourcesContent":["import { INITIAL_ALLOWED_SLIPPAGE, DEFAULT_DEADLINE_FROM_NOW } from '../../constants'\nimport { createReducer } from '@reduxjs/toolkit'\nimport {\n  addSerializedPair,\n  addSerializedToken,\n  dismissTokenWarning,\n  removeSerializedPair,\n  removeSerializedToken,\n  SerializedPair,\n  SerializedToken,\n  updateMatchesDarkMode,\n  updateUserDarkMode,\n  updateVersion,\n  updateUserExpertMode,\n  updateUserSlippageTolerance,\n  updateUserDeadline\n} from './actions'\n\nconst currentTimestamp = () => new Date().getTime()\n\nexport interface UserState {\n  // the timestamp of the last updateVersion action\n  lastUpdateVersionTimestamp?: number\n\n  userDarkMode: boolean | null // the user's choice for dark mode or light mode\n  matchesDarkMode: boolean // whether the dark mode media query matches\n\n  userExpertMode: boolean\n\n  // user defined slippage tolerance in bips, used in all txns\n  userSlippageTolerance: number\n\n  // deadline set by user in minutes, used in all txns\n  userDeadline: number\n\n  tokens: {\n    [chainId: number]: {\n      [address: string]: SerializedToken\n    }\n  }\n\n  // the token warnings that the user has dismissed\n  dismissedTokenWarnings?: {\n    [chainId: number]: {\n      [tokenAddress: string]: true\n    }\n  }\n\n  pairs: {\n    [chainId: number]: {\n      // keyed by token0Address:token1Address\n      [key: string]: SerializedPair\n    }\n  }\n\n  timestamp: number\n}\n\nfunction pairKey(token0Address: string, token1Address: string) {\n  return `${token0Address};${token1Address}`\n}\n\nexport const initialState: UserState = {\n  userDarkMode: null,\n  matchesDarkMode: false,\n  userExpertMode: false,\n  userSlippageTolerance: INITIAL_ALLOWED_SLIPPAGE,\n  userDeadline: DEFAULT_DEADLINE_FROM_NOW,\n  tokens: {},\n  pairs: {},\n  timestamp: currentTimestamp()\n}\n\nexport default createReducer(initialState, builder =>\n  builder\n    .addCase(updateVersion, state => {\n      // slippage isnt being tracked in local storage, reset to default\n      if (typeof state.userSlippageTolerance !== 'number') {\n        state.userSlippageTolerance = INITIAL_ALLOWED_SLIPPAGE\n      }\n\n      // deadline isnt being tracked in local storage, reset to default\n      if (typeof state.userDeadline !== 'number') {\n        state.userDeadline = DEFAULT_DEADLINE_FROM_NOW\n      }\n\n      state.lastUpdateVersionTimestamp = currentTimestamp()\n    })\n    .addCase(updateUserDarkMode, (state, action) => {\n      state.userDarkMode = action.payload.userDarkMode\n      state.timestamp = currentTimestamp()\n    })\n    .addCase(updateMatchesDarkMode, (state, action) => {\n      state.matchesDarkMode = action.payload.matchesDarkMode\n      state.timestamp = currentTimestamp()\n    })\n    .addCase(updateUserExpertMode, (state, action) => {\n      state.userExpertMode = action.payload.userExpertMode\n      state.timestamp = currentTimestamp()\n    })\n    .addCase(updateUserSlippageTolerance, (state, action) => {\n      state.userSlippageTolerance = action.payload.userSlippageTolerance\n      state.timestamp = currentTimestamp()\n    })\n    .addCase(updateUserDeadline, (state, action) => {\n      state.userDeadline = action.payload.userDeadline\n      state.timestamp = currentTimestamp()\n    })\n    .addCase(addSerializedToken, (state, { payload: { serializedToken } }) => {\n      state.tokens[serializedToken.chainId] = state.tokens[serializedToken.chainId] || {}\n      state.tokens[serializedToken.chainId][serializedToken.address] = serializedToken\n      state.timestamp = currentTimestamp()\n    })\n    .addCase(removeSerializedToken, (state, { payload: { address, chainId } }) => {\n      state.tokens[chainId] = state.tokens[chainId] || {}\n      delete state.tokens[chainId][address]\n      state.timestamp = currentTimestamp()\n    })\n    .addCase(dismissTokenWarning, (state, { payload: { chainId, tokenAddress } }) => {\n      state.dismissedTokenWarnings = state.dismissedTokenWarnings ?? {}\n      state.dismissedTokenWarnings[chainId] = state.dismissedTokenWarnings[chainId] ?? {}\n      state.dismissedTokenWarnings[chainId][tokenAddress] = true\n    })\n    .addCase(addSerializedPair, (state, { payload: { serializedPair } }) => {\n      if (\n        serializedPair.token0.chainId === serializedPair.token1.chainId &&\n        serializedPair.token0.address !== serializedPair.token1.address\n      ) {\n        const chainId = serializedPair.token0.chainId\n        state.pairs[chainId] = state.pairs[chainId] || {}\n        state.pairs[chainId][pairKey(serializedPair.token0.address, serializedPair.token1.address)] = serializedPair\n      }\n      state.timestamp = currentTimestamp()\n    })\n    .addCase(removeSerializedPair, (state, { payload: { chainId, tokenAAddress, tokenBAddress } }) => {\n      if (state.pairs[chainId]) {\n        // just delete both keys if either exists\n        delete state.pairs[chainId][pairKey(tokenAAddress, tokenBAddress)]\n        delete state.pairs[chainId][pairKey(tokenBAddress, tokenAAddress)]\n      }\n      state.timestamp = currentTimestamp()\n    })\n)\n"]},"metadata":{},"sourceType":"module"}