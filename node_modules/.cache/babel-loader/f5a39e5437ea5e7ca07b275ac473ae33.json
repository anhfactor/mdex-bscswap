{"ast":null,"code":"var _jsxFileName = \"/Users/lap14205/Documents/home/blockchain_learning/mdex-bscswap/src/components/Settings/index.tsx\";\nimport React, { useRef, useEffect, useContext, useState } from 'react';\nimport { Settings, X } from 'react-feather';\nimport styled from 'styled-components';\nimport { useUserSlippageTolerance, useExpertModeManager, useUserDeadline, useDarkModeManager } from '../../state/user/hooks';\nimport SlippageTabs from '../SlippageTabs';\nimport { RowFixed, RowBetween } from '../Row';\nimport { TYPE } from '../../theme';\nimport QuestionHelper from '../QuestionHelper';\nimport Toggle from '../Toggle';\nimport { ThemeContext } from 'styled-components';\nimport { AutoColumn } from '../Column';\nimport { ButtonError } from '../Button';\nimport { useSettingsMenuOpen, useToggleSettingsMenu } from '../../state/application/hooks';\nimport { Text } from 'rebass';\nimport Modal from '../Modal';\nimport { useTranslation } from 'react-i18next';\nconst StyledMenuIcon = styled(Settings)`\n  height: 20px;\n  width: 20px;\n\n  > * {\n    stroke: ${({\n  theme\n}) => theme.text1};\n  }\n`;\nconst StyledCloseIcon = styled(X)`\n  height: 20px;\n  width: 20px;\n  :hover {\n    cursor: pointer;\n  }\n\n  > * {\n    stroke: ${({\n  theme\n}) => theme.text1};\n  }\n`;\nconst StyledMenuButton = styled.button`\n  position: relative;\n  width: 100%;\n  height: 100%;\n  border: none;\n  background-color: transparent;\n  margin: 0;\n  padding: 0;\n  height: 35px;\n  background-color: ${({\n  theme\n}) => theme.bg3};\n\n  padding: 0.15rem 0.5rem;\n  border-radius: 0.5rem;\n\n  :hover,\n  :focus {\n    cursor: pointer;\n    outline: none;\n    background-color: ${({\n  theme\n}) => theme.bg4};\n  }\n\n  svg {\n    margin-top: 2px;\n  }\n`;\nconst EmojiWrapper = styled.div`\n  position: absolute;\n  bottom: -6px;\n  right: 0px;\n  font-size: 14px;\n`;\nconst StyledMenu = styled.div`\n  margin-left: 0.5rem;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  position: relative;\n  border: none;\n  text-align: left;\n`;\nconst MenuFlyout = styled.span`\n  min-width: 20.125rem;\n  background-color: ${({\n  theme\n}) => theme.bg1};\n  box-shadow: 0px 0px 1px rgba(0, 0, 0, 0.01), 0px 4px 8px rgba(0, 0, 0, 0.04), 0px 16px 24px rgba(0, 0, 0, 0.04),\n    0px 24px 32px rgba(0, 0, 0, 0.01);\n\n  border: 1px solid ${({\n  theme\n}) => theme.bg3};\n\n  border-radius: 0.5rem;\n  display: flex;\n  flex-direction: column;\n  font-size: 1rem;\n  position: absolute;\n  top: 3rem;\n  right: 0rem;\n  z-index: 100;\n\n  ${({\n  theme\n}) => theme.mediaWidth.upToExtraSmall`\n    min-width: 18.125rem;\n    right: -46px;\n  `};\n`;\nconst Break = styled.div`\n  width: 100%;\n  height: 1px;\n  background-color: ${({\n  theme\n}) => theme.bg3};\n`;\nconst ModalContentWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding: 2rem 0;\n  background-color: ${({\n  theme\n}) => theme.bg2};\n  border-radius: 20px;\n`;\nexport default function SettingsTab() {\n  const node = useRef();\n  const open = useSettingsMenuOpen();\n  const toggle = useToggleSettingsMenu();\n  const {\n    t\n  } = useTranslation();\n  const theme = useContext(ThemeContext);\n  const [userSlippageTolerance, setUserslippageTolerance] = useUserSlippageTolerance();\n  const [deadline, setDeadline] = useUserDeadline();\n  const [expertMode, toggleExpertMode] = useExpertModeManager();\n  const [darkMode, toggleDarkMode] = useDarkModeManager(); // show confirmation view before turning on\n\n  const [showConfirmation, setShowConfirmation] = useState(false);\n  useEffect(() => {\n    const handleClickOutside = e => {\n      var _node$current$contain, _node$current;\n\n      if ((_node$current$contain = (_node$current = node.current) === null || _node$current === void 0 ? void 0 : _node$current.contains(e.target)) !== null && _node$current$contain !== void 0 ? _node$current$contain : false) {\n        return;\n      }\n\n      toggle();\n    };\n\n    if (open) {\n      document.addEventListener('mousedown', handleClickOutside);\n    } else {\n      document.removeEventListener('mousedown', handleClickOutside);\n    }\n\n    return () => {\n      document.removeEventListener('mousedown', handleClickOutside);\n    };\n  }, [open, toggle]);\n  return /*#__PURE__*/React.createElement(StyledMenu, {\n    ref: node,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Modal, {\n    isOpen: showConfirmation,\n    onDismiss: () => setShowConfirmation(false),\n    maxHeight: 100,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(ModalContentWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(AutoColumn, {\n    gap: \"lg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(RowBetween, {\n    style: {\n      padding: '0 2rem'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(Text, {\n    fontWeight: 500,\n    fontSize: 20,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 15\n    }\n  }, t('areYouSure')), /*#__PURE__*/React.createElement(StyledCloseIcon, {\n    onClick: () => setShowConfirmation(false),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(Break, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(AutoColumn, {\n    gap: \"lg\",\n    style: {\n      padding: '0 2rem'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Text, {\n    fontWeight: 500,\n    fontSize: 20,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 15\n    }\n  }, t('expertModeTips1')), /*#__PURE__*/React.createElement(Text, {\n    fontWeight: 600,\n    fontSize: 20,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 15\n    }\n  }, t('expertModeTips2')), /*#__PURE__*/React.createElement(ButtonError, {\n    error: true,\n    padding: '12px',\n    onClick: () => {\n      if (window.prompt(`Please type the word \"confirm\" to enable expert mode.`) === 'confirm') {\n        toggleExpertMode();\n        setShowConfirmation(false);\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Text, {\n    fontSize: 20,\n    fontWeight: 500,\n    id: \"confirm-expert-mode\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 17\n    }\n  }, t('turnOnExpertMode'))))))), /*#__PURE__*/React.createElement(StyledMenuButton, {\n    onClick: toggle,\n    id: \"open-settings-dialog-button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(StyledMenuIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 9\n    }\n  }), expertMode && /*#__PURE__*/React.createElement(EmojiWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    role: \"img\",\n    \"aria-label\": \"wizard-icon\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 13\n    }\n  }, \"\\uD83E\\uDDD9\"))), open && /*#__PURE__*/React.createElement(MenuFlyout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(AutoColumn, {\n    gap: \"md\",\n    style: {\n      padding: '1rem'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Text, {\n    fontWeight: 600,\n    fontSize: 14,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 13\n    }\n  }, t('transactionSettings')), /*#__PURE__*/React.createElement(SlippageTabs, {\n    rawSlippage: userSlippageTolerance,\n    setRawSlippage: setUserslippageTolerance,\n    deadline: deadline,\n    setDeadline: setDeadline,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Text, {\n    fontWeight: 600,\n    fontSize: 14,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 13\n    }\n  }, t('interfaceSettings')), /*#__PURE__*/React.createElement(RowBetween, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(RowFixed, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(TYPE.black, {\n    fontWeight: 400,\n    fontSize: 14,\n    color: theme.text2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 17\n    }\n  }, t('toggleExpertMode')), /*#__PURE__*/React.createElement(QuestionHelper, {\n    text: \"Bypasses confirmation modals and allows high slippage trades. Use at your own risk.\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(Toggle, {\n    id: \"toggle-expert-mode-button\",\n    isActive: expertMode,\n    toggle: expertMode ? () => {\n      toggleExpertMode();\n      setShowConfirmation(false);\n    } : () => {\n      toggle();\n      setShowConfirmation(true);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(RowBetween, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(RowFixed, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(TYPE.black, {\n    fontWeight: 400,\n    fontSize: 14,\n    color: theme.text2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 17\n    }\n  }, t('toggleDarkMode'))), /*#__PURE__*/React.createElement(Toggle, {\n    isActive: darkMode,\n    toggle: toggleDarkMode,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 254,\n      columnNumber: 15\n    }\n  })))));\n}","map":{"version":3,"sources":["/Users/lap14205/Documents/home/blockchain_learning/mdex-bscswap/src/components/Settings/index.tsx"],"names":["React","useRef","useEffect","useContext","useState","Settings","X","styled","useUserSlippageTolerance","useExpertModeManager","useUserDeadline","useDarkModeManager","SlippageTabs","RowFixed","RowBetween","TYPE","QuestionHelper","Toggle","ThemeContext","AutoColumn","ButtonError","useSettingsMenuOpen","useToggleSettingsMenu","Text","Modal","useTranslation","StyledMenuIcon","theme","text1","StyledCloseIcon","StyledMenuButton","button","bg3","bg4","EmojiWrapper","div","StyledMenu","MenuFlyout","span","bg1","mediaWidth","upToExtraSmall","Break","ModalContentWrapper","bg2","SettingsTab","node","open","toggle","t","userSlippageTolerance","setUserslippageTolerance","deadline","setDeadline","expertMode","toggleExpertMode","darkMode","toggleDarkMode","showConfirmation","setShowConfirmation","handleClickOutside","e","current","contains","target","document","addEventListener","removeEventListener","padding","window","prompt","text2"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,MAAhB,EAAwBC,SAAxB,EAAmCC,UAAnC,EAA+CC,QAA/C,QAA+D,OAA/D;AACA,SAASC,QAAT,EAAmBC,CAAnB,QAA4B,eAA5B;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AAEA,SACEC,wBADF,EAEEC,oBAFF,EAGEC,eAHF,EAIEC,kBAJF,QAKO,wBALP;AAMA,OAAOC,YAAP,MAAyB,iBAAzB;AACA,SAASC,QAAT,EAAmBC,UAAnB,QAAqC,QAArC;AACA,SAASC,IAAT,QAAqB,aAArB;AACA,OAAOC,cAAP,MAA2B,mBAA3B;AACA,OAAOC,MAAP,MAAmB,WAAnB;AACA,SAASC,YAAT,QAA6B,mBAA7B;AACA,SAASC,UAAT,QAA2B,WAA3B;AACA,SAASC,WAAT,QAA4B,WAA5B;AACA,SAASC,mBAAT,EAA8BC,qBAA9B,QAA2D,+BAA3D;AACA,SAASC,IAAT,QAAqB,QAArB;AACA,OAAOC,KAAP,MAAkB,UAAlB;AACA,SAASC,cAAT,QAA+B,eAA/B;AAEA,MAAMC,cAAc,GAAGnB,MAAM,CAACF,QAAD,CAAW;;;;;cAK1B,CAAC;AAAEsB,EAAAA;AAAF,CAAD,KAAeA,KAAK,CAACC,KAAM;;CALzC;AASA,MAAMC,eAAe,GAAGtB,MAAM,CAACD,CAAD,CAAI;;;;;;;;cAQpB,CAAC;AAAEqB,EAAAA;AAAF,CAAD,KAAeA,KAAK,CAACC,KAAM;;CARzC;AAYA,MAAME,gBAAgB,GAAGvB,MAAM,CAACwB,MAAO;;;;;;;;;sBASjB,CAAC;AAAEJ,EAAAA;AAAF,CAAD,KAAeA,KAAK,CAACK,GAAI;;;;;;;;;wBASvB,CAAC;AAAEL,EAAAA;AAAF,CAAD,KAAeA,KAAK,CAACM,GAAI;;;;;;CAlBjD;AAyBA,MAAMC,YAAY,GAAG3B,MAAM,CAAC4B,GAAI;;;;;CAAhC;AAOA,MAAMC,UAAU,GAAG7B,MAAM,CAAC4B,GAAI;;;;;;;;CAA9B;AAUA,MAAME,UAAU,GAAG9B,MAAM,CAAC+B,IAAK;;sBAET,CAAC;AAAEX,EAAAA;AAAF,CAAD,KAAeA,KAAK,CAACY,GAAI;;;;sBAIzB,CAAC;AAAEZ,EAAAA;AAAF,CAAD,KAAeA,KAAK,CAACK,GAAI;;;;;;;;;;;IAW3C,CAAC;AAAEL,EAAAA;AAAF,CAAD,KAAeA,KAAK,CAACa,UAAN,CAAiBC,cAAe;;;GAG/C;CApBJ;AAuBA,MAAMC,KAAK,GAAGnC,MAAM,CAAC4B,GAAI;;;sBAGH,CAAC;AAAER,EAAAA;AAAF,CAAD,KAAeA,KAAK,CAACK,GAAI;CAH/C;AAMA,MAAMW,mBAAmB,GAAGpC,MAAM,CAAC4B,GAAI;;;;;sBAKjB,CAAC;AAAER,EAAAA;AAAF,CAAD,KAAeA,KAAK,CAACiB,GAAI;;CAL/C;AASA,eAAe,SAASC,WAAT,GAAuB;AACpC,QAAMC,IAAI,GAAG7C,MAAM,EAAnB;AACA,QAAM8C,IAAI,GAAG1B,mBAAmB,EAAhC;AACA,QAAM2B,MAAM,GAAG1B,qBAAqB,EAApC;AACA,QAAM;AAAE2B,IAAAA;AAAF,MAAQxB,cAAc,EAA5B;AAEA,QAAME,KAAK,GAAGxB,UAAU,CAACe,YAAD,CAAxB;AACA,QAAM,CAACgC,qBAAD,EAAwBC,wBAAxB,IAAoD3C,wBAAwB,EAAlF;AAEA,QAAM,CAAC4C,QAAD,EAAWC,WAAX,IAA0B3C,eAAe,EAA/C;AAEA,QAAM,CAAC4C,UAAD,EAAaC,gBAAb,IAAiC9C,oBAAoB,EAA3D;AAEA,QAAM,CAAC+C,QAAD,EAAWC,cAAX,IAA6B9C,kBAAkB,EAArD,CAboC,CAepC;;AACA,QAAM,CAAC+C,gBAAD,EAAmBC,mBAAnB,IAA0CvD,QAAQ,CAAC,KAAD,CAAxD;AAEAF,EAAAA,SAAS,CAAC,MAAM;AACd,UAAM0D,kBAAkB,GAAGC,CAAC,IAAI;AAAA;;AAC9B,oDAAIf,IAAI,CAACgB,OAAT,kDAAI,cAAcC,QAAd,CAAuBF,CAAC,CAACG,MAAzB,CAAJ,yEAAwC,KAAxC,EAA+C;AAC7C;AACD;;AACDhB,MAAAA,MAAM;AACP,KALD;;AAOA,QAAID,IAAJ,EAAU;AACRkB,MAAAA,QAAQ,CAACC,gBAAT,CAA0B,WAA1B,EAAuCN,kBAAvC;AACD,KAFD,MAEO;AACLK,MAAAA,QAAQ,CAACE,mBAAT,CAA6B,WAA7B,EAA0CP,kBAA1C;AACD;;AAED,WAAO,MAAM;AACXK,MAAAA,QAAQ,CAACE,mBAAT,CAA6B,WAA7B,EAA0CP,kBAA1C;AACD,KAFD;AAGD,GAjBQ,EAiBN,CAACb,IAAD,EAAOC,MAAP,CAjBM,CAAT;AAmBA,sBACE,oBAAC,UAAD;AAAY,IAAA,GAAG,EAAEF,IAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,KAAD;AAAO,IAAA,MAAM,EAAEY,gBAAf;AAAiC,IAAA,SAAS,EAAE,MAAMC,mBAAmB,CAAC,KAAD,CAArE;AAA8E,IAAA,SAAS,EAAE,GAAzF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,mBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,UAAD;AAAY,IAAA,GAAG,EAAC,IAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,UAAD;AAAY,IAAA,KAAK,EAAE;AAAES,MAAAA,OAAO,EAAE;AAAX,KAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE,oBAAC,IAAD;AAAM,IAAA,UAAU,EAAE,GAAlB;AAAuB,IAAA,QAAQ,EAAE,EAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACCnB,CAAC,CAAC,YAAD,CADF,CAFF,eAKE,oBAAC,eAAD;AAAiB,IAAA,OAAO,EAAE,MAAMU,mBAAmB,CAAC,KAAD,CAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,CADF,eAQE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARF,eASE,oBAAC,UAAD;AAAY,IAAA,GAAG,EAAC,IAAhB;AAAqB,IAAA,KAAK,EAAE;AAAES,MAAAA,OAAO,EAAE;AAAX,KAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD;AAAM,IAAA,UAAU,EAAE,GAAlB;AAAuB,IAAA,QAAQ,EAAE,EAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACCnB,CAAC,CAAC,iBAAD,CADF,CADF,eAIE,oBAAC,IAAD;AAAM,IAAA,UAAU,EAAE,GAAlB;AAAuB,IAAA,QAAQ,EAAE,EAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACCA,CAAC,CAAC,iBAAD,CADF,CAJF,eAOE,oBAAC,WAAD;AACE,IAAA,KAAK,EAAE,IADT;AAEE,IAAA,OAAO,EAAE,MAFX;AAGE,IAAA,OAAO,EAAE,MAAM;AACb,UAAIoB,MAAM,CAACC,MAAP,CAAe,uDAAf,MAA2E,SAA/E,EAA0F;AACxFf,QAAAA,gBAAgB;AAChBI,QAAAA,mBAAmB,CAAC,KAAD,CAAnB;AACD;AACF,KARH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAUE,oBAAC,IAAD;AAAM,IAAA,QAAQ,EAAE,EAAhB;AAAoB,IAAA,UAAU,EAAE,GAAhC;AAAqC,IAAA,EAAE,EAAC,qBAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACCV,CAAC,CAAC,kBAAD,CADF,CAVF,CAPF,CATF,CADF,CADF,CADF,eAqCE,oBAAC,gBAAD;AAAkB,IAAA,OAAO,EAAED,MAA3B;AAAmC,IAAA,EAAE,EAAC,6BAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEGM,UAAU,iBACT,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAM,IAAA,IAAI,EAAC,KAAX;AAAiB,kBAAW,aAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,CAHJ,CArCF,EA+CGP,IAAI,iBACH,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,UAAD;AAAY,IAAA,GAAG,EAAC,IAAhB;AAAqB,IAAA,KAAK,EAAE;AAAEqB,MAAAA,OAAO,EAAE;AAAX,KAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD;AAAM,IAAA,UAAU,EAAE,GAAlB;AAAuB,IAAA,QAAQ,EAAE,EAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGnB,CAAC,CAAC,qBAAD,CADJ,CADF,eAIE,oBAAC,YAAD;AACE,IAAA,WAAW,EAAEC,qBADf;AAEE,IAAA,cAAc,EAAEC,wBAFlB;AAGE,IAAA,QAAQ,EAAEC,QAHZ;AAIE,IAAA,WAAW,EAAEC,WAJf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,eAUE,oBAAC,IAAD;AAAM,IAAA,UAAU,EAAE,GAAlB;AAAuB,IAAA,QAAQ,EAAE,EAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACCJ,CAAC,CAAC,mBAAD,CADF,CAVF,eAaE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD,CAAM,KAAN;AAAY,IAAA,UAAU,EAAE,GAAxB;AAA6B,IAAA,QAAQ,EAAE,EAAvC;AAA2C,IAAA,KAAK,EAAEtB,KAAK,CAAC4C,KAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACCtB,CAAC,CAAC,kBAAD,CADF,CADF,eAIE,oBAAC,cAAD;AAAgB,IAAA,IAAI,EAAC,qFAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,CADF,eAOE,oBAAC,MAAD;AACE,IAAA,EAAE,EAAC,2BADL;AAEE,IAAA,QAAQ,EAAEK,UAFZ;AAGE,IAAA,MAAM,EACJA,UAAU,GACN,MAAM;AACJC,MAAAA,gBAAgB;AAChBI,MAAAA,mBAAmB,CAAC,KAAD,CAAnB;AACD,KAJK,GAKN,MAAM;AACJX,MAAAA,MAAM;AACNW,MAAAA,mBAAmB,CAAC,IAAD,CAAnB;AACD,KAZT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPF,CAbF,eAoCE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD,CAAM,KAAN;AAAY,IAAA,UAAU,EAAE,GAAxB;AAA6B,IAAA,QAAQ,EAAE,EAAvC;AAA2C,IAAA,KAAK,EAAEhC,KAAK,CAAC4C,KAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGtB,CAAC,CAAC,gBAAD,CADJ,CADF,CADF,eAME,oBAAC,MAAD;AAAQ,IAAA,QAAQ,EAAEO,QAAlB;AAA4B,IAAA,MAAM,EAAEC,cAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANF,CApCF,CADF,CAhDJ,CADF;AAmGD","sourcesContent":["import React, { useRef, useEffect, useContext, useState } from 'react'\nimport { Settings, X } from 'react-feather'\nimport styled from 'styled-components'\n\nimport {\n  useUserSlippageTolerance,\n  useExpertModeManager,\n  useUserDeadline,\n  useDarkModeManager\n} from '../../state/user/hooks'\nimport SlippageTabs from '../SlippageTabs'\nimport { RowFixed, RowBetween } from '../Row'\nimport { TYPE } from '../../theme'\nimport QuestionHelper from '../QuestionHelper'\nimport Toggle from '../Toggle'\nimport { ThemeContext } from 'styled-components'\nimport { AutoColumn } from '../Column'\nimport { ButtonError } from '../Button'\nimport { useSettingsMenuOpen, useToggleSettingsMenu } from '../../state/application/hooks'\nimport { Text } from 'rebass'\nimport Modal from '../Modal'\nimport { useTranslation } from 'react-i18next'\n\nconst StyledMenuIcon = styled(Settings)`\n  height: 20px;\n  width: 20px;\n\n  > * {\n    stroke: ${({ theme }) => theme.text1};\n  }\n`\n\nconst StyledCloseIcon = styled(X)`\n  height: 20px;\n  width: 20px;\n  :hover {\n    cursor: pointer;\n  }\n\n  > * {\n    stroke: ${({ theme }) => theme.text1};\n  }\n`\n\nconst StyledMenuButton = styled.button`\n  position: relative;\n  width: 100%;\n  height: 100%;\n  border: none;\n  background-color: transparent;\n  margin: 0;\n  padding: 0;\n  height: 35px;\n  background-color: ${({ theme }) => theme.bg3};\n\n  padding: 0.15rem 0.5rem;\n  border-radius: 0.5rem;\n\n  :hover,\n  :focus {\n    cursor: pointer;\n    outline: none;\n    background-color: ${({ theme }) => theme.bg4};\n  }\n\n  svg {\n    margin-top: 2px;\n  }\n`\nconst EmojiWrapper = styled.div`\n  position: absolute;\n  bottom: -6px;\n  right: 0px;\n  font-size: 14px;\n`\n\nconst StyledMenu = styled.div`\n  margin-left: 0.5rem;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  position: relative;\n  border: none;\n  text-align: left;\n`\n\nconst MenuFlyout = styled.span`\n  min-width: 20.125rem;\n  background-color: ${({ theme }) => theme.bg1};\n  box-shadow: 0px 0px 1px rgba(0, 0, 0, 0.01), 0px 4px 8px rgba(0, 0, 0, 0.04), 0px 16px 24px rgba(0, 0, 0, 0.04),\n    0px 24px 32px rgba(0, 0, 0, 0.01);\n\n  border: 1px solid ${({ theme }) => theme.bg3};\n\n  border-radius: 0.5rem;\n  display: flex;\n  flex-direction: column;\n  font-size: 1rem;\n  position: absolute;\n  top: 3rem;\n  right: 0rem;\n  z-index: 100;\n\n  ${({ theme }) => theme.mediaWidth.upToExtraSmall`\n    min-width: 18.125rem;\n    right: -46px;\n  `};\n`\n\nconst Break = styled.div`\n  width: 100%;\n  height: 1px;\n  background-color: ${({ theme }) => theme.bg3};\n`\n\nconst ModalContentWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding: 2rem 0;\n  background-color: ${({ theme }) => theme.bg2};\n  border-radius: 20px;\n`\n\nexport default function SettingsTab() {\n  const node = useRef<HTMLDivElement>()\n  const open = useSettingsMenuOpen()\n  const toggle = useToggleSettingsMenu()\n  const { t } = useTranslation()\n\n  const theme = useContext(ThemeContext)\n  const [userSlippageTolerance, setUserslippageTolerance] = useUserSlippageTolerance()\n\n  const [deadline, setDeadline] = useUserDeadline()\n\n  const [expertMode, toggleExpertMode] = useExpertModeManager()\n\n  const [darkMode, toggleDarkMode] = useDarkModeManager()\n\n  // show confirmation view before turning on\n  const [showConfirmation, setShowConfirmation] = useState(false)\n\n  useEffect(() => {\n    const handleClickOutside = e => {\n      if (node.current?.contains(e.target) ?? false) {\n        return\n      }\n      toggle()\n    }\n\n    if (open) {\n      document.addEventListener('mousedown', handleClickOutside)\n    } else {\n      document.removeEventListener('mousedown', handleClickOutside)\n    }\n\n    return () => {\n      document.removeEventListener('mousedown', handleClickOutside)\n    }\n  }, [open, toggle])\n\n  return (\n    <StyledMenu ref={node}>\n      <Modal isOpen={showConfirmation} onDismiss={() => setShowConfirmation(false)} maxHeight={100}>\n        <ModalContentWrapper>\n          <AutoColumn gap=\"lg\">\n            <RowBetween style={{ padding: '0 2rem' }}>\n              <div />\n              <Text fontWeight={500} fontSize={20}>\n              {t('areYouSure')}\n              </Text>\n              <StyledCloseIcon onClick={() => setShowConfirmation(false)} />\n            </RowBetween>\n            <Break />\n            <AutoColumn gap=\"lg\" style={{ padding: '0 2rem' }}>\n              <Text fontWeight={500} fontSize={20}>\n              {t('expertModeTips1')}\n              </Text>\n              <Text fontWeight={600} fontSize={20}>\n              {t('expertModeTips2')}\n              </Text>\n              <ButtonError\n                error={true}\n                padding={'12px'}\n                onClick={() => {\n                  if (window.prompt(`Please type the word \"confirm\" to enable expert mode.`) === 'confirm') {\n                    toggleExpertMode()\n                    setShowConfirmation(false)\n                  }\n                }}\n              >\n                <Text fontSize={20} fontWeight={500} id=\"confirm-expert-mode\">\n                {t('turnOnExpertMode')}\n                </Text>\n              </ButtonError>\n            </AutoColumn>\n          </AutoColumn>\n        </ModalContentWrapper>\n      </Modal>\n      <StyledMenuButton onClick={toggle} id=\"open-settings-dialog-button\">\n        <StyledMenuIcon />\n        {expertMode && (\n          <EmojiWrapper>\n            <span role=\"img\" aria-label=\"wizard-icon\">\n              🧙\n            </span>\n          </EmojiWrapper>\n        )}\n      </StyledMenuButton>\n      {open && (\n        <MenuFlyout>\n          <AutoColumn gap=\"md\" style={{ padding: '1rem' }}>\n            <Text fontWeight={600} fontSize={14}>\n              {t('transactionSettings')}\n            </Text>\n            <SlippageTabs\n              rawSlippage={userSlippageTolerance}\n              setRawSlippage={setUserslippageTolerance}\n              deadline={deadline}\n              setDeadline={setDeadline}\n            />\n            <Text fontWeight={600} fontSize={14}>\n            {t('interfaceSettings')}\n            </Text>\n            <RowBetween>\n              <RowFixed>\n                <TYPE.black fontWeight={400} fontSize={14} color={theme.text2}>\n                {t('toggleExpertMode')}\n                </TYPE.black>\n                <QuestionHelper text=\"Bypasses confirmation modals and allows high slippage trades. Use at your own risk.\" />\n              </RowFixed>\n              <Toggle\n                id=\"toggle-expert-mode-button\"\n                isActive={expertMode}\n                toggle={\n                  expertMode\n                    ? () => {\n                        toggleExpertMode()\n                        setShowConfirmation(false)\n                      }\n                    : () => {\n                        toggle()\n                        setShowConfirmation(true)\n                      }\n                }\n              />\n            </RowBetween>\n            <RowBetween>\n              <RowFixed>\n                <TYPE.black fontWeight={400} fontSize={14} color={theme.text2}>\n                  {t('toggleDarkMode')}\n                </TYPE.black>\n              </RowFixed>\n              <Toggle isActive={darkMode} toggle={toggleDarkMode} />\n            </RowBetween>\n          </AutoColumn>\n        </MenuFlyout>\n      )}\n    </StyledMenu>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}