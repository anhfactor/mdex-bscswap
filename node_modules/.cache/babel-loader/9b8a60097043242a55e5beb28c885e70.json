{"ast":null,"code":"import React,{useCallback,useContext}from'react';import{AlertCircle,Info}from'react-feather';import{useDispatch}from'react-redux';import{ThemeContext}from'styled-components';import{useRemovePopup}from'../../state/application/hooks';import{acceptListUpdate}from'../../state/lists/actions';import{TYPE}from'../../theme';import{ButtonPrimary,ButtonSecondary}from'../Button';import{AutoColumn}from'../Column';import{AutoRow}from'../Row';function versionLabel(version){return\"v\".concat(version.major,\".\").concat(version.minor,\".\").concat(version.patch);}export default function ListUpdatePopup(_ref){var popKey=_ref.popKey,listUrl=_ref.listUrl,oldList=_ref.oldList,newList=_ref.newList,auto=_ref.auto;var removePopup=useRemovePopup();var removeThisPopup=useCallback(function(){return removePopup(popKey);},[popKey,removePopup]);var dispatch=useDispatch();var theme=useContext(ThemeContext);var updateList=useCallback(function(){if(auto)return;dispatch(acceptListUpdate(listUrl));removeThisPopup();},[auto,dispatch,listUrl,removeThisPopup]);return/*#__PURE__*/React.createElement(AutoRow,null,/*#__PURE__*/React.createElement(\"div\",{style:{paddingRight:16}},auto?/*#__PURE__*/React.createElement(Info,{color:theme.text2,size:24}):/*#__PURE__*/React.createElement(AlertCircle,{color:theme.red1,size:24}),' '),/*#__PURE__*/React.createElement(AutoColumn,{style:{flex:'1'},gap:\"8px\"},auto?/*#__PURE__*/React.createElement(TYPE.body,{fontWeight:500},\"The token list \\\"\",oldList.name,\"\\\" has been updated to\",' ',/*#__PURE__*/React.createElement(\"strong\",null,versionLabel(newList.version)),\".\"):/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(\"div\",null,\"A token list update is available for the list \\\"\",oldList.name,\"\\\" (\",versionLabel(oldList.version),' ',\"to \",versionLabel(newList.version),\").\"),/*#__PURE__*/React.createElement(AutoRow,null,/*#__PURE__*/React.createElement(\"div\",{style:{flexGrow:1,marginRight:6}},/*#__PURE__*/React.createElement(ButtonPrimary,{onClick:updateList},\"Update list\")),/*#__PURE__*/React.createElement(\"div\",{style:{flexGrow:1}},/*#__PURE__*/React.createElement(ButtonSecondary,{onClick:removeThisPopup},\"Dismiss\"))))));}","map":{"version":3,"sources":["/Users/lap14205/Documents/home/blockchain_learning/bscswap-interface/src/components/Popups/ListUpdatePopup.tsx"],"names":["React","useCallback","useContext","AlertCircle","Info","useDispatch","ThemeContext","useRemovePopup","acceptListUpdate","TYPE","ButtonPrimary","ButtonSecondary","AutoColumn","AutoRow","versionLabel","version","major","minor","patch","ListUpdatePopup","popKey","listUrl","oldList","newList","auto","removePopup","removeThisPopup","dispatch","theme","updateList","paddingRight","text2","red1","flex","name","flexGrow","marginRight"],"mappings":"AACA,MAAOA,CAAAA,KAAP,EAAgBC,WAAhB,CAA6BC,UAA7B,KAA+C,OAA/C,CACA,OAASC,WAAT,CAAsBC,IAAtB,KAAkC,eAAlC,CACA,OAASC,WAAT,KAA4B,aAA5B,CACA,OAASC,YAAT,KAA6B,mBAA7B,CAEA,OAASC,cAAT,KAA+B,+BAA/B,CACA,OAASC,gBAAT,KAAiC,2BAAjC,CACA,OAASC,IAAT,KAAqB,aAArB,CACA,OAASC,aAAT,CAAwBC,eAAxB,KAA+C,WAA/C,CACA,OAASC,UAAT,KAA2B,WAA3B,CACA,OAASC,OAAT,KAAwB,QAAxB,CAEA,QAASC,CAAAA,YAAT,CAAsBC,OAAtB,CAAgD,CAC9C,iBAAWA,OAAO,CAACC,KAAnB,aAA4BD,OAAO,CAACE,KAApC,aAA6CF,OAAO,CAACG,KAArD,EACD,CAED,cAAe,SAASC,CAAAA,eAAT,MAYZ,IAXDC,CAAAA,MAWC,MAXDA,MAWC,CAVDC,OAUC,MAVDA,OAUC,CATDC,OASC,MATDA,OASC,CARDC,OAQC,MARDA,OAQC,CAPDC,IAOC,MAPDA,IAOC,CACD,GAAMC,CAAAA,WAAW,CAAGlB,cAAc,EAAlC,CACA,GAAMmB,CAAAA,eAAe,CAAGzB,WAAW,CAAC,iBAAMwB,CAAAA,WAAW,CAACL,MAAD,CAAjB,EAAD,CAA4B,CAACA,MAAD,CAASK,WAAT,CAA5B,CAAnC,CACA,GAAME,CAAAA,QAAQ,CAAGtB,WAAW,EAA5B,CACA,GAAMuB,CAAAA,KAAK,CAAG1B,UAAU,CAACI,YAAD,CAAxB,CAEA,GAAMuB,CAAAA,UAAU,CAAG5B,WAAW,CAAC,UAAM,CACnC,GAAIuB,IAAJ,CAAU,OACVG,QAAQ,CAACnB,gBAAgB,CAACa,OAAD,CAAjB,CAAR,CACAK,eAAe,GAChB,CAJ6B,CAI3B,CAACF,IAAD,CAAOG,QAAP,CAAiBN,OAAjB,CAA0BK,eAA1B,CAJ2B,CAA9B,CAMA,mBACE,oBAAC,OAAD,mBACE,2BAAK,KAAK,CAAE,CAAEI,YAAY,CAAE,EAAhB,CAAZ,EACGN,IAAI,cAAG,oBAAC,IAAD,EAAM,KAAK,CAAEI,KAAK,CAACG,KAAnB,CAA0B,IAAI,CAAE,EAAhC,EAAH,cAA4C,oBAAC,WAAD,EAAa,KAAK,CAAEH,KAAK,CAACI,IAA1B,CAAgC,IAAI,CAAE,EAAtC,EADnD,CACiG,GADjG,CADF,cAIE,oBAAC,UAAD,EAAY,KAAK,CAAE,CAAEC,IAAI,CAAE,GAAR,CAAnB,CAAkC,GAAG,CAAC,KAAtC,EACGT,IAAI,cACH,oBAAC,IAAD,CAAM,IAAN,EAAW,UAAU,CAAE,GAAvB,sBACwBF,OAAO,CAACY,IADhC,0BACgE,GADhE,cAEE,kCAASpB,YAAY,CAACS,OAAO,CAACR,OAAT,CAArB,CAFF,KADG,cAMH,qDACE,kFACuDO,OAAO,CAACY,IAD/D,QAC6EpB,YAAY,CAACQ,OAAO,CAACP,OAAT,CADzF,CAC4G,GAD5G,OAEMD,YAAY,CAACS,OAAO,CAACR,OAAT,CAFlB,MADF,cAKE,oBAAC,OAAD,mBACE,2BAAK,KAAK,CAAE,CAAEoB,QAAQ,CAAE,CAAZ,CAAeC,WAAW,CAAE,CAA5B,CAAZ,eACE,oBAAC,aAAD,EAAe,OAAO,CAAEP,UAAxB,gBADF,CADF,cAIE,2BAAK,KAAK,CAAE,CAAEM,QAAQ,CAAE,CAAZ,CAAZ,eACE,oBAAC,eAAD,EAAiB,OAAO,CAAET,eAA1B,YADF,CAJF,CALF,CAPJ,CAJF,CADF,CA8BD","sourcesContent":["import { TokenList, Version } from '@uniswap/token-lists'\nimport React, { useCallback, useContext } from 'react'\nimport { AlertCircle, Info } from 'react-feather'\nimport { useDispatch } from 'react-redux'\nimport { ThemeContext } from 'styled-components'\nimport { AppDispatch } from '../../state'\nimport { useRemovePopup } from '../../state/application/hooks'\nimport { acceptListUpdate } from '../../state/lists/actions'\nimport { TYPE } from '../../theme'\nimport { ButtonPrimary, ButtonSecondary } from '../Button'\nimport { AutoColumn } from '../Column'\nimport { AutoRow } from '../Row'\n\nfunction versionLabel(version: Version): string {\n  return `v${version.major}.${version.minor}.${version.patch}`\n}\n\nexport default function ListUpdatePopup({\n  popKey,\n  listUrl,\n  oldList,\n  newList,\n  auto\n}: {\n  popKey: string\n  listUrl: string\n  oldList: TokenList\n  newList: TokenList\n  auto: boolean\n}) {\n  const removePopup = useRemovePopup()\n  const removeThisPopup = useCallback(() => removePopup(popKey), [popKey, removePopup])\n  const dispatch = useDispatch<AppDispatch>()\n  const theme = useContext(ThemeContext)\n\n  const updateList = useCallback(() => {\n    if (auto) return\n    dispatch(acceptListUpdate(listUrl))\n    removeThisPopup()\n  }, [auto, dispatch, listUrl, removeThisPopup])\n\n  return (\n    <AutoRow>\n      <div style={{ paddingRight: 16 }}>\n        {auto ? <Info color={theme.text2} size={24} /> : <AlertCircle color={theme.red1} size={24} />}{' '}\n      </div>\n      <AutoColumn style={{ flex: '1' }} gap=\"8px\">\n        {auto ? (\n          <TYPE.body fontWeight={500}>\n            The token list &quot;{oldList.name}&quot; has been updated to{' '}\n            <strong>{versionLabel(newList.version)}</strong>.\n          </TYPE.body>\n        ) : (\n          <>\n            <div>\n              A token list update is available for the list &quot;{oldList.name}&quot; ({versionLabel(oldList.version)}{' '}\n              to {versionLabel(newList.version)}).\n            </div>\n            <AutoRow>\n              <div style={{ flexGrow: 1, marginRight: 6 }}>\n                <ButtonPrimary onClick={updateList}>Update list</ButtonPrimary>\n              </div>\n              <div style={{ flexGrow: 1 }}>\n                <ButtonSecondary onClick={removeThisPopup}>Dismiss</ButtonSecondary>\n              </div>\n            </AutoRow>\n          </>\n        )}\n      </AutoColumn>\n    </AutoRow>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}