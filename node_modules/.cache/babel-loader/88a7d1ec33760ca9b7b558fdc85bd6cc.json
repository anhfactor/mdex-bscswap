{"ast":null,"code":"import { useEffect, useState } from 'react';\nimport { useActiveWeb3React } from './index';\n/**\n * Does a lookup for an ENS name to find its address.\n */\n\nexport default function useENSAddress(ensName) {\n  const {\n    library\n  } = useActiveWeb3React();\n  const [address, setAddress] = useState({\n    loading: false,\n    address: null\n  });\n  useEffect(() => {\n    if (!library || typeof ensName !== 'string') {\n      setAddress({\n        loading: false,\n        address: null\n      });\n      return;\n    } else {\n      let stale = false;\n      setAddress({\n        loading: true,\n        address: null\n      });\n      library.resolveName(ensName).then(address => {\n        if (!stale) {\n          if (address) {\n            setAddress({\n              loading: false,\n              address\n            });\n          } else {\n            setAddress({\n              loading: false,\n              address: null\n            });\n          }\n        }\n      }).catch(() => {\n        if (!stale) {\n          setAddress({\n            loading: false,\n            address: null\n          });\n        }\n      });\n      return () => {\n        stale = true;\n      };\n    }\n  }, [library, ensName]);\n  return address;\n}","map":{"version":3,"sources":["/Users/lap14205/Documents/home/blockchain_learning/mdex-bscswap/src/hooks/useENSAddress.ts"],"names":["useEffect","useState","useActiveWeb3React","useENSAddress","ensName","library","address","setAddress","loading","stale","resolveName","then","catch"],"mappings":"AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,kBAAT,QAAmC,SAAnC;AAEA;;;;AAGA,eAAe,SAASC,aAAT,CAAuBC,OAAvB,EAA8F;AAC3G,QAAM;AAAEC,IAAAA;AAAF,MAAcH,kBAAkB,EAAtC;AAEA,QAAM,CAACI,OAAD,EAAUC,UAAV,IAAwBN,QAAQ,CAA+C;AACnFO,IAAAA,OAAO,EAAE,KAD0E;AAEnFF,IAAAA,OAAO,EAAE;AAF0E,GAA/C,CAAtC;AAKAN,EAAAA,SAAS,CAAC,MAAM;AACd,QAAI,CAACK,OAAD,IAAY,OAAOD,OAAP,KAAmB,QAAnC,EAA6C;AAC3CG,MAAAA,UAAU,CAAC;AAAEC,QAAAA,OAAO,EAAE,KAAX;AAAkBF,QAAAA,OAAO,EAAE;AAA3B,OAAD,CAAV;AACA;AACD,KAHD,MAGO;AACL,UAAIG,KAAK,GAAG,KAAZ;AACAF,MAAAA,UAAU,CAAC;AAAEC,QAAAA,OAAO,EAAE,IAAX;AAAiBF,QAAAA,OAAO,EAAE;AAA1B,OAAD,CAAV;AACAD,MAAAA,OAAO,CACJK,WADH,CACeN,OADf,EAEGO,IAFH,CAEQL,OAAO,IAAI;AACf,YAAI,CAACG,KAAL,EAAY;AACV,cAAIH,OAAJ,EAAa;AACXC,YAAAA,UAAU,CAAC;AAAEC,cAAAA,OAAO,EAAE,KAAX;AAAkBF,cAAAA;AAAlB,aAAD,CAAV;AACD,WAFD,MAEO;AACLC,YAAAA,UAAU,CAAC;AAAEC,cAAAA,OAAO,EAAE,KAAX;AAAkBF,cAAAA,OAAO,EAAE;AAA3B,aAAD,CAAV;AACD;AACF;AACF,OAVH,EAWGM,KAXH,CAWS,MAAM;AACX,YAAI,CAACH,KAAL,EAAY;AACVF,UAAAA,UAAU,CAAC;AAAEC,YAAAA,OAAO,EAAE,KAAX;AAAkBF,YAAAA,OAAO,EAAE;AAA3B,WAAD,CAAV;AACD;AACF,OAfH;AAiBA,aAAO,MAAM;AACXG,QAAAA,KAAK,GAAG,IAAR;AACD,OAFD;AAGD;AACF,GA5BQ,EA4BN,CAACJ,OAAD,EAAUD,OAAV,CA5BM,CAAT;AA8BA,SAAOE,OAAP;AACD","sourcesContent":["import { useEffect, useState } from 'react'\nimport { useActiveWeb3React } from './index'\n\n/**\n * Does a lookup for an ENS name to find its address.\n */\nexport default function useENSAddress(ensName?: string | null): { loading: boolean; address: string | null } {\n  const { library } = useActiveWeb3React()\n\n  const [address, setAddress] = useState<{ loading: boolean; address: string | null }>({\n    loading: false,\n    address: null\n  })\n\n  useEffect(() => {\n    if (!library || typeof ensName !== 'string') {\n      setAddress({ loading: false, address: null })\n      return\n    } else {\n      let stale = false\n      setAddress({ loading: true, address: null })\n      library\n        .resolveName(ensName)\n        .then(address => {\n          if (!stale) {\n            if (address) {\n              setAddress({ loading: false, address })\n            } else {\n              setAddress({ loading: false, address: null })\n            }\n          }\n        })\n        .catch(() => {\n          if (!stale) {\n            setAddress({ loading: false, address: null })\n          }\n        })\n\n      return () => {\n        stale = true\n      }\n    }\n  }, [library, ensName])\n\n  return address\n}\n"]},"metadata":{},"sourceType":"module"}