{"ast":null,"code":"import _toConsumableArray from\"/Users/lap14205/Documents/home/blockchain_learning/bscswap-interface/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _defineProperty from\"/Users/lap14205/Documents/home/blockchain_learning/bscswap-interface/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _slicedToArray from\"/Users/lap14205/Documents/home/blockchain_learning/bscswap-interface/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useCallback,useContext,useEffect,useMemo,useRef,useState}from'react';import{isMobile}from'react-device-detect';import{useTranslation}from'react-i18next';import{Text}from'rebass';import{ThemeContext}from'styled-components';import Card from'../../components/Card';import{useActiveWeb3React}from'../../hooks';import{useAllTokens,useToken}from'../../hooks/Tokens';import useInterval from'../../hooks/useInterval';import{useAllTokenBalances,useTokenBalance}from'../../state/wallet/hooks';import{CloseIcon,LinkStyledButton}from'../../theme';import{isAddress}from'../../utils';import Column from'../Column';import Modal from'../Modal';import QuestionHelper from'../QuestionHelper';import{AutoRow,RowBetween}from'../Row';import Tooltip from'../Tooltip';import CommonBases from'./CommonBases';import{filterTokens}from'./filtering';import{useTokenComparator}from'./sorting';import{PaddedColumn,SearchInput}from'./styleds';import CurrencyList from'./CurrencyList';import SortButton from'./SortButton';export default function CurrencySearchModal(_ref){var isOpen=_ref.isOpen,onDismiss=_ref.onDismiss,onCurrencySelect=_ref.onCurrencySelect,hiddenCurrency=_ref.hiddenCurrency,showSendWithSwap=_ref.showSendWithSwap,otherSelectedCurrency=_ref.otherSelectedCurrency,_ref$showCommonBases=_ref.showCommonBases,showCommonBases=_ref$showCommonBases===void 0?false:_ref$showCommonBases;var _useTranslation=useTranslation(),t=_useTranslation.t;var _useActiveWeb3React=useActiveWeb3React(),account=_useActiveWeb3React.account,chainId=_useActiveWeb3React.chainId;var theme=useContext(ThemeContext);var _useState=useState(''),_useState2=_slicedToArray(_useState,2),searchQuery=_useState2[0],setSearchQuery=_useState2[1];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),tooltipOpen=_useState4[0],setTooltipOpen=_useState4[1];var _useState5=useState(false),_useState6=_slicedToArray(_useState5,2),invertSearchOrder=_useState6[0],setInvertSearchOrder=_useState6[1];var allTokens=useAllTokens();// if the current input is an address, and we don't have the token in context, try to fetch it and import\nvar searchToken=useToken(searchQuery);var searchTokenBalance=useTokenBalance(account,searchToken);var allTokenBalances_=useAllTokenBalances();var allTokenBalances=searchToken?_defineProperty({},searchToken.address,searchTokenBalance):allTokenBalances_!==null&&allTokenBalances_!==void 0?allTokenBalances_:{};var tokenComparator=useTokenComparator(invertSearchOrder);var filteredTokens=useMemo(function(){if(searchToken)return[searchToken];return filterTokens(Object.values(allTokens),searchQuery);},[searchToken,allTokens,searchQuery]);var filteredSortedTokens=useMemo(function(){if(searchToken)return[searchToken];var sorted=filteredTokens.sort(tokenComparator);var symbolMatch=searchQuery.toLowerCase().split(/\\s+/).filter(function(s){return s.length>0;});if(symbolMatch.length>1)return sorted;return[].concat(_toConsumableArray(searchToken?[searchToken]:[]),_toConsumableArray(sorted.filter(function(token){return token.symbol.toLowerCase()===symbolMatch[0];})),_toConsumableArray(sorted.filter(function(token){return token.symbol.toLowerCase()!==symbolMatch[0];})));},[filteredTokens,searchQuery,searchToken,tokenComparator]);var handleCurrencySelect=useCallback(function(currency){onCurrencySelect(currency);onDismiss();},[onDismiss,onCurrencySelect]);// clear the input on open\nuseEffect(function(){if(isOpen)setSearchQuery('');},[isOpen,setSearchQuery]);// manage focus on modal show\nvar inputRef=useRef();var handleInput=useCallback(function(event){var input=event.target.value;var checksummedInput=isAddress(input);setSearchQuery(checksummedInput||input);setTooltipOpen(false);},[]);var openTooltip=useCallback(function(){setTooltipOpen(true);},[setTooltipOpen]);var closeTooltip=useCallback(function(){return setTooltipOpen(false);},[setTooltipOpen]);useInterval(function(){setTooltipOpen(false);},tooltipOpen?4000:null,false);var handleEnter=useCallback(function(e){if(e.key==='Enter'&&filteredSortedTokens.length>0){if(filteredSortedTokens[0].symbol.toLowerCase()===searchQuery.trim().toLowerCase()||filteredSortedTokens.length===1){handleCurrencySelect(filteredSortedTokens[0]);}}},[filteredSortedTokens,handleCurrencySelect,searchQuery]);return/*#__PURE__*/React.createElement(Modal,{isOpen:isOpen,onDismiss:onDismiss,maxHeight:70,initialFocusRef:isMobile?undefined:inputRef,minHeight:70},/*#__PURE__*/React.createElement(Column,{style:{width:'100%'}},/*#__PURE__*/React.createElement(PaddedColumn,{gap:\"14px\"},/*#__PURE__*/React.createElement(RowBetween,null,/*#__PURE__*/React.createElement(Text,{fontWeight:500,fontSize:16},t('selectToken'),/*#__PURE__*/React.createElement(QuestionHelper,{disabled:tooltipOpen,text:t('findAToken')})),/*#__PURE__*/React.createElement(CloseIcon,{onClick:onDismiss})),/*#__PURE__*/React.createElement(Tooltip,{text:t('importAnyToken'),show:tooltipOpen,placement:\"bottom\"},/*#__PURE__*/React.createElement(SearchInput,{type:\"text\",id:\"token-search-input\",placeholder:t('tokenSearchPlaceholder'),value:searchQuery,ref:inputRef,onChange:handleInput,onFocus:closeTooltip,onBlur:closeTooltip,onKeyDown:handleEnter})),showCommonBases&&/*#__PURE__*/React.createElement(CommonBases,{chainId:chainId,onSelect:handleCurrencySelect,selectedCurrency:hiddenCurrency}),/*#__PURE__*/React.createElement(RowBetween,null,/*#__PURE__*/React.createElement(Text,{fontSize:14,fontWeight:500},t('tokenName')),/*#__PURE__*/React.createElement(SortButton,{ascending:invertSearchOrder,toggleSortOrder:function toggleSortOrder(){return setInvertSearchOrder(function(iso){return!iso;});}}))),/*#__PURE__*/React.createElement(\"div\",{style:{width:'100%',height:'1px',backgroundColor:theme.bg2}}),/*#__PURE__*/React.createElement(CurrencyList,{currencies:filteredSortedTokens,allBalances:allTokenBalances,onCurrencySelect:handleCurrencySelect,otherCurrency:otherSelectedCurrency,selectedCurrency:hiddenCurrency,showSendWithSwap:showSendWithSwap}),/*#__PURE__*/React.createElement(\"div\",{style:{width:'100%',height:'1px',backgroundColor:theme.bg2}}),/*#__PURE__*/React.createElement(Card,null,/*#__PURE__*/React.createElement(AutoRow,{justify:'center'},/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(LinkStyledButton,{style:{fontWeight:500,color:theme.text2,fontSize:16},onClick:openTooltip},t('havingTrouble')))))));}","map":{"version":3,"sources":["/Users/lap14205/Documents/home/blockchain_learning/bscswap-interface/src/components/SearchModal/CurrencySearchModal.tsx"],"names":["React","useCallback","useContext","useEffect","useMemo","useRef","useState","isMobile","useTranslation","Text","ThemeContext","Card","useActiveWeb3React","useAllTokens","useToken","useInterval","useAllTokenBalances","useTokenBalance","CloseIcon","LinkStyledButton","isAddress","Column","Modal","QuestionHelper","AutoRow","RowBetween","Tooltip","CommonBases","filterTokens","useTokenComparator","PaddedColumn","SearchInput","CurrencyList","SortButton","CurrencySearchModal","isOpen","onDismiss","onCurrencySelect","hiddenCurrency","showSendWithSwap","otherSelectedCurrency","showCommonBases","t","account","chainId","theme","searchQuery","setSearchQuery","tooltipOpen","setTooltipOpen","invertSearchOrder","setInvertSearchOrder","allTokens","searchToken","searchTokenBalance","allTokenBalances_","allTokenBalances","address","tokenComparator","filteredTokens","Object","values","filteredSortedTokens","sorted","sort","symbolMatch","toLowerCase","split","filter","s","length","token","symbol","handleCurrencySelect","currency","inputRef","handleInput","event","input","target","value","checksummedInput","openTooltip","closeTooltip","handleEnter","e","key","trim","undefined","width","iso","height","backgroundColor","bg2","fontWeight","color","text2","fontSize"],"mappings":"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","sourcesContent":["import { Currency, Token } from '@bscswap/sdk'\nimport React, { KeyboardEvent, useCallback, useContext, useEffect, useMemo, useRef, useState } from 'react'\nimport { isMobile } from 'react-device-detect'\nimport { useTranslation } from 'react-i18next'\nimport { Text } from 'rebass'\nimport { ThemeContext } from 'styled-components'\nimport Card from '../../components/Card'\nimport { useActiveWeb3React } from '../../hooks'\nimport { useAllTokens, useToken } from '../../hooks/Tokens'\nimport useInterval from '../../hooks/useInterval'\nimport { useAllTokenBalances, useTokenBalance } from '../../state/wallet/hooks'\nimport { CloseIcon, LinkStyledButton } from '../../theme'\nimport { isAddress } from '../../utils'\nimport Column from '../Column'\nimport Modal from '../Modal'\nimport QuestionHelper from '../QuestionHelper'\nimport { AutoRow, RowBetween } from '../Row'\nimport Tooltip from '../Tooltip'\nimport CommonBases from './CommonBases'\nimport { filterTokens } from './filtering'\nimport { useTokenComparator } from './sorting'\nimport { PaddedColumn, SearchInput } from './styleds'\nimport CurrencyList from './CurrencyList'\nimport SortButton from './SortButton'\n\ninterface CurrencySearchModalProps {\n  isOpen?: boolean\n  onDismiss?: () => void\n  hiddenCurrency?: Currency\n  showSendWithSwap?: boolean\n  onCurrencySelect?: (currency: Currency) => void\n  otherSelectedCurrency?: Currency\n  showCommonBases?: boolean\n}\n\nexport default function CurrencySearchModal({\n  isOpen,\n  onDismiss,\n  onCurrencySelect,\n  hiddenCurrency,\n  showSendWithSwap,\n  otherSelectedCurrency,\n  showCommonBases = false\n}: CurrencySearchModalProps) {\n  const { t } = useTranslation()\n  const { account, chainId } = useActiveWeb3React()\n  const theme = useContext(ThemeContext)\n\n  const [searchQuery, setSearchQuery] = useState<string>('')\n  const [tooltipOpen, setTooltipOpen] = useState<boolean>(false)\n  const [invertSearchOrder, setInvertSearchOrder] = useState<boolean>(false)\n  const allTokens = useAllTokens()\n\n  // if the current input is an address, and we don't have the token in context, try to fetch it and import\n  const searchToken = useToken(searchQuery)\n  const searchTokenBalance = useTokenBalance(account, searchToken)\n  const allTokenBalances_ = useAllTokenBalances()\n  const allTokenBalances = searchToken\n    ? {\n        [searchToken.address]: searchTokenBalance\n      }\n    : allTokenBalances_ ?? {}\n\n  const tokenComparator = useTokenComparator(invertSearchOrder)\n\n  const filteredTokens: Token[] = useMemo(() => {\n    if (searchToken) return [searchToken]\n    return filterTokens(Object.values(allTokens), searchQuery)\n  }, [searchToken, allTokens, searchQuery])\n\n  const filteredSortedTokens: Token[] = useMemo(() => {\n    if (searchToken) return [searchToken]\n    const sorted = filteredTokens.sort(tokenComparator)\n    const symbolMatch = searchQuery\n      .toLowerCase()\n      .split(/\\s+/)\n      .filter(s => s.length > 0)\n    if (symbolMatch.length > 1) return sorted\n\n    return [\n      ...(searchToken ? [searchToken] : []),\n      // sort any exact symbol matches first\n      ...sorted.filter(token => token.symbol.toLowerCase() === symbolMatch[0]),\n      ...sorted.filter(token => token.symbol.toLowerCase() !== symbolMatch[0])\n    ]\n  }, [filteredTokens, searchQuery, searchToken, tokenComparator])\n\n  const handleCurrencySelect = useCallback(\n    (currency: Currency) => {\n      onCurrencySelect(currency)\n      onDismiss()\n    },\n    [onDismiss, onCurrencySelect]\n  )\n\n  // clear the input on open\n  useEffect(() => {\n    if (isOpen) setSearchQuery('')\n  }, [isOpen, setSearchQuery])\n\n  // manage focus on modal show\n  const inputRef = useRef<HTMLInputElement>()\n  const handleInput = useCallback(event => {\n    const input = event.target.value\n    const checksummedInput = isAddress(input)\n    setSearchQuery(checksummedInput || input)\n    setTooltipOpen(false)\n  }, [])\n\n  const openTooltip = useCallback(() => {\n    setTooltipOpen(true)\n  }, [setTooltipOpen])\n  const closeTooltip = useCallback(() => setTooltipOpen(false), [setTooltipOpen])\n\n  useInterval(\n    () => {\n      setTooltipOpen(false)\n    },\n    tooltipOpen ? 4000 : null,\n    false\n  )\n\n  const handleEnter = useCallback(\n    (e: KeyboardEvent<HTMLInputElement>) => {\n      if (e.key === 'Enter' && filteredSortedTokens.length > 0) {\n        if (\n          filteredSortedTokens[0].symbol.toLowerCase() === searchQuery.trim().toLowerCase() ||\n          filteredSortedTokens.length === 1\n        ) {\n          handleCurrencySelect(filteredSortedTokens[0])\n        }\n      }\n    },\n    [filteredSortedTokens, handleCurrencySelect, searchQuery]\n  )\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      onDismiss={onDismiss}\n      maxHeight={70}\n      initialFocusRef={isMobile ? undefined : inputRef}\n      minHeight={70}\n    >\n      <Column style={{ width: '100%' }}>\n        <PaddedColumn gap=\"14px\">\n          <RowBetween>\n            <Text fontWeight={500} fontSize={16}>\n              {t('selectToken')}\n              <QuestionHelper\n                disabled={tooltipOpen}\n                text={t('findAToken')}\n              />\n            </Text>\n            <CloseIcon onClick={onDismiss} />\n          </RowBetween>\n          <Tooltip\n            text={t('importAnyToken')}\n            show={tooltipOpen}\n            placement=\"bottom\"\n          >\n            <SearchInput\n              type=\"text\"\n              id=\"token-search-input\"\n              placeholder={t('tokenSearchPlaceholder')}\n              value={searchQuery}\n              ref={inputRef}\n              onChange={handleInput}\n              onFocus={closeTooltip}\n              onBlur={closeTooltip}\n              onKeyDown={handleEnter}\n            />\n          </Tooltip>\n          {showCommonBases && (\n            <CommonBases chainId={chainId} onSelect={handleCurrencySelect} selectedCurrency={hiddenCurrency} />\n          )}\n          <RowBetween>\n            <Text fontSize={14} fontWeight={500}>\n              {t('tokenName')}\n            </Text>\n            <SortButton ascending={invertSearchOrder} toggleSortOrder={() => setInvertSearchOrder(iso => !iso)} />\n          </RowBetween>\n        </PaddedColumn>\n        <div style={{ width: '100%', height: '1px', backgroundColor: theme.bg2 }} />\n        <CurrencyList\n          currencies={filteredSortedTokens}\n          allBalances={allTokenBalances}\n          onCurrencySelect={handleCurrencySelect}\n          otherCurrency={otherSelectedCurrency}\n          selectedCurrency={hiddenCurrency}\n          showSendWithSwap={showSendWithSwap}\n        />\n        <div style={{ width: '100%', height: '1px', backgroundColor: theme.bg2 }} />\n        <Card>\n          <AutoRow justify={'center'}>\n            <div>\n              <LinkStyledButton style={{ fontWeight: 500, color: theme.text2, fontSize: 16 }} onClick={openTooltip}>\n                {t('havingTrouble')}\n              </LinkStyledButton>\n            </div>\n          </AutoRow>\n        </Card>\n      </Column>\n    </Modal>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}