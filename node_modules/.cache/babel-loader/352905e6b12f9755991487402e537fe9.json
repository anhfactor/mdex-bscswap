{"ast":null,"code":"import _slicedToArray from\"/Users/lap14205/Documents/home/blockchain_learning/mdex-bscswap/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{useEffect,useState}from'react';import{isAddress}from'../utils';import{useActiveWeb3React}from'./index';/**\n * Does a reverse lookup for an address to find its ENS name.\n * Note this is not the same as looking up an ENS name to find an address.\n */export default function useENSName(address){var _useActiveWeb3React=useActiveWeb3React(),library=_useActiveWeb3React.library;var _useState=useState({loading:false,ENSName:null}),_useState2=_slicedToArray(_useState,2),ENSName=_useState2[0],setENSName=_useState2[1];useEffect(function(){var validated=isAddress(address);if(!library||!validated){setENSName({loading:false,ENSName:null});return;}else{var stale=false;setENSName({loading:true,ENSName:null});library.lookupAddress(validated).then(function(name){if(!stale){if(name){setENSName({loading:false,ENSName:name});}else{setENSName({loading:false,ENSName:null});}}}).catch(function(){if(!stale){setENSName({loading:false,ENSName:null});}});return function(){stale=true;};}},[library,address]);return ENSName;}","map":{"version":3,"sources":["/Users/lap14205/Documents/home/blockchain_learning/mdex-bscswap/src/hooks/useENSName.ts"],"names":["useEffect","useState","isAddress","useActiveWeb3React","useENSName","address","library","loading","ENSName","setENSName","validated","stale","lookupAddress","then","name","catch"],"mappings":"sLAAA,OAASA,SAAT,CAAoBC,QAApB,KAAoC,OAApC,CACA,OAASC,SAAT,KAA0B,UAA1B,CACA,OAASC,kBAAT,KAAmC,SAAnC,CAEA;;;GAIA,cAAe,SAASC,CAAAA,UAAT,CAAoBC,OAApB,CAAoF,yBAC7EF,kBAAkB,EAD2D,CACzFG,OADyF,qBACzFA,OADyF,eAGnEL,QAAQ,CAA+C,CACnFM,OAAO,CAAE,KAD0E,CAEnFC,OAAO,CAAE,IAF0E,CAA/C,CAH2D,wCAG1FA,OAH0F,eAGjFC,UAHiF,eAQjGT,SAAS,CAAC,UAAM,CACd,GAAMU,CAAAA,SAAS,CAAGR,SAAS,CAACG,OAAD,CAA3B,CACA,GAAI,CAACC,OAAD,EAAY,CAACI,SAAjB,CAA4B,CAC1BD,UAAU,CAAC,CAAEF,OAAO,CAAE,KAAX,CAAkBC,OAAO,CAAE,IAA3B,CAAD,CAAV,CACA,OACD,CAHD,IAGO,CACL,GAAIG,CAAAA,KAAK,CAAG,KAAZ,CACAF,UAAU,CAAC,CAAEF,OAAO,CAAE,IAAX,CAAiBC,OAAO,CAAE,IAA1B,CAAD,CAAV,CACAF,OAAO,CACJM,aADH,CACiBF,SADjB,EAEGG,IAFH,CAEQ,SAAAC,IAAI,CAAI,CACZ,GAAI,CAACH,KAAL,CAAY,CACV,GAAIG,IAAJ,CAAU,CACRL,UAAU,CAAC,CAAEF,OAAO,CAAE,KAAX,CAAkBC,OAAO,CAAEM,IAA3B,CAAD,CAAV,CACD,CAFD,IAEO,CACLL,UAAU,CAAC,CAAEF,OAAO,CAAE,KAAX,CAAkBC,OAAO,CAAE,IAA3B,CAAD,CAAV,CACD,CACF,CACF,CAVH,EAWGO,KAXH,CAWS,UAAM,CACX,GAAI,CAACJ,KAAL,CAAY,CACVF,UAAU,CAAC,CAAEF,OAAO,CAAE,KAAX,CAAkBC,OAAO,CAAE,IAA3B,CAAD,CAAV,CACD,CACF,CAfH,EAiBA,MAAO,WAAM,CACXG,KAAK,CAAG,IAAR,CACD,CAFD,CAGD,CACF,CA7BQ,CA6BN,CAACL,OAAD,CAAUD,OAAV,CA7BM,CAAT,CA+BA,MAAOG,CAAAA,OAAP,CACD","sourcesContent":["import { useEffect, useState } from 'react'\nimport { isAddress } from '../utils'\nimport { useActiveWeb3React } from './index'\n\n/**\n * Does a reverse lookup for an address to find its ENS name.\n * Note this is not the same as looking up an ENS name to find an address.\n */\nexport default function useENSName(address?: string): { ENSName: string | null; loading: boolean } {\n  const { library } = useActiveWeb3React()\n\n  const [ENSName, setENSName] = useState<{ ENSName: string | null; loading: boolean }>({\n    loading: false,\n    ENSName: null\n  })\n\n  useEffect(() => {\n    const validated = isAddress(address)\n    if (!library || !validated) {\n      setENSName({ loading: false, ENSName: null })\n      return\n    } else {\n      let stale = false\n      setENSName({ loading: true, ENSName: null })\n      library\n        .lookupAddress(validated)\n        .then(name => {\n          if (!stale) {\n            if (name) {\n              setENSName({ loading: false, ENSName: name })\n            } else {\n              setENSName({ loading: false, ENSName: null })\n            }\n          }\n        })\n        .catch(() => {\n          if (!stale) {\n            setENSName({ loading: false, ENSName: null })\n          }\n        })\n\n      return () => {\n        stale = true\n      }\n    }\n  }, [library, address])\n\n  return ENSName\n}\n"]},"metadata":{},"sourceType":"module"}